Terminals unused in grammar

   OR
   UMINUS


State 68 conflicts: 1 shift/reduce


Grammar

    0 $accept: prog_start $end

    1 prog_start: %empty
    2           | Function prog_start

    3 Function: FUNCTION Ident SEMICOLON BEGIN_PARAMS Declaration_loop END_PARAMS BEGIN_LOCALS Declaration_loop END_LOCALS BEGIN_BODY Statement_loop END_BODY

    4 Declaration_loop: Declaration SEMICOLON Declaration_loop
    5                 | %empty

    6 Declaration: Ident_loop COLON INTEGER
    7            | Ident_loop COLON ARRAY L_SQUARE_BRACKET NUMBER R_SQUARE_BRACKET OF INTEGER

    8 Ident_loop: Ident
    9           | Ident COMMA Ident_loop

   10 Statement: Statement1
   11          | Statement2
   12          | Statement3
   13          | Statement4
   14          | Statement5
   15          | Statement6
   16          | Statement7
   17          | Statement8
   18          | Statement9

   19 Statement1: Var ASSIGN Expression

   20 Statement2: IF Bool-Expr THEN Statement_loop ElseStatement ENDIF

   21 Statement3: WHILE Bool-Expr BEGINLOOP Statement_loop ENDLOOP

   22 Statement4: DO BEGINLOOP Statement_loop ENDLOOP WHILE Bool-Expr

   23 Statement5: FOR Var ASSIGN NUMBER SEMICOLON Bool-Expr SEMICOLON Var ASSIGN Expression BEGINLOOP Statement_loop ENDLOOP

   24 Statement6: READ Var_loop

   25 Statement7: WRITE Var_loop

   26 Statement8: CONTINUE

   27 Statement9: RETURN Expression

   28 Statement_loop: Statement SEMICOLON Statement_loop
   29               | Statement SEMICOLON

   30 ElseStatement: ELSE Statement_loop
   31              | %empty

   32 Bool-Expr: Relation-And-Expr

   33 Relation-And-Expr: Relation-Expr
   34                  | Relation-Expr AND Relation-And-Expr

   35 Relation-Expr: NOT Relation-Expr_loop
   36              | Relation-Expr_loop

   37 Relation-Expr_loop: Expression Comp Expression
   38                   | TRUE
   39                   | FALSE
   40                   | L_PAREN Bool-Expr R_PAREN

   41 Comp: EQ
   42     | NEQ
   43     | LT
   44     | GT
   45     | LTE
   46     | GTE

   47 Expression: Multiplicative-Expr
   48           | Multiplicative-Expr SUB Expression
   49           | Multiplicative-Expr ADD Expression

   50 Expression_loop: Expression COMMA Expression_loop
   51                | Expression
   52                | %empty

   53 Multiplicative-Expr: Term
   54                    | MOD Term Multiplicative-Expr
   55                    | DIV Term Multiplicative-Expr
   56                    | MULT Term Multiplicative-Expr

   57 Term: Var
   58     | NUMBER
   59     | SUB Var
   60     | SUB NUMBER
   61     | L_PAREN Expression R_PAREN
   62     | SUB L_PAREN Expression R_PAREN
   63     | Ident L_PAREN Expression_loop R_PAREN

   64 Var: Ident
   65    | Ident L_SQUARE_BRACKET Expression R_SQUARE_BRACKET

   66 Var_loop: Var
   67         | Var COMMA Var_loop

   68 Ident: IDENT


Terminals, with rules where they appear

$end (0) 0
error (256)
IDENT (258) 68
NUMBER (259) 7 23 58 60
FUNCTION (260) 3
BEGIN_PARAMS (261) 3
END_PARAMS (262) 3
BEGIN_LOCALS (263) 3
END_LOCALS (264) 3
BEGIN_BODY (265) 3
END_BODY (266) 3
INTEGER (267) 6 7
ARRAY (268) 7
OF (269) 7
IF (270) 20
THEN (271) 20
ENDIF (272) 20
ELSE (273) 30
WHILE (274) 21 22
DO (275) 22
FOR (276) 23
BEGINLOOP (277) 21 22 23
ENDLOOP (278) 21 22 23
CONTINUE (279) 26
READ (280) 24
WRITE (281) 25
TRUE (282) 38
FALSE (283) 39
RETURN (284) 27
SEMICOLON (285) 3 4 23 28 29
COLON (286) 6 7
COMMA (287) 9 50 67
L_PAREN (288) 40 61 62 63
R_PAREN (289) 40 61 62 63
L_SQUARE_BRACKET (290) 7 65
R_SQUARE_BRACKET (291) 7 65
AND (292) 34
OR (293)
SUB (294) 48 59 60 62
ADD (295) 49
MULT (296) 56
DIV (297) 55
MOD (298) 54
EQ (299) 41
NEQ (300) 42
LT (301) 43
GT (302) 44
LTE (303) 45
GTE (304) 46
ASSIGN (305) 19 23
NOT (306) 35
UMINUS (307)


Nonterminals, with rules where they appear

$accept (53)
    on left: 0
prog_start (54)
    on left: 1 2, on right: 0 2
Function (55)
    on left: 3, on right: 2
Declaration_loop (56)
    on left: 4 5, on right: 3 4
Declaration (57)
    on left: 6 7, on right: 4
Ident_loop (58)
    on left: 8 9, on right: 6 7 9
Statement (59)
    on left: 10 11 12 13 14 15 16 17 18, on right: 28 29
Statement1 (60)
    on left: 19, on right: 10
Statement2 (61)
    on left: 20, on right: 11
Statement3 (62)
    on left: 21, on right: 12
Statement4 (63)
    on left: 22, on right: 13
Statement5 (64)
    on left: 23, on right: 14
Statement6 (65)
    on left: 24, on right: 15
Statement7 (66)
    on left: 25, on right: 16
Statement8 (67)
    on left: 26, on right: 17
Statement9 (68)
    on left: 27, on right: 18
Statement_loop (69)
    on left: 28 29, on right: 3 20 21 22 23 28 30
ElseStatement (70)
    on left: 30 31, on right: 20
Bool-Expr (71)
    on left: 32, on right: 20 21 22 23 40
Relation-And-Expr (72)
    on left: 33 34, on right: 32 34
Relation-Expr (73)
    on left: 35 36, on right: 33 34
Relation-Expr_loop (74)
    on left: 37 38 39 40, on right: 35 36
Comp (75)
    on left: 41 42 43 44 45 46, on right: 37
Expression (76)
    on left: 47 48 49, on right: 19 23 27 37 48 49 50 51 61 62 65
Expression_loop (77)
    on left: 50 51 52, on right: 50 63
Multiplicative-Expr (78)
    on left: 53 54 55 56, on right: 47 48 49 54 55 56
Term (79)
    on left: 57 58 59 60 61 62 63, on right: 53 54 55 56
Var (80)
    on left: 64 65, on right: 19 23 57 59 66 67
Var_loop (81)
    on left: 66 67, on right: 24 25 67
Ident (82)
    on left: 68, on right: 3 8 9 63 64 65


State 0

    0 $accept: . prog_start $end

    FUNCTION  shift, and go to state 1

    $default  reduce using rule 1 (prog_start)

    prog_start  go to state 2
    Function    go to state 3


State 1

    3 Function: FUNCTION . Ident SEMICOLON BEGIN_PARAMS Declaration_loop END_PARAMS BEGIN_LOCALS Declaration_loop END_LOCALS BEGIN_BODY Statement_loop END_BODY

    IDENT  shift, and go to state 4

    Ident  go to state 5


State 2

    0 $accept: prog_start . $end

    $end  shift, and go to state 6


State 3

    2 prog_start: Function . prog_start

    FUNCTION  shift, and go to state 1

    $default  reduce using rule 1 (prog_start)

    prog_start  go to state 7
    Function    go to state 3


State 4

   68 Ident: IDENT .

    $default  reduce using rule 68 (Ident)


State 5

    3 Function: FUNCTION Ident . SEMICOLON BEGIN_PARAMS Declaration_loop END_PARAMS BEGIN_LOCALS Declaration_loop END_LOCALS BEGIN_BODY Statement_loop END_BODY

    SEMICOLON  shift, and go to state 8


State 6

    0 $accept: prog_start $end .

    $default  accept


State 7

    2 prog_start: Function prog_start .

    $default  reduce using rule 2 (prog_start)


State 8

    3 Function: FUNCTION Ident SEMICOLON . BEGIN_PARAMS Declaration_loop END_PARAMS BEGIN_LOCALS Declaration_loop END_LOCALS BEGIN_BODY Statement_loop END_BODY

    BEGIN_PARAMS  shift, and go to state 9


State 9

    3 Function: FUNCTION Ident SEMICOLON BEGIN_PARAMS . Declaration_loop END_PARAMS BEGIN_LOCALS Declaration_loop END_LOCALS BEGIN_BODY Statement_loop END_BODY

    IDENT  shift, and go to state 4

    $default  reduce using rule 5 (Declaration_loop)

    Declaration_loop  go to state 10
    Declaration       go to state 11
    Ident_loop        go to state 12
    Ident             go to state 13


State 10

    3 Function: FUNCTION Ident SEMICOLON BEGIN_PARAMS Declaration_loop . END_PARAMS BEGIN_LOCALS Declaration_loop END_LOCALS BEGIN_BODY Statement_loop END_BODY

    END_PARAMS  shift, and go to state 14


State 11

    4 Declaration_loop: Declaration . SEMICOLON Declaration_loop

    SEMICOLON  shift, and go to state 15


State 12

    6 Declaration: Ident_loop . COLON INTEGER
    7            | Ident_loop . COLON ARRAY L_SQUARE_BRACKET NUMBER R_SQUARE_BRACKET OF INTEGER

    COLON  shift, and go to state 16


State 13

    8 Ident_loop: Ident .
    9           | Ident . COMMA Ident_loop

    COMMA  shift, and go to state 17

    $default  reduce using rule 8 (Ident_loop)


State 14

    3 Function: FUNCTION Ident SEMICOLON BEGIN_PARAMS Declaration_loop END_PARAMS . BEGIN_LOCALS Declaration_loop END_LOCALS BEGIN_BODY Statement_loop END_BODY

    BEGIN_LOCALS  shift, and go to state 18


State 15

    4 Declaration_loop: Declaration SEMICOLON . Declaration_loop

    IDENT  shift, and go to state 4

    $default  reduce using rule 5 (Declaration_loop)

    Declaration_loop  go to state 19
    Declaration       go to state 11
    Ident_loop        go to state 12
    Ident             go to state 13


State 16

    6 Declaration: Ident_loop COLON . INTEGER
    7            | Ident_loop COLON . ARRAY L_SQUARE_BRACKET NUMBER R_SQUARE_BRACKET OF INTEGER

    INTEGER  shift, and go to state 20
    ARRAY    shift, and go to state 21


State 17

    9 Ident_loop: Ident COMMA . Ident_loop

    IDENT  shift, and go to state 4

    Ident_loop  go to state 22
    Ident       go to state 13


State 18

    3 Function: FUNCTION Ident SEMICOLON BEGIN_PARAMS Declaration_loop END_PARAMS BEGIN_LOCALS . Declaration_loop END_LOCALS BEGIN_BODY Statement_loop END_BODY

    IDENT  shift, and go to state 4

    $default  reduce using rule 5 (Declaration_loop)

    Declaration_loop  go to state 23
    Declaration       go to state 11
    Ident_loop        go to state 12
    Ident             go to state 13


State 19

    4 Declaration_loop: Declaration SEMICOLON Declaration_loop .

    $default  reduce using rule 4 (Declaration_loop)


State 20

    6 Declaration: Ident_loop COLON INTEGER .

    $default  reduce using rule 6 (Declaration)


State 21

    7 Declaration: Ident_loop COLON ARRAY . L_SQUARE_BRACKET NUMBER R_SQUARE_BRACKET OF INTEGER

    L_SQUARE_BRACKET  shift, and go to state 24


State 22

    9 Ident_loop: Ident COMMA Ident_loop .

    $default  reduce using rule 9 (Ident_loop)


State 23

    3 Function: FUNCTION Ident SEMICOLON BEGIN_PARAMS Declaration_loop END_PARAMS BEGIN_LOCALS Declaration_loop . END_LOCALS BEGIN_BODY Statement_loop END_BODY

    END_LOCALS  shift, and go to state 25


State 24

    7 Declaration: Ident_loop COLON ARRAY L_SQUARE_BRACKET . NUMBER R_SQUARE_BRACKET OF INTEGER

    NUMBER  shift, and go to state 26


State 25

    3 Function: FUNCTION Ident SEMICOLON BEGIN_PARAMS Declaration_loop END_PARAMS BEGIN_LOCALS Declaration_loop END_LOCALS . BEGIN_BODY Statement_loop END_BODY

    BEGIN_BODY  shift, and go to state 27


State 26

    7 Declaration: Ident_loop COLON ARRAY L_SQUARE_BRACKET NUMBER . R_SQUARE_BRACKET OF INTEGER

    R_SQUARE_BRACKET  shift, and go to state 28


State 27

    3 Function: FUNCTION Ident SEMICOLON BEGIN_PARAMS Declaration_loop END_PARAMS BEGIN_LOCALS Declaration_loop END_LOCALS BEGIN_BODY . Statement_loop END_BODY

    IDENT     shift, and go to state 4
    IF        shift, and go to state 29
    WHILE     shift, and go to state 30
    DO        shift, and go to state 31
    FOR       shift, and go to state 32
    CONTINUE  shift, and go to state 33
    READ      shift, and go to state 34
    WRITE     shift, and go to state 35
    RETURN    shift, and go to state 36

    Statement       go to state 37
    Statement1      go to state 38
    Statement2      go to state 39
    Statement3      go to state 40
    Statement4      go to state 41
    Statement5      go to state 42
    Statement6      go to state 43
    Statement7      go to state 44
    Statement8      go to state 45
    Statement9      go to state 46
    Statement_loop  go to state 47
    Var             go to state 48
    Ident           go to state 49


State 28

    7 Declaration: Ident_loop COLON ARRAY L_SQUARE_BRACKET NUMBER R_SQUARE_BRACKET . OF INTEGER

    OF  shift, and go to state 50


State 29

   20 Statement2: IF . Bool-Expr THEN Statement_loop ElseStatement ENDIF

    IDENT    shift, and go to state 4
    NUMBER   shift, and go to state 51
    TRUE     shift, and go to state 52
    FALSE    shift, and go to state 53
    L_PAREN  shift, and go to state 54
    SUB      shift, and go to state 55
    MULT     shift, and go to state 56
    DIV      shift, and go to state 57
    MOD      shift, and go to state 58
    NOT      shift, and go to state 59

    Bool-Expr            go to state 60
    Relation-And-Expr    go to state 61
    Relation-Expr        go to state 62
    Relation-Expr_loop   go to state 63
    Expression           go to state 64
    Multiplicative-Expr  go to state 65
    Term                 go to state 66
    Var                  go to state 67
    Ident                go to state 68


State 30

   21 Statement3: WHILE . Bool-Expr BEGINLOOP Statement_loop ENDLOOP

    IDENT    shift, and go to state 4
    NUMBER   shift, and go to state 51
    TRUE     shift, and go to state 52
    FALSE    shift, and go to state 53
    L_PAREN  shift, and go to state 54
    SUB      shift, and go to state 55
    MULT     shift, and go to state 56
    DIV      shift, and go to state 57
    MOD      shift, and go to state 58
    NOT      shift, and go to state 59

    Bool-Expr            go to state 69
    Relation-And-Expr    go to state 61
    Relation-Expr        go to state 62
    Relation-Expr_loop   go to state 63
    Expression           go to state 64
    Multiplicative-Expr  go to state 65
    Term                 go to state 66
    Var                  go to state 67
    Ident                go to state 68


State 31

   22 Statement4: DO . BEGINLOOP Statement_loop ENDLOOP WHILE Bool-Expr

    BEGINLOOP  shift, and go to state 70


State 32

   23 Statement5: FOR . Var ASSIGN NUMBER SEMICOLON Bool-Expr SEMICOLON Var ASSIGN Expression BEGINLOOP Statement_loop ENDLOOP

    IDENT  shift, and go to state 4

    Var    go to state 71
    Ident  go to state 49


State 33

   26 Statement8: CONTINUE .

    $default  reduce using rule 26 (Statement8)


State 34

   24 Statement6: READ . Var_loop

    IDENT  shift, and go to state 4

    Var       go to state 72
    Var_loop  go to state 73
    Ident     go to state 49


State 35

   25 Statement7: WRITE . Var_loop

    IDENT  shift, and go to state 4

    Var       go to state 72
    Var_loop  go to state 74
    Ident     go to state 49


State 36

   27 Statement9: RETURN . Expression

    IDENT    shift, and go to state 4
    NUMBER   shift, and go to state 51
    L_PAREN  shift, and go to state 75
    SUB      shift, and go to state 55
    MULT     shift, and go to state 56
    DIV      shift, and go to state 57
    MOD      shift, and go to state 58

    Expression           go to state 76
    Multiplicative-Expr  go to state 65
    Term                 go to state 66
    Var                  go to state 67
    Ident                go to state 68


State 37

   28 Statement_loop: Statement . SEMICOLON Statement_loop
   29               | Statement . SEMICOLON

    SEMICOLON  shift, and go to state 77


State 38

   10 Statement: Statement1 .

    $default  reduce using rule 10 (Statement)


State 39

   11 Statement: Statement2 .

    $default  reduce using rule 11 (Statement)


State 40

   12 Statement: Statement3 .

    $default  reduce using rule 12 (Statement)


State 41

   13 Statement: Statement4 .

    $default  reduce using rule 13 (Statement)


State 42

   14 Statement: Statement5 .

    $default  reduce using rule 14 (Statement)


State 43

   15 Statement: Statement6 .

    $default  reduce using rule 15 (Statement)


State 44

   16 Statement: Statement7 .

    $default  reduce using rule 16 (Statement)


State 45

   17 Statement: Statement8 .

    $default  reduce using rule 17 (Statement)


State 46

   18 Statement: Statement9 .

    $default  reduce using rule 18 (Statement)


State 47

    3 Function: FUNCTION Ident SEMICOLON BEGIN_PARAMS Declaration_loop END_PARAMS BEGIN_LOCALS Declaration_loop END_LOCALS BEGIN_BODY Statement_loop . END_BODY

    END_BODY  shift, and go to state 78


State 48

   19 Statement1: Var . ASSIGN Expression

    ASSIGN  shift, and go to state 79


State 49

   64 Var: Ident .
   65    | Ident . L_SQUARE_BRACKET Expression R_SQUARE_BRACKET

    L_SQUARE_BRACKET  shift, and go to state 80

    $default  reduce using rule 64 (Var)


State 50

    7 Declaration: Ident_loop COLON ARRAY L_SQUARE_BRACKET NUMBER R_SQUARE_BRACKET OF . INTEGER

    INTEGER  shift, and go to state 81


State 51

   58 Term: NUMBER .

    $default  reduce using rule 58 (Term)


State 52

   38 Relation-Expr_loop: TRUE .

    $default  reduce using rule 38 (Relation-Expr_loop)


State 53

   39 Relation-Expr_loop: FALSE .

    $default  reduce using rule 39 (Relation-Expr_loop)


State 54

   40 Relation-Expr_loop: L_PAREN . Bool-Expr R_PAREN
   61 Term: L_PAREN . Expression R_PAREN

    IDENT    shift, and go to state 4
    NUMBER   shift, and go to state 51
    TRUE     shift, and go to state 52
    FALSE    shift, and go to state 53
    L_PAREN  shift, and go to state 54
    SUB      shift, and go to state 55
    MULT     shift, and go to state 56
    DIV      shift, and go to state 57
    MOD      shift, and go to state 58
    NOT      shift, and go to state 59

    Bool-Expr            go to state 82
    Relation-And-Expr    go to state 61
    Relation-Expr        go to state 62
    Relation-Expr_loop   go to state 63
    Expression           go to state 83
    Multiplicative-Expr  go to state 65
    Term                 go to state 66
    Var                  go to state 67
    Ident                go to state 68


State 55

   59 Term: SUB . Var
   60     | SUB . NUMBER
   62     | SUB . L_PAREN Expression R_PAREN

    IDENT    shift, and go to state 4
    NUMBER   shift, and go to state 84
    L_PAREN  shift, and go to state 85

    Var    go to state 86
    Ident  go to state 49


State 56

   56 Multiplicative-Expr: MULT . Term Multiplicative-Expr

    IDENT    shift, and go to state 4
    NUMBER   shift, and go to state 51
    L_PAREN  shift, and go to state 75
    SUB      shift, and go to state 55

    Term   go to state 87
    Var    go to state 67
    Ident  go to state 68


State 57

   55 Multiplicative-Expr: DIV . Term Multiplicative-Expr

    IDENT    shift, and go to state 4
    NUMBER   shift, and go to state 51
    L_PAREN  shift, and go to state 75
    SUB      shift, and go to state 55

    Term   go to state 88
    Var    go to state 67
    Ident  go to state 68


State 58

   54 Multiplicative-Expr: MOD . Term Multiplicative-Expr

    IDENT    shift, and go to state 4
    NUMBER   shift, and go to state 51
    L_PAREN  shift, and go to state 75
    SUB      shift, and go to state 55

    Term   go to state 89
    Var    go to state 67
    Ident  go to state 68


State 59

   35 Relation-Expr: NOT . Relation-Expr_loop

    IDENT    shift, and go to state 4
    NUMBER   shift, and go to state 51
    TRUE     shift, and go to state 52
    FALSE    shift, and go to state 53
    L_PAREN  shift, and go to state 54
    SUB      shift, and go to state 55
    MULT     shift, and go to state 56
    DIV      shift, and go to state 57
    MOD      shift, and go to state 58

    Relation-Expr_loop   go to state 90
    Expression           go to state 64
    Multiplicative-Expr  go to state 65
    Term                 go to state 66
    Var                  go to state 67
    Ident                go to state 68


State 60

   20 Statement2: IF Bool-Expr . THEN Statement_loop ElseStatement ENDIF

    THEN  shift, and go to state 91


State 61

   32 Bool-Expr: Relation-And-Expr .

    $default  reduce using rule 32 (Bool-Expr)


State 62

   33 Relation-And-Expr: Relation-Expr .
   34                  | Relation-Expr . AND Relation-And-Expr

    AND  shift, and go to state 92

    $default  reduce using rule 33 (Relation-And-Expr)


State 63

   36 Relation-Expr: Relation-Expr_loop .

    $default  reduce using rule 36 (Relation-Expr)


State 64

   37 Relation-Expr_loop: Expression . Comp Expression

    EQ   shift, and go to state 93
    NEQ  shift, and go to state 94
    LT   shift, and go to state 95
    GT   shift, and go to state 96
    LTE  shift, and go to state 97
    GTE  shift, and go to state 98

    Comp  go to state 99


State 65

   47 Expression: Multiplicative-Expr .
   48           | Multiplicative-Expr . SUB Expression
   49           | Multiplicative-Expr . ADD Expression

    SUB  shift, and go to state 100
    ADD  shift, and go to state 101

    $default  reduce using rule 47 (Expression)


State 66

   53 Multiplicative-Expr: Term .

    $default  reduce using rule 53 (Multiplicative-Expr)


State 67

   57 Term: Var .

    $default  reduce using rule 57 (Term)


State 68

   63 Term: Ident . L_PAREN Expression_loop R_PAREN
   64 Var: Ident .
   65    | Ident . L_SQUARE_BRACKET Expression R_SQUARE_BRACKET

    L_PAREN           shift, and go to state 102
    L_SQUARE_BRACKET  shift, and go to state 80

    L_PAREN   [reduce using rule 64 (Var)]
    $default  reduce using rule 64 (Var)


State 69

   21 Statement3: WHILE Bool-Expr . BEGINLOOP Statement_loop ENDLOOP

    BEGINLOOP  shift, and go to state 103


State 70

   22 Statement4: DO BEGINLOOP . Statement_loop ENDLOOP WHILE Bool-Expr

    IDENT     shift, and go to state 4
    IF        shift, and go to state 29
    WHILE     shift, and go to state 30
    DO        shift, and go to state 31
    FOR       shift, and go to state 32
    CONTINUE  shift, and go to state 33
    READ      shift, and go to state 34
    WRITE     shift, and go to state 35
    RETURN    shift, and go to state 36

    Statement       go to state 37
    Statement1      go to state 38
    Statement2      go to state 39
    Statement3      go to state 40
    Statement4      go to state 41
    Statement5      go to state 42
    Statement6      go to state 43
    Statement7      go to state 44
    Statement8      go to state 45
    Statement9      go to state 46
    Statement_loop  go to state 104
    Var             go to state 48
    Ident           go to state 49


State 71

   23 Statement5: FOR Var . ASSIGN NUMBER SEMICOLON Bool-Expr SEMICOLON Var ASSIGN Expression BEGINLOOP Statement_loop ENDLOOP

    ASSIGN  shift, and go to state 105


State 72

   66 Var_loop: Var .
   67         | Var . COMMA Var_loop

    COMMA  shift, and go to state 106

    $default  reduce using rule 66 (Var_loop)


State 73

   24 Statement6: READ Var_loop .

    $default  reduce using rule 24 (Statement6)


State 74

   25 Statement7: WRITE Var_loop .

    $default  reduce using rule 25 (Statement7)


State 75

   61 Term: L_PAREN . Expression R_PAREN

    IDENT    shift, and go to state 4
    NUMBER   shift, and go to state 51
    L_PAREN  shift, and go to state 75
    SUB      shift, and go to state 55
    MULT     shift, and go to state 56
    DIV      shift, and go to state 57
    MOD      shift, and go to state 58

    Expression           go to state 107
    Multiplicative-Expr  go to state 65
    Term                 go to state 66
    Var                  go to state 67
    Ident                go to state 68


State 76

   27 Statement9: RETURN Expression .

    $default  reduce using rule 27 (Statement9)


State 77

   28 Statement_loop: Statement SEMICOLON . Statement_loop
   29               | Statement SEMICOLON .

    IDENT     shift, and go to state 4
    IF        shift, and go to state 29
    WHILE     shift, and go to state 30
    DO        shift, and go to state 31
    FOR       shift, and go to state 32
    CONTINUE  shift, and go to state 33
    READ      shift, and go to state 34
    WRITE     shift, and go to state 35
    RETURN    shift, and go to state 36

    $default  reduce using rule 29 (Statement_loop)

    Statement       go to state 37
    Statement1      go to state 38
    Statement2      go to state 39
    Statement3      go to state 40
    Statement4      go to state 41
    Statement5      go to state 42
    Statement6      go to state 43
    Statement7      go to state 44
    Statement8      go to state 45
    Statement9      go to state 46
    Statement_loop  go to state 108
    Var             go to state 48
    Ident           go to state 49


State 78

    3 Function: FUNCTION Ident SEMICOLON BEGIN_PARAMS Declaration_loop END_PARAMS BEGIN_LOCALS Declaration_loop END_LOCALS BEGIN_BODY Statement_loop END_BODY .

    $default  reduce using rule 3 (Function)


State 79

   19 Statement1: Var ASSIGN . Expression

    IDENT    shift, and go to state 4
    NUMBER   shift, and go to state 51
    L_PAREN  shift, and go to state 75
    SUB      shift, and go to state 55
    MULT     shift, and go to state 56
    DIV      shift, and go to state 57
    MOD      shift, and go to state 58

    Expression           go to state 109
    Multiplicative-Expr  go to state 65
    Term                 go to state 66
    Var                  go to state 67
    Ident                go to state 68


State 80

   65 Var: Ident L_SQUARE_BRACKET . Expression R_SQUARE_BRACKET

    IDENT    shift, and go to state 4
    NUMBER   shift, and go to state 51
    L_PAREN  shift, and go to state 75
    SUB      shift, and go to state 55
    MULT     shift, and go to state 56
    DIV      shift, and go to state 57
    MOD      shift, and go to state 58

    Expression           go to state 110
    Multiplicative-Expr  go to state 65
    Term                 go to state 66
    Var                  go to state 67
    Ident                go to state 68


State 81

    7 Declaration: Ident_loop COLON ARRAY L_SQUARE_BRACKET NUMBER R_SQUARE_BRACKET OF INTEGER .

    $default  reduce using rule 7 (Declaration)


State 82

   40 Relation-Expr_loop: L_PAREN Bool-Expr . R_PAREN

    R_PAREN  shift, and go to state 111


State 83

   37 Relation-Expr_loop: Expression . Comp Expression
   61 Term: L_PAREN Expression . R_PAREN

    R_PAREN  shift, and go to state 112
    EQ       shift, and go to state 93
    NEQ      shift, and go to state 94
    LT       shift, and go to state 95
    GT       shift, and go to state 96
    LTE      shift, and go to state 97
    GTE      shift, and go to state 98

    Comp  go to state 99


State 84

   60 Term: SUB NUMBER .

    $default  reduce using rule 60 (Term)


State 85

   62 Term: SUB L_PAREN . Expression R_PAREN

    IDENT    shift, and go to state 4
    NUMBER   shift, and go to state 51
    L_PAREN  shift, and go to state 75
    SUB      shift, and go to state 55
    MULT     shift, and go to state 56
    DIV      shift, and go to state 57
    MOD      shift, and go to state 58

    Expression           go to state 113
    Multiplicative-Expr  go to state 65
    Term                 go to state 66
    Var                  go to state 67
    Ident                go to state 68


State 86

   59 Term: SUB Var .

    $default  reduce using rule 59 (Term)


State 87

   56 Multiplicative-Expr: MULT Term . Multiplicative-Expr

    IDENT    shift, and go to state 4
    NUMBER   shift, and go to state 51
    L_PAREN  shift, and go to state 75
    SUB      shift, and go to state 55
    MULT     shift, and go to state 56
    DIV      shift, and go to state 57
    MOD      shift, and go to state 58

    Multiplicative-Expr  go to state 114
    Term                 go to state 66
    Var                  go to state 67
    Ident                go to state 68


State 88

   55 Multiplicative-Expr: DIV Term . Multiplicative-Expr

    IDENT    shift, and go to state 4
    NUMBER   shift, and go to state 51
    L_PAREN  shift, and go to state 75
    SUB      shift, and go to state 55
    MULT     shift, and go to state 56
    DIV      shift, and go to state 57
    MOD      shift, and go to state 58

    Multiplicative-Expr  go to state 115
    Term                 go to state 66
    Var                  go to state 67
    Ident                go to state 68


State 89

   54 Multiplicative-Expr: MOD Term . Multiplicative-Expr

    IDENT    shift, and go to state 4
    NUMBER   shift, and go to state 51
    L_PAREN  shift, and go to state 75
    SUB      shift, and go to state 55
    MULT     shift, and go to state 56
    DIV      shift, and go to state 57
    MOD      shift, and go to state 58

    Multiplicative-Expr  go to state 116
    Term                 go to state 66
    Var                  go to state 67
    Ident                go to state 68


State 90

   35 Relation-Expr: NOT Relation-Expr_loop .

    $default  reduce using rule 35 (Relation-Expr)


State 91

   20 Statement2: IF Bool-Expr THEN . Statement_loop ElseStatement ENDIF

    IDENT     shift, and go to state 4
    IF        shift, and go to state 29
    WHILE     shift, and go to state 30
    DO        shift, and go to state 31
    FOR       shift, and go to state 32
    CONTINUE  shift, and go to state 33
    READ      shift, and go to state 34
    WRITE     shift, and go to state 35
    RETURN    shift, and go to state 36

    Statement       go to state 37
    Statement1      go to state 38
    Statement2      go to state 39
    Statement3      go to state 40
    Statement4      go to state 41
    Statement5      go to state 42
    Statement6      go to state 43
    Statement7      go to state 44
    Statement8      go to state 45
    Statement9      go to state 46
    Statement_loop  go to state 117
    Var             go to state 48
    Ident           go to state 49


State 92

   34 Relation-And-Expr: Relation-Expr AND . Relation-And-Expr

    IDENT    shift, and go to state 4
    NUMBER   shift, and go to state 51
    TRUE     shift, and go to state 52
    FALSE    shift, and go to state 53
    L_PAREN  shift, and go to state 54
    SUB      shift, and go to state 55
    MULT     shift, and go to state 56
    DIV      shift, and go to state 57
    MOD      shift, and go to state 58
    NOT      shift, and go to state 59

    Relation-And-Expr    go to state 118
    Relation-Expr        go to state 62
    Relation-Expr_loop   go to state 63
    Expression           go to state 64
    Multiplicative-Expr  go to state 65
    Term                 go to state 66
    Var                  go to state 67
    Ident                go to state 68


State 93

   41 Comp: EQ .

    $default  reduce using rule 41 (Comp)


State 94

   42 Comp: NEQ .

    $default  reduce using rule 42 (Comp)


State 95

   43 Comp: LT .

    $default  reduce using rule 43 (Comp)


State 96

   44 Comp: GT .

    $default  reduce using rule 44 (Comp)


State 97

   45 Comp: LTE .

    $default  reduce using rule 45 (Comp)


State 98

   46 Comp: GTE .

    $default  reduce using rule 46 (Comp)


State 99

   37 Relation-Expr_loop: Expression Comp . Expression

    IDENT    shift, and go to state 4
    NUMBER   shift, and go to state 51
    L_PAREN  shift, and go to state 75
    SUB      shift, and go to state 55
    MULT     shift, and go to state 56
    DIV      shift, and go to state 57
    MOD      shift, and go to state 58

    Expression           go to state 119
    Multiplicative-Expr  go to state 65
    Term                 go to state 66
    Var                  go to state 67
    Ident                go to state 68


State 100

   48 Expression: Multiplicative-Expr SUB . Expression

    IDENT    shift, and go to state 4
    NUMBER   shift, and go to state 51
    L_PAREN  shift, and go to state 75
    SUB      shift, and go to state 55
    MULT     shift, and go to state 56
    DIV      shift, and go to state 57
    MOD      shift, and go to state 58

    Expression           go to state 120
    Multiplicative-Expr  go to state 65
    Term                 go to state 66
    Var                  go to state 67
    Ident                go to state 68


State 101

   49 Expression: Multiplicative-Expr ADD . Expression

    IDENT    shift, and go to state 4
    NUMBER   shift, and go to state 51
    L_PAREN  shift, and go to state 75
    SUB      shift, and go to state 55
    MULT     shift, and go to state 56
    DIV      shift, and go to state 57
    MOD      shift, and go to state 58

    Expression           go to state 121
    Multiplicative-Expr  go to state 65
    Term                 go to state 66
    Var                  go to state 67
    Ident                go to state 68


State 102

   63 Term: Ident L_PAREN . Expression_loop R_PAREN

    IDENT    shift, and go to state 4
    NUMBER   shift, and go to state 51
    L_PAREN  shift, and go to state 75
    SUB      shift, and go to state 55
    MULT     shift, and go to state 56
    DIV      shift, and go to state 57
    MOD      shift, and go to state 58

    $default  reduce using rule 52 (Expression_loop)

    Expression           go to state 122
    Expression_loop      go to state 123
    Multiplicative-Expr  go to state 65
    Term                 go to state 66
    Var                  go to state 67
    Ident                go to state 68


State 103

   21 Statement3: WHILE Bool-Expr BEGINLOOP . Statement_loop ENDLOOP

    IDENT     shift, and go to state 4
    IF        shift, and go to state 29
    WHILE     shift, and go to state 30
    DO        shift, and go to state 31
    FOR       shift, and go to state 32
    CONTINUE  shift, and go to state 33
    READ      shift, and go to state 34
    WRITE     shift, and go to state 35
    RETURN    shift, and go to state 36

    Statement       go to state 37
    Statement1      go to state 38
    Statement2      go to state 39
    Statement3      go to state 40
    Statement4      go to state 41
    Statement5      go to state 42
    Statement6      go to state 43
    Statement7      go to state 44
    Statement8      go to state 45
    Statement9      go to state 46
    Statement_loop  go to state 124
    Var             go to state 48
    Ident           go to state 49


State 104

   22 Statement4: DO BEGINLOOP Statement_loop . ENDLOOP WHILE Bool-Expr

    ENDLOOP  shift, and go to state 125


State 105

   23 Statement5: FOR Var ASSIGN . NUMBER SEMICOLON Bool-Expr SEMICOLON Var ASSIGN Expression BEGINLOOP Statement_loop ENDLOOP

    NUMBER  shift, and go to state 126


State 106

   67 Var_loop: Var COMMA . Var_loop

    IDENT  shift, and go to state 4

    Var       go to state 72
    Var_loop  go to state 127
    Ident     go to state 49


State 107

   61 Term: L_PAREN Expression . R_PAREN

    R_PAREN  shift, and go to state 112


State 108

   28 Statement_loop: Statement SEMICOLON Statement_loop .

    $default  reduce using rule 28 (Statement_loop)


State 109

   19 Statement1: Var ASSIGN Expression .

    $default  reduce using rule 19 (Statement1)


State 110

   65 Var: Ident L_SQUARE_BRACKET Expression . R_SQUARE_BRACKET

    R_SQUARE_BRACKET  shift, and go to state 128


State 111

   40 Relation-Expr_loop: L_PAREN Bool-Expr R_PAREN .

    $default  reduce using rule 40 (Relation-Expr_loop)


State 112

   61 Term: L_PAREN Expression R_PAREN .

    $default  reduce using rule 61 (Term)


State 113

   62 Term: SUB L_PAREN Expression . R_PAREN

    R_PAREN  shift, and go to state 129


State 114

   56 Multiplicative-Expr: MULT Term Multiplicative-Expr .

    $default  reduce using rule 56 (Multiplicative-Expr)


State 115

   55 Multiplicative-Expr: DIV Term Multiplicative-Expr .

    $default  reduce using rule 55 (Multiplicative-Expr)


State 116

   54 Multiplicative-Expr: MOD Term Multiplicative-Expr .

    $default  reduce using rule 54 (Multiplicative-Expr)


State 117

   20 Statement2: IF Bool-Expr THEN Statement_loop . ElseStatement ENDIF

    ELSE  shift, and go to state 130

    $default  reduce using rule 31 (ElseStatement)

    ElseStatement  go to state 131


State 118

   34 Relation-And-Expr: Relation-Expr AND Relation-And-Expr .

    $default  reduce using rule 34 (Relation-And-Expr)


State 119

   37 Relation-Expr_loop: Expression Comp Expression .

    $default  reduce using rule 37 (Relation-Expr_loop)


State 120

   48 Expression: Multiplicative-Expr SUB Expression .

    $default  reduce using rule 48 (Expression)


State 121

   49 Expression: Multiplicative-Expr ADD Expression .

    $default  reduce using rule 49 (Expression)


State 122

   50 Expression_loop: Expression . COMMA Expression_loop
   51                | Expression .

    COMMA  shift, and go to state 132

    $default  reduce using rule 51 (Expression_loop)


State 123

   63 Term: Ident L_PAREN Expression_loop . R_PAREN

    R_PAREN  shift, and go to state 133


State 124

   21 Statement3: WHILE Bool-Expr BEGINLOOP Statement_loop . ENDLOOP

    ENDLOOP  shift, and go to state 134


State 125

   22 Statement4: DO BEGINLOOP Statement_loop ENDLOOP . WHILE Bool-Expr

    WHILE  shift, and go to state 135


State 126

   23 Statement5: FOR Var ASSIGN NUMBER . SEMICOLON Bool-Expr SEMICOLON Var ASSIGN Expression BEGINLOOP Statement_loop ENDLOOP

    SEMICOLON  shift, and go to state 136


State 127

   67 Var_loop: Var COMMA Var_loop .

    $default  reduce using rule 67 (Var_loop)


State 128

   65 Var: Ident L_SQUARE_BRACKET Expression R_SQUARE_BRACKET .

    $default  reduce using rule 65 (Var)


State 129

   62 Term: SUB L_PAREN Expression R_PAREN .

    $default  reduce using rule 62 (Term)


State 130

   30 ElseStatement: ELSE . Statement_loop

    IDENT     shift, and go to state 4
    IF        shift, and go to state 29
    WHILE     shift, and go to state 30
    DO        shift, and go to state 31
    FOR       shift, and go to state 32
    CONTINUE  shift, and go to state 33
    READ      shift, and go to state 34
    WRITE     shift, and go to state 35
    RETURN    shift, and go to state 36

    Statement       go to state 37
    Statement1      go to state 38
    Statement2      go to state 39
    Statement3      go to state 40
    Statement4      go to state 41
    Statement5      go to state 42
    Statement6      go to state 43
    Statement7      go to state 44
    Statement8      go to state 45
    Statement9      go to state 46
    Statement_loop  go to state 137
    Var             go to state 48
    Ident           go to state 49


State 131

   20 Statement2: IF Bool-Expr THEN Statement_loop ElseStatement . ENDIF

    ENDIF  shift, and go to state 138


State 132

   50 Expression_loop: Expression COMMA . Expression_loop

    IDENT    shift, and go to state 4
    NUMBER   shift, and go to state 51
    L_PAREN  shift, and go to state 75
    SUB      shift, and go to state 55
    MULT     shift, and go to state 56
    DIV      shift, and go to state 57
    MOD      shift, and go to state 58

    $default  reduce using rule 52 (Expression_loop)

    Expression           go to state 122
    Expression_loop      go to state 139
    Multiplicative-Expr  go to state 65
    Term                 go to state 66
    Var                  go to state 67
    Ident                go to state 68


State 133

   63 Term: Ident L_PAREN Expression_loop R_PAREN .

    $default  reduce using rule 63 (Term)


State 134

   21 Statement3: WHILE Bool-Expr BEGINLOOP Statement_loop ENDLOOP .

    $default  reduce using rule 21 (Statement3)


State 135

   22 Statement4: DO BEGINLOOP Statement_loop ENDLOOP WHILE . Bool-Expr

    IDENT    shift, and go to state 4
    NUMBER   shift, and go to state 51
    TRUE     shift, and go to state 52
    FALSE    shift, and go to state 53
    L_PAREN  shift, and go to state 54
    SUB      shift, and go to state 55
    MULT     shift, and go to state 56
    DIV      shift, and go to state 57
    MOD      shift, and go to state 58
    NOT      shift, and go to state 59

    Bool-Expr            go to state 140
    Relation-And-Expr    go to state 61
    Relation-Expr        go to state 62
    Relation-Expr_loop   go to state 63
    Expression           go to state 64
    Multiplicative-Expr  go to state 65
    Term                 go to state 66
    Var                  go to state 67
    Ident                go to state 68


State 136

   23 Statement5: FOR Var ASSIGN NUMBER SEMICOLON . Bool-Expr SEMICOLON Var ASSIGN Expression BEGINLOOP Statement_loop ENDLOOP

    IDENT    shift, and go to state 4
    NUMBER   shift, and go to state 51
    TRUE     shift, and go to state 52
    FALSE    shift, and go to state 53
    L_PAREN  shift, and go to state 54
    SUB      shift, and go to state 55
    MULT     shift, and go to state 56
    DIV      shift, and go to state 57
    MOD      shift, and go to state 58
    NOT      shift, and go to state 59

    Bool-Expr            go to state 141
    Relation-And-Expr    go to state 61
    Relation-Expr        go to state 62
    Relation-Expr_loop   go to state 63
    Expression           go to state 64
    Multiplicative-Expr  go to state 65
    Term                 go to state 66
    Var                  go to state 67
    Ident                go to state 68


State 137

   30 ElseStatement: ELSE Statement_loop .

    $default  reduce using rule 30 (ElseStatement)


State 138

   20 Statement2: IF Bool-Expr THEN Statement_loop ElseStatement ENDIF .

    $default  reduce using rule 20 (Statement2)


State 139

   50 Expression_loop: Expression COMMA Expression_loop .

    $default  reduce using rule 50 (Expression_loop)


State 140

   22 Statement4: DO BEGINLOOP Statement_loop ENDLOOP WHILE Bool-Expr .

    $default  reduce using rule 22 (Statement4)


State 141

   23 Statement5: FOR Var ASSIGN NUMBER SEMICOLON Bool-Expr . SEMICOLON Var ASSIGN Expression BEGINLOOP Statement_loop ENDLOOP

    SEMICOLON  shift, and go to state 142


State 142

   23 Statement5: FOR Var ASSIGN NUMBER SEMICOLON Bool-Expr SEMICOLON . Var ASSIGN Expression BEGINLOOP Statement_loop ENDLOOP

    IDENT  shift, and go to state 4

    Var    go to state 143
    Ident  go to state 49


State 143

   23 Statement5: FOR Var ASSIGN NUMBER SEMICOLON Bool-Expr SEMICOLON Var . ASSIGN Expression BEGINLOOP Statement_loop ENDLOOP

    ASSIGN  shift, and go to state 144


State 144

   23 Statement5: FOR Var ASSIGN NUMBER SEMICOLON Bool-Expr SEMICOLON Var ASSIGN . Expression BEGINLOOP Statement_loop ENDLOOP

    IDENT    shift, and go to state 4
    NUMBER   shift, and go to state 51
    L_PAREN  shift, and go to state 75
    SUB      shift, and go to state 55
    MULT     shift, and go to state 56
    DIV      shift, and go to state 57
    MOD      shift, and go to state 58

    Expression           go to state 145
    Multiplicative-Expr  go to state 65
    Term                 go to state 66
    Var                  go to state 67
    Ident                go to state 68


State 145

   23 Statement5: FOR Var ASSIGN NUMBER SEMICOLON Bool-Expr SEMICOLON Var ASSIGN Expression . BEGINLOOP Statement_loop ENDLOOP

    BEGINLOOP  shift, and go to state 146


State 146

   23 Statement5: FOR Var ASSIGN NUMBER SEMICOLON Bool-Expr SEMICOLON Var ASSIGN Expression BEGINLOOP . Statement_loop ENDLOOP

    IDENT     shift, and go to state 4
    IF        shift, and go to state 29
    WHILE     shift, and go to state 30
    DO        shift, and go to state 31
    FOR       shift, and go to state 32
    CONTINUE  shift, and go to state 33
    READ      shift, and go to state 34
    WRITE     shift, and go to state 35
    RETURN    shift, and go to state 36

    Statement       go to state 37
    Statement1      go to state 38
    Statement2      go to state 39
    Statement3      go to state 40
    Statement4      go to state 41
    Statement5      go to state 42
    Statement6      go to state 43
    Statement7      go to state 44
    Statement8      go to state 45
    Statement9      go to state 46
    Statement_loop  go to state 147
    Var             go to state 48
    Ident           go to state 49


State 147

   23 Statement5: FOR Var ASSIGN NUMBER SEMICOLON Bool-Expr SEMICOLON Var ASSIGN Expression BEGINLOOP Statement_loop . ENDLOOP

    ENDLOOP  shift, and go to state 148


State 148

   23 Statement5: FOR Var ASSIGN NUMBER SEMICOLON Bool-Expr SEMICOLON Var ASSIGN Expression BEGINLOOP Statement_loop ENDLOOP .

    $default  reduce using rule 23 (Statement5)
