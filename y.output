Rules useless in parser due to conflicts

    9 Declaration: Declaration SEMICOLON Declaration

   20 Statement: Statement SEMICOLON Statement


State 15 conflicts: 1 shift/reduce
State 36 conflicts: 13 reduce/reduce
State 37 conflicts: 13 reduce/reduce
State 43 conflicts: 7 reduce/reduce
State 51 conflicts: 13 reduce/reduce
State 52 conflicts: 12 reduce/reduce
State 60 conflicts: 1 shift/reduce
State 67 conflicts: 7 reduce/reduce
State 71 conflicts: 7 reduce/reduce
State 72 conflicts: 7 reduce/reduce
State 78 conflicts: 13 reduce/reduce
State 81 conflicts: 7 reduce/reduce
State 82 conflicts: 1 shift/reduce
State 84 conflicts: 12 reduce/reduce
State 85 conflicts: 12 reduce/reduce
State 86 conflicts: 18 reduce/reduce
State 93 conflicts: 12 reduce/reduce
State 94 conflicts: 16 reduce/reduce
State 95 conflicts: 16 reduce/reduce
State 96 conflicts: 15 reduce/reduce
State 97 conflicts: 15 reduce/reduce
State 98 conflicts: 15 reduce/reduce
State 99 conflicts: 7 reduce/reduce
State 105 conflicts: 1 shift/reduce
State 106 conflicts: 1 shift/reduce
State 112 conflicts: 12 reduce/reduce
State 117 conflicts: 1 shift/reduce
State 134 conflicts: 18 reduce/reduce
State 137 conflicts: 13 reduce/reduce
State 141 conflicts: 13 reduce/reduce
State 149 conflicts: 7 reduce/reduce


Grammar

    0 $accept: prog_start $end

    1 prog_start: Function

    2 Function: %empty
    3         | FUNCTION Ident SEMICOLON BEGIN_PARAMS Declaration SEMICOLON END_PARAMS BEGIN_LOCALS Declaration SEMICOLON END_LOCALS BEGIN_BODY Statement SEMICOLON END_BODY

    4 Declaration: %empty
    5            | Ident COLON INTEGER
    6            | Ident COMMA Ident COLON INTEGER
    7            | Ident COLON ARRAY L_SQUARE_BRACKET NUMBER R_SQUARE_BRACKET OF INTEGER
    8            | Ident COMMA Ident COLON ARRAY L_SQUARE_BRACKET NUMBER R_SQUARE_BRACKET OF INTEGER
    9            | Declaration SEMICOLON Declaration

   10 Statement: Var ASSIGN Expression
   11          | IF Bool-Expr THEN Statement SEMICOLON ENDIF
   12          | IF Bool-Expr THEN Statement SEMICOLON ELSE Statement SEMICOLON ENDIF
   13          | WHILE Bool-Expr BEGINLOOP Statement SEMICOLON ENDLOOP
   14          | DO BEGINLOOP Statement SEMICOLON ENDLOOP WHILE Bool-Expr
   15          | FOR Var ASSIGN NUMBER SEMICOLON Bool-Expr SEMICOLON Var ASSIGN Expression BEGINLOOP Statement SEMICOLON ENDLOOP
   16          | READ Var
   17          | WRITE Var
   18          | CONTINUE
   19          | RETURN Expression
   20          | Statement SEMICOLON Statement

   21 Bool-Expr: %empty
   22          | Relation-And-Expr
   23          | Relation-And-Expr OR Relation-And-Expr

   24 Relation-And-Expr: %empty
   25                  | Relation-Expr
   26                  | Relation-Expr AND Relation-Expr

   27 Relation-Expr: Expression Comp Expression
   28              | TRUE
   29              | FALSE
   30              | L_PAREN Bool-Expr R_PAREN
   31              | NOT Expression Comp Expression
   32              | NOT TRUE
   33              | NOT FALSE
   34              | NOT L_PAREN Bool-Expr R_PAREN

   35 Comp: EQ
   36     | NEQ
   37     | LT
   38     | GT
   39     | LTE
   40     | GTE

   41 Expression: %empty
   42           | Multiplicative-Expr
   43           | Multiplicative-Expr SUB Multiplicative-Expr
   44           | Multiplicative-Expr ADD Multiplicative-Expr
   45           | Expression COMMA Expression

   46 Multiplicative-Expr: %empty
   47                    | Term
   48                    | Term MOD Term
   49                    | Term DIV Term
   50                    | Term MULT Term

   51 Term: %empty
   52     | Var
   53     | NUMBER
   54     | L_PAREN Expression R_PAREN
   55     | UMINUS Var
   56     | UMINUS NUMBER
   57     | UMINUS L_PAREN Expression R_PAREN
   58     | Ident L_PAREN Expression R_PAREN

   59 Var: %empty
   60    | Ident
   61    | Ident L_PAREN Expression R_PAREN
   62    | Var COMMA Var

   63 Ident: IDENT


Terminals, with rules where they appear

$end (0) 0
error (256)
IDENT (258) 63
NUMBER (259) 7 8 15 53 56
FUNCTION (260) 3
BEGIN_PARAMS (261) 3
END_PARAMS (262) 3
BEGIN_LOCALS (263) 3
END_LOCALS (264) 3
BEGIN_BODY (265) 3
END_BODY (266) 3
INTEGER (267) 5 6 7 8
ARRAY (268) 7 8
OF (269) 7 8
IF (270) 11 12
THEN (271) 11 12
ENDIF (272) 11 12
ELSE (273) 12
WHILE (274) 13 14
DO (275) 14
FOR (276) 15
BEGINLOOP (277) 13 14 15
ENDLOOP (278) 13 14 15
CONTINUE (279) 18
READ (280) 16
WRITE (281) 17
TRUE (282) 28 32
FALSE (283) 29 33
RETURN (284) 19
SEMICOLON (285) 3 9 11 12 13 14 15 20
COLON (286) 5 6 7 8
COMMA (287) 6 8 45 62
L_PAREN (288) 30 34 54 57 58 61
R_PAREN (289) 30 34 54 57 58 61
L_SQUARE_BRACKET (290) 7 8
R_SQUARE_BRACKET (291) 7 8
AND (292) 26
OR (293) 23
SUB (294) 43
ADD (295) 44
MULT (296) 50
DIV (297) 49
MOD (298) 48
EQ (299) 35
NEQ (300) 36
LT (301) 37
GT (302) 38
LTE (303) 39
GTE (304) 40
ASSIGN (305) 10 15
NOT (306) 31 32 33 34
UMINUS (307) 55 56 57


Nonterminals, with rules where they appear

$accept (53)
    on left: 0
prog_start (54)
    on left: 1, on right: 0
Function (55)
    on left: 2 3, on right: 1
Declaration (56)
    on left: 4 5 6 7 8 9, on right: 3 9
Statement (57)
    on left: 10 11 12 13 14 15 16 17 18 19 20, on right: 3 11 12 13
    14 15 20
Bool-Expr (58)
    on left: 21 22 23, on right: 11 12 13 14 15 30 34
Relation-And-Expr (59)
    on left: 24 25 26, on right: 22 23
Relation-Expr (60)
    on left: 27 28 29 30 31 32 33 34, on right: 25 26
Comp (61)
    on left: 35 36 37 38 39 40, on right: 27 31
Expression (62)
    on left: 41 42 43 44 45, on right: 10 15 19 27 31 45 54 57 58 61
Multiplicative-Expr (63)
    on left: 46 47 48 49 50, on right: 42 43 44
Term (64)
    on left: 51 52 53 54 55 56 57 58, on right: 47 48 49 50
Var (65)
    on left: 59 60 61 62, on right: 10 15 16 17 52 55 62
Ident (66)
    on left: 63, on right: 3 5 6 7 8 58 60 61


State 0

    0 $accept: . prog_start $end

    FUNCTION  shift, and go to state 1

    $default  reduce using rule 2 (Function)

    prog_start  go to state 2
    Function    go to state 3


State 1

    3 Function: FUNCTION . Ident SEMICOLON BEGIN_PARAMS Declaration SEMICOLON END_PARAMS BEGIN_LOCALS Declaration SEMICOLON END_LOCALS BEGIN_BODY Statement SEMICOLON END_BODY

    IDENT  shift, and go to state 4

    Ident  go to state 5


State 2

    0 $accept: prog_start . $end

    $end  shift, and go to state 6


State 3

    1 prog_start: Function .

    $default  reduce using rule 1 (prog_start)


State 4

   63 Ident: IDENT .

    $default  reduce using rule 63 (Ident)


State 5

    3 Function: FUNCTION Ident . SEMICOLON BEGIN_PARAMS Declaration SEMICOLON END_PARAMS BEGIN_LOCALS Declaration SEMICOLON END_LOCALS BEGIN_BODY Statement SEMICOLON END_BODY

    SEMICOLON  shift, and go to state 7


State 6

    0 $accept: prog_start $end .

    $default  accept


State 7

    3 Function: FUNCTION Ident SEMICOLON . BEGIN_PARAMS Declaration SEMICOLON END_PARAMS BEGIN_LOCALS Declaration SEMICOLON END_LOCALS BEGIN_BODY Statement SEMICOLON END_BODY

    BEGIN_PARAMS  shift, and go to state 8


State 8

    3 Function: FUNCTION Ident SEMICOLON BEGIN_PARAMS . Declaration SEMICOLON END_PARAMS BEGIN_LOCALS Declaration SEMICOLON END_LOCALS BEGIN_BODY Statement SEMICOLON END_BODY

    IDENT  shift, and go to state 4

    $default  reduce using rule 4 (Declaration)

    Declaration  go to state 9
    Ident        go to state 10


State 9

    3 Function: FUNCTION Ident SEMICOLON BEGIN_PARAMS Declaration . SEMICOLON END_PARAMS BEGIN_LOCALS Declaration SEMICOLON END_LOCALS BEGIN_BODY Statement SEMICOLON END_BODY
    9 Declaration: Declaration . SEMICOLON Declaration

    SEMICOLON  shift, and go to state 11


State 10

    5 Declaration: Ident . COLON INTEGER
    6            | Ident . COMMA Ident COLON INTEGER
    7            | Ident . COLON ARRAY L_SQUARE_BRACKET NUMBER R_SQUARE_BRACKET OF INTEGER
    8            | Ident . COMMA Ident COLON ARRAY L_SQUARE_BRACKET NUMBER R_SQUARE_BRACKET OF INTEGER

    COLON  shift, and go to state 12
    COMMA  shift, and go to state 13


State 11

    3 Function: FUNCTION Ident SEMICOLON BEGIN_PARAMS Declaration SEMICOLON . END_PARAMS BEGIN_LOCALS Declaration SEMICOLON END_LOCALS BEGIN_BODY Statement SEMICOLON END_BODY
    9 Declaration: Declaration SEMICOLON . Declaration

    IDENT       shift, and go to state 4
    END_PARAMS  shift, and go to state 14

    $default  reduce using rule 4 (Declaration)

    Declaration  go to state 15
    Ident        go to state 10


State 12

    5 Declaration: Ident COLON . INTEGER
    7            | Ident COLON . ARRAY L_SQUARE_BRACKET NUMBER R_SQUARE_BRACKET OF INTEGER

    INTEGER  shift, and go to state 16
    ARRAY    shift, and go to state 17


State 13

    6 Declaration: Ident COMMA . Ident COLON INTEGER
    8            | Ident COMMA . Ident COLON ARRAY L_SQUARE_BRACKET NUMBER R_SQUARE_BRACKET OF INTEGER

    IDENT  shift, and go to state 4

    Ident  go to state 18


State 14

    3 Function: FUNCTION Ident SEMICOLON BEGIN_PARAMS Declaration SEMICOLON END_PARAMS . BEGIN_LOCALS Declaration SEMICOLON END_LOCALS BEGIN_BODY Statement SEMICOLON END_BODY

    BEGIN_LOCALS  shift, and go to state 19


State 15

    9 Declaration: Declaration . SEMICOLON Declaration
    9            | Declaration SEMICOLON Declaration .

    SEMICOLON  shift, and go to state 20

    SEMICOLON  [reduce using rule 9 (Declaration)]


State 16

    5 Declaration: Ident COLON INTEGER .

    $default  reduce using rule 5 (Declaration)


State 17

    7 Declaration: Ident COLON ARRAY . L_SQUARE_BRACKET NUMBER R_SQUARE_BRACKET OF INTEGER

    L_SQUARE_BRACKET  shift, and go to state 21


State 18

    6 Declaration: Ident COMMA Ident . COLON INTEGER
    8            | Ident COMMA Ident . COLON ARRAY L_SQUARE_BRACKET NUMBER R_SQUARE_BRACKET OF INTEGER

    COLON  shift, and go to state 22


State 19

    3 Function: FUNCTION Ident SEMICOLON BEGIN_PARAMS Declaration SEMICOLON END_PARAMS BEGIN_LOCALS . Declaration SEMICOLON END_LOCALS BEGIN_BODY Statement SEMICOLON END_BODY

    IDENT  shift, and go to state 4

    $default  reduce using rule 4 (Declaration)

    Declaration  go to state 23
    Ident        go to state 10


State 20

    9 Declaration: Declaration SEMICOLON . Declaration

    IDENT  shift, and go to state 4

    $default  reduce using rule 4 (Declaration)

    Declaration  go to state 15
    Ident        go to state 10


State 21

    7 Declaration: Ident COLON ARRAY L_SQUARE_BRACKET . NUMBER R_SQUARE_BRACKET OF INTEGER

    NUMBER  shift, and go to state 24


State 22

    6 Declaration: Ident COMMA Ident COLON . INTEGER
    8            | Ident COMMA Ident COLON . ARRAY L_SQUARE_BRACKET NUMBER R_SQUARE_BRACKET OF INTEGER

    INTEGER  shift, and go to state 25
    ARRAY    shift, and go to state 26


State 23

    3 Function: FUNCTION Ident SEMICOLON BEGIN_PARAMS Declaration SEMICOLON END_PARAMS BEGIN_LOCALS Declaration . SEMICOLON END_LOCALS BEGIN_BODY Statement SEMICOLON END_BODY
    9 Declaration: Declaration . SEMICOLON Declaration

    SEMICOLON  shift, and go to state 27


State 24

    7 Declaration: Ident COLON ARRAY L_SQUARE_BRACKET NUMBER . R_SQUARE_BRACKET OF INTEGER

    R_SQUARE_BRACKET  shift, and go to state 28


State 25

    6 Declaration: Ident COMMA Ident COLON INTEGER .

    $default  reduce using rule 6 (Declaration)


State 26

    8 Declaration: Ident COMMA Ident COLON ARRAY . L_SQUARE_BRACKET NUMBER R_SQUARE_BRACKET OF INTEGER

    L_SQUARE_BRACKET  shift, and go to state 29


State 27

    3 Function: FUNCTION Ident SEMICOLON BEGIN_PARAMS Declaration SEMICOLON END_PARAMS BEGIN_LOCALS Declaration SEMICOLON . END_LOCALS BEGIN_BODY Statement SEMICOLON END_BODY
    9 Declaration: Declaration SEMICOLON . Declaration

    IDENT       shift, and go to state 4
    END_LOCALS  shift, and go to state 30

    $default  reduce using rule 4 (Declaration)

    Declaration  go to state 15
    Ident        go to state 10


State 28

    7 Declaration: Ident COLON ARRAY L_SQUARE_BRACKET NUMBER R_SQUARE_BRACKET . OF INTEGER

    OF  shift, and go to state 31


State 29

    8 Declaration: Ident COMMA Ident COLON ARRAY L_SQUARE_BRACKET . NUMBER R_SQUARE_BRACKET OF INTEGER

    NUMBER  shift, and go to state 32


State 30

    3 Function: FUNCTION Ident SEMICOLON BEGIN_PARAMS Declaration SEMICOLON END_PARAMS BEGIN_LOCALS Declaration SEMICOLON END_LOCALS . BEGIN_BODY Statement SEMICOLON END_BODY

    BEGIN_BODY  shift, and go to state 33


State 31

    7 Declaration: Ident COLON ARRAY L_SQUARE_BRACKET NUMBER R_SQUARE_BRACKET OF . INTEGER

    INTEGER  shift, and go to state 34


State 32

    8 Declaration: Ident COMMA Ident COLON ARRAY L_SQUARE_BRACKET NUMBER . R_SQUARE_BRACKET OF INTEGER

    R_SQUARE_BRACKET  shift, and go to state 35


State 33

    3 Function: FUNCTION Ident SEMICOLON BEGIN_PARAMS Declaration SEMICOLON END_PARAMS BEGIN_LOCALS Declaration SEMICOLON END_LOCALS BEGIN_BODY . Statement SEMICOLON END_BODY

    IDENT     shift, and go to state 4
    IF        shift, and go to state 36
    WHILE     shift, and go to state 37
    DO        shift, and go to state 38
    FOR       shift, and go to state 39
    CONTINUE  shift, and go to state 40
    READ      shift, and go to state 41
    WRITE     shift, and go to state 42
    RETURN    shift, and go to state 43

    $default  reduce using rule 59 (Var)

    Statement  go to state 44
    Var        go to state 45
    Ident      go to state 46


State 34

    7 Declaration: Ident COLON ARRAY L_SQUARE_BRACKET NUMBER R_SQUARE_BRACKET OF INTEGER .

    $default  reduce using rule 7 (Declaration)


State 35

    8 Declaration: Ident COMMA Ident COLON ARRAY L_SQUARE_BRACKET NUMBER R_SQUARE_BRACKET . OF INTEGER

    OF  shift, and go to state 47


State 36

   11 Statement: IF . Bool-Expr THEN Statement SEMICOLON ENDIF
   12          | IF . Bool-Expr THEN Statement SEMICOLON ELSE Statement SEMICOLON ENDIF

    IDENT    shift, and go to state 4
    NUMBER   shift, and go to state 48
    TRUE     shift, and go to state 49
    FALSE    shift, and go to state 50
    L_PAREN  shift, and go to state 51
    NOT      shift, and go to state 52
    UMINUS   shift, and go to state 53

    THEN      reduce using rule 21 (Bool-Expr)
    THEN      [reduce using rule 24 (Relation-And-Expr)]
    COMMA     reduce using rule 41 (Expression)
    COMMA     [reduce using rule 46 (Multiplicative-Expr)]
    COMMA     [reduce using rule 51 (Term)]
    COMMA     [reduce using rule 59 (Var)]
    OR        reduce using rule 24 (Relation-And-Expr)
    SUB       reduce using rule 46 (Multiplicative-Expr)
    SUB       [reduce using rule 51 (Term)]
    SUB       [reduce using rule 59 (Var)]
    ADD       reduce using rule 46 (Multiplicative-Expr)
    ADD       [reduce using rule 51 (Term)]
    ADD       [reduce using rule 59 (Var)]
    MULT      reduce using rule 51 (Term)
    MULT      [reduce using rule 59 (Var)]
    DIV       reduce using rule 51 (Term)
    DIV       [reduce using rule 59 (Var)]
    MOD       reduce using rule 51 (Term)
    MOD       [reduce using rule 59 (Var)]
    EQ        reduce using rule 41 (Expression)
    EQ        [reduce using rule 46 (Multiplicative-Expr)]
    EQ        [reduce using rule 51 (Term)]
    EQ        [reduce using rule 59 (Var)]
    NEQ       reduce using rule 41 (Expression)
    NEQ       [reduce using rule 46 (Multiplicative-Expr)]
    NEQ       [reduce using rule 51 (Term)]
    NEQ       [reduce using rule 59 (Var)]
    LT        reduce using rule 41 (Expression)
    LT        [reduce using rule 46 (Multiplicative-Expr)]
    LT        [reduce using rule 51 (Term)]
    LT        [reduce using rule 59 (Var)]
    GT        reduce using rule 41 (Expression)
    GT        [reduce using rule 46 (Multiplicative-Expr)]
    GT        [reduce using rule 51 (Term)]
    GT        [reduce using rule 59 (Var)]
    LTE       reduce using rule 41 (Expression)
    LTE       [reduce using rule 46 (Multiplicative-Expr)]
    LTE       [reduce using rule 51 (Term)]
    LTE       [reduce using rule 59 (Var)]
    GTE       reduce using rule 41 (Expression)
    GTE       [reduce using rule 46 (Multiplicative-Expr)]
    GTE       [reduce using rule 51 (Term)]
    GTE       [reduce using rule 59 (Var)]
    $default  reduce using rule 41 (Expression)

    Bool-Expr            go to state 54
    Relation-And-Expr    go to state 55
    Relation-Expr        go to state 56
    Expression           go to state 57
    Multiplicative-Expr  go to state 58
    Term                 go to state 59
    Var                  go to state 60
    Ident                go to state 61


State 37

   13 Statement: WHILE . Bool-Expr BEGINLOOP Statement SEMICOLON ENDLOOP

    IDENT    shift, and go to state 4
    NUMBER   shift, and go to state 48
    TRUE     shift, and go to state 49
    FALSE    shift, and go to state 50
    L_PAREN  shift, and go to state 51
    NOT      shift, and go to state 52
    UMINUS   shift, and go to state 53

    BEGINLOOP  reduce using rule 21 (Bool-Expr)
    BEGINLOOP  [reduce using rule 24 (Relation-And-Expr)]
    COMMA      reduce using rule 41 (Expression)
    COMMA      [reduce using rule 46 (Multiplicative-Expr)]
    COMMA      [reduce using rule 51 (Term)]
    COMMA      [reduce using rule 59 (Var)]
    OR         reduce using rule 24 (Relation-And-Expr)
    SUB        reduce using rule 46 (Multiplicative-Expr)
    SUB        [reduce using rule 51 (Term)]
    SUB        [reduce using rule 59 (Var)]
    ADD        reduce using rule 46 (Multiplicative-Expr)
    ADD        [reduce using rule 51 (Term)]
    ADD        [reduce using rule 59 (Var)]
    MULT       reduce using rule 51 (Term)
    MULT       [reduce using rule 59 (Var)]
    DIV        reduce using rule 51 (Term)
    DIV        [reduce using rule 59 (Var)]
    MOD        reduce using rule 51 (Term)
    MOD        [reduce using rule 59 (Var)]
    EQ         reduce using rule 41 (Expression)
    EQ         [reduce using rule 46 (Multiplicative-Expr)]
    EQ         [reduce using rule 51 (Term)]
    EQ         [reduce using rule 59 (Var)]
    NEQ        reduce using rule 41 (Expression)
    NEQ        [reduce using rule 46 (Multiplicative-Expr)]
    NEQ        [reduce using rule 51 (Term)]
    NEQ        [reduce using rule 59 (Var)]
    LT         reduce using rule 41 (Expression)
    LT         [reduce using rule 46 (Multiplicative-Expr)]
    LT         [reduce using rule 51 (Term)]
    LT         [reduce using rule 59 (Var)]
    GT         reduce using rule 41 (Expression)
    GT         [reduce using rule 46 (Multiplicative-Expr)]
    GT         [reduce using rule 51 (Term)]
    GT         [reduce using rule 59 (Var)]
    LTE        reduce using rule 41 (Expression)
    LTE        [reduce using rule 46 (Multiplicative-Expr)]
    LTE        [reduce using rule 51 (Term)]
    LTE        [reduce using rule 59 (Var)]
    GTE        reduce using rule 41 (Expression)
    GTE        [reduce using rule 46 (Multiplicative-Expr)]
    GTE        [reduce using rule 51 (Term)]
    GTE        [reduce using rule 59 (Var)]
    $default   reduce using rule 41 (Expression)

    Bool-Expr            go to state 62
    Relation-And-Expr    go to state 55
    Relation-Expr        go to state 56
    Expression           go to state 57
    Multiplicative-Expr  go to state 58
    Term                 go to state 59
    Var                  go to state 60
    Ident                go to state 61


State 38

   14 Statement: DO . BEGINLOOP Statement SEMICOLON ENDLOOP WHILE Bool-Expr

    BEGINLOOP  shift, and go to state 63


State 39

   15 Statement: FOR . Var ASSIGN NUMBER SEMICOLON Bool-Expr SEMICOLON Var ASSIGN Expression BEGINLOOP Statement SEMICOLON ENDLOOP

    IDENT  shift, and go to state 4

    $default  reduce using rule 59 (Var)

    Var    go to state 64
    Ident  go to state 46


State 40

   18 Statement: CONTINUE .

    $default  reduce using rule 18 (Statement)


State 41

   16 Statement: READ . Var

    IDENT  shift, and go to state 4

    $default  reduce using rule 59 (Var)

    Var    go to state 65
    Ident  go to state 46


State 42

   17 Statement: WRITE . Var

    IDENT  shift, and go to state 4

    $default  reduce using rule 59 (Var)

    Var    go to state 66
    Ident  go to state 46


State 43

   19 Statement: RETURN . Expression

    IDENT    shift, and go to state 4
    NUMBER   shift, and go to state 48
    L_PAREN  shift, and go to state 67
    UMINUS   shift, and go to state 53

    SEMICOLON  reduce using rule 41 (Expression)
    SEMICOLON  [reduce using rule 46 (Multiplicative-Expr)]
    SEMICOLON  [reduce using rule 51 (Term)]
    SEMICOLON  [reduce using rule 59 (Var)]
    COMMA      reduce using rule 41 (Expression)
    COMMA      [reduce using rule 46 (Multiplicative-Expr)]
    COMMA      [reduce using rule 51 (Term)]
    COMMA      [reduce using rule 59 (Var)]
    SUB        reduce using rule 46 (Multiplicative-Expr)
    SUB        [reduce using rule 51 (Term)]
    SUB        [reduce using rule 59 (Var)]
    ADD        reduce using rule 46 (Multiplicative-Expr)
    ADD        [reduce using rule 51 (Term)]
    ADD        [reduce using rule 59 (Var)]
    MULT       reduce using rule 51 (Term)
    MULT       [reduce using rule 59 (Var)]
    DIV        reduce using rule 51 (Term)
    DIV        [reduce using rule 59 (Var)]
    MOD        reduce using rule 51 (Term)
    MOD        [reduce using rule 59 (Var)]
    $default   reduce using rule 51 (Term)

    Expression           go to state 68
    Multiplicative-Expr  go to state 58
    Term                 go to state 59
    Var                  go to state 60
    Ident                go to state 61


State 44

    3 Function: FUNCTION Ident SEMICOLON BEGIN_PARAMS Declaration SEMICOLON END_PARAMS BEGIN_LOCALS Declaration SEMICOLON END_LOCALS BEGIN_BODY Statement . SEMICOLON END_BODY
   20 Statement: Statement . SEMICOLON Statement

    SEMICOLON  shift, and go to state 69


State 45

   10 Statement: Var . ASSIGN Expression
   62 Var: Var . COMMA Var

    COMMA   shift, and go to state 70
    ASSIGN  shift, and go to state 71


State 46

   60 Var: Ident .
   61    | Ident . L_PAREN Expression R_PAREN

    L_PAREN  shift, and go to state 72

    $default  reduce using rule 60 (Var)


State 47

    8 Declaration: Ident COMMA Ident COLON ARRAY L_SQUARE_BRACKET NUMBER R_SQUARE_BRACKET OF . INTEGER

    INTEGER  shift, and go to state 73


State 48

   53 Term: NUMBER .

    $default  reduce using rule 53 (Term)


State 49

   28 Relation-Expr: TRUE .

    $default  reduce using rule 28 (Relation-Expr)


State 50

   29 Relation-Expr: FALSE .

    $default  reduce using rule 29 (Relation-Expr)


State 51

   30 Relation-Expr: L_PAREN . Bool-Expr R_PAREN
   54 Term: L_PAREN . Expression R_PAREN

    IDENT    shift, and go to state 4
    NUMBER   shift, and go to state 48
    TRUE     shift, and go to state 49
    FALSE    shift, and go to state 50
    L_PAREN  shift, and go to state 51
    NOT      shift, and go to state 52
    UMINUS   shift, and go to state 53

    COMMA     reduce using rule 41 (Expression)
    COMMA     [reduce using rule 46 (Multiplicative-Expr)]
    COMMA     [reduce using rule 51 (Term)]
    COMMA     [reduce using rule 59 (Var)]
    R_PAREN   reduce using rule 21 (Bool-Expr)
    R_PAREN   [reduce using rule 24 (Relation-And-Expr)]
    R_PAREN   [reduce using rule 41 (Expression)]
    R_PAREN   [reduce using rule 46 (Multiplicative-Expr)]
    R_PAREN   [reduce using rule 51 (Term)]
    R_PAREN   [reduce using rule 59 (Var)]
    OR        reduce using rule 24 (Relation-And-Expr)
    SUB       reduce using rule 46 (Multiplicative-Expr)
    SUB       [reduce using rule 51 (Term)]
    SUB       [reduce using rule 59 (Var)]
    ADD       reduce using rule 46 (Multiplicative-Expr)
    ADD       [reduce using rule 51 (Term)]
    ADD       [reduce using rule 59 (Var)]
    MULT      reduce using rule 51 (Term)
    MULT      [reduce using rule 59 (Var)]
    DIV       reduce using rule 51 (Term)
    DIV       [reduce using rule 59 (Var)]
    MOD       reduce using rule 51 (Term)
    MOD       [reduce using rule 59 (Var)]
    EQ        reduce using rule 41 (Expression)
    EQ        [reduce using rule 46 (Multiplicative-Expr)]
    EQ        [reduce using rule 51 (Term)]
    EQ        [reduce using rule 59 (Var)]
    NEQ       reduce using rule 41 (Expression)
    NEQ       [reduce using rule 46 (Multiplicative-Expr)]
    NEQ       [reduce using rule 51 (Term)]
    NEQ       [reduce using rule 59 (Var)]
    LT        reduce using rule 41 (Expression)
    LT        [reduce using rule 46 (Multiplicative-Expr)]
    LT        [reduce using rule 51 (Term)]
    LT        [reduce using rule 59 (Var)]
    GT        reduce using rule 41 (Expression)
    GT        [reduce using rule 46 (Multiplicative-Expr)]
    GT        [reduce using rule 51 (Term)]
    GT        [reduce using rule 59 (Var)]
    LTE       reduce using rule 41 (Expression)
    LTE       [reduce using rule 46 (Multiplicative-Expr)]
    LTE       [reduce using rule 51 (Term)]
    LTE       [reduce using rule 59 (Var)]
    GTE       reduce using rule 41 (Expression)
    GTE       [reduce using rule 46 (Multiplicative-Expr)]
    GTE       [reduce using rule 51 (Term)]
    GTE       [reduce using rule 59 (Var)]
    $default  reduce using rule 41 (Expression)

    Bool-Expr            go to state 74
    Relation-And-Expr    go to state 55
    Relation-Expr        go to state 56
    Expression           go to state 75
    Multiplicative-Expr  go to state 58
    Term                 go to state 59
    Var                  go to state 60
    Ident                go to state 61


State 52

   31 Relation-Expr: NOT . Expression Comp Expression
   32              | NOT . TRUE
   33              | NOT . FALSE
   34              | NOT . L_PAREN Bool-Expr R_PAREN

    IDENT    shift, and go to state 4
    NUMBER   shift, and go to state 48
    TRUE     shift, and go to state 76
    FALSE    shift, and go to state 77
    L_PAREN  shift, and go to state 78
    UMINUS   shift, and go to state 53

    COMMA     reduce using rule 41 (Expression)
    COMMA     [reduce using rule 46 (Multiplicative-Expr)]
    COMMA     [reduce using rule 51 (Term)]
    COMMA     [reduce using rule 59 (Var)]
    SUB       reduce using rule 46 (Multiplicative-Expr)
    SUB       [reduce using rule 51 (Term)]
    SUB       [reduce using rule 59 (Var)]
    ADD       reduce using rule 46 (Multiplicative-Expr)
    ADD       [reduce using rule 51 (Term)]
    ADD       [reduce using rule 59 (Var)]
    MULT      reduce using rule 51 (Term)
    MULT      [reduce using rule 59 (Var)]
    DIV       reduce using rule 51 (Term)
    DIV       [reduce using rule 59 (Var)]
    MOD       reduce using rule 51 (Term)
    MOD       [reduce using rule 59 (Var)]
    EQ        reduce using rule 41 (Expression)
    EQ        [reduce using rule 46 (Multiplicative-Expr)]
    EQ        [reduce using rule 51 (Term)]
    EQ        [reduce using rule 59 (Var)]
    NEQ       reduce using rule 41 (Expression)
    NEQ       [reduce using rule 46 (Multiplicative-Expr)]
    NEQ       [reduce using rule 51 (Term)]
    NEQ       [reduce using rule 59 (Var)]
    LT        reduce using rule 41 (Expression)
    LT        [reduce using rule 46 (Multiplicative-Expr)]
    LT        [reduce using rule 51 (Term)]
    LT        [reduce using rule 59 (Var)]
    GT        reduce using rule 41 (Expression)
    GT        [reduce using rule 46 (Multiplicative-Expr)]
    GT        [reduce using rule 51 (Term)]
    GT        [reduce using rule 59 (Var)]
    LTE       reduce using rule 41 (Expression)
    LTE       [reduce using rule 46 (Multiplicative-Expr)]
    LTE       [reduce using rule 51 (Term)]
    LTE       [reduce using rule 59 (Var)]
    GTE       reduce using rule 41 (Expression)
    GTE       [reduce using rule 46 (Multiplicative-Expr)]
    GTE       [reduce using rule 51 (Term)]
    GTE       [reduce using rule 59 (Var)]
    $default  reduce using rule 41 (Expression)

    Expression           go to state 79
    Multiplicative-Expr  go to state 58
    Term                 go to state 59
    Var                  go to state 60
    Ident                go to state 61


State 53

   55 Term: UMINUS . Var
   56     | UMINUS . NUMBER
   57     | UMINUS . L_PAREN Expression R_PAREN

    IDENT    shift, and go to state 4
    NUMBER   shift, and go to state 80
    L_PAREN  shift, and go to state 81

    $default  reduce using rule 59 (Var)

    Var    go to state 82
    Ident  go to state 46


State 54

   11 Statement: IF Bool-Expr . THEN Statement SEMICOLON ENDIF
   12          | IF Bool-Expr . THEN Statement SEMICOLON ELSE Statement SEMICOLON ENDIF

    THEN  shift, and go to state 83


State 55

   22 Bool-Expr: Relation-And-Expr .
   23          | Relation-And-Expr . OR Relation-And-Expr

    OR  shift, and go to state 84

    $default  reduce using rule 22 (Bool-Expr)


State 56

   25 Relation-And-Expr: Relation-Expr .
   26                  | Relation-Expr . AND Relation-Expr

    AND  shift, and go to state 85

    $default  reduce using rule 25 (Relation-And-Expr)


State 57

   27 Relation-Expr: Expression . Comp Expression
   45 Expression: Expression . COMMA Expression

    COMMA  shift, and go to state 86
    EQ     shift, and go to state 87
    NEQ    shift, and go to state 88
    LT     shift, and go to state 89
    GT     shift, and go to state 90
    LTE    shift, and go to state 91
    GTE    shift, and go to state 92

    Comp  go to state 93


State 58

   42 Expression: Multiplicative-Expr .
   43           | Multiplicative-Expr . SUB Multiplicative-Expr
   44           | Multiplicative-Expr . ADD Multiplicative-Expr

    SUB  shift, and go to state 94
    ADD  shift, and go to state 95

    $default  reduce using rule 42 (Expression)


State 59

   47 Multiplicative-Expr: Term .
   48                    | Term . MOD Term
   49                    | Term . DIV Term
   50                    | Term . MULT Term

    MULT  shift, and go to state 96
    DIV   shift, and go to state 97
    MOD   shift, and go to state 98

    $default  reduce using rule 47 (Multiplicative-Expr)


State 60

   52 Term: Var .
   62 Var: Var . COMMA Var

    COMMA  shift, and go to state 70

    COMMA     [reduce using rule 52 (Term)]
    $default  reduce using rule 52 (Term)


State 61

   58 Term: Ident . L_PAREN Expression R_PAREN
   60 Var: Ident .
   61    | Ident . L_PAREN Expression R_PAREN

    L_PAREN  shift, and go to state 99

    $default  reduce using rule 60 (Var)


State 62

   13 Statement: WHILE Bool-Expr . BEGINLOOP Statement SEMICOLON ENDLOOP

    BEGINLOOP  shift, and go to state 100


State 63

   14 Statement: DO BEGINLOOP . Statement SEMICOLON ENDLOOP WHILE Bool-Expr

    IDENT     shift, and go to state 4
    IF        shift, and go to state 36
    WHILE     shift, and go to state 37
    DO        shift, and go to state 38
    FOR       shift, and go to state 39
    CONTINUE  shift, and go to state 40
    READ      shift, and go to state 41
    WRITE     shift, and go to state 42
    RETURN    shift, and go to state 43

    $default  reduce using rule 59 (Var)

    Statement  go to state 101
    Var        go to state 45
    Ident      go to state 46


State 64

   15 Statement: FOR Var . ASSIGN NUMBER SEMICOLON Bool-Expr SEMICOLON Var ASSIGN Expression BEGINLOOP Statement SEMICOLON ENDLOOP
   62 Var: Var . COMMA Var

    COMMA   shift, and go to state 70
    ASSIGN  shift, and go to state 102


State 65

   16 Statement: READ Var .
   62 Var: Var . COMMA Var

    COMMA  shift, and go to state 70

    $default  reduce using rule 16 (Statement)


State 66

   17 Statement: WRITE Var .
   62 Var: Var . COMMA Var

    COMMA  shift, and go to state 70

    $default  reduce using rule 17 (Statement)


State 67

   54 Term: L_PAREN . Expression R_PAREN

    IDENT    shift, and go to state 4
    NUMBER   shift, and go to state 48
    L_PAREN  shift, and go to state 67
    UMINUS   shift, and go to state 53

    COMMA     reduce using rule 41 (Expression)
    COMMA     [reduce using rule 46 (Multiplicative-Expr)]
    COMMA     [reduce using rule 51 (Term)]
    COMMA     [reduce using rule 59 (Var)]
    R_PAREN   reduce using rule 41 (Expression)
    R_PAREN   [reduce using rule 46 (Multiplicative-Expr)]
    R_PAREN   [reduce using rule 51 (Term)]
    R_PAREN   [reduce using rule 59 (Var)]
    SUB       reduce using rule 46 (Multiplicative-Expr)
    SUB       [reduce using rule 51 (Term)]
    SUB       [reduce using rule 59 (Var)]
    ADD       reduce using rule 46 (Multiplicative-Expr)
    ADD       [reduce using rule 51 (Term)]
    ADD       [reduce using rule 59 (Var)]
    MULT      reduce using rule 51 (Term)
    MULT      [reduce using rule 59 (Var)]
    DIV       reduce using rule 51 (Term)
    DIV       [reduce using rule 59 (Var)]
    MOD       reduce using rule 51 (Term)
    MOD       [reduce using rule 59 (Var)]
    $default  reduce using rule 51 (Term)

    Expression           go to state 103
    Multiplicative-Expr  go to state 58
    Term                 go to state 59
    Var                  go to state 60
    Ident                go to state 61


State 68

   19 Statement: RETURN Expression .
   45 Expression: Expression . COMMA Expression

    COMMA  shift, and go to state 86

    $default  reduce using rule 19 (Statement)


State 69

    3 Function: FUNCTION Ident SEMICOLON BEGIN_PARAMS Declaration SEMICOLON END_PARAMS BEGIN_LOCALS Declaration SEMICOLON END_LOCALS BEGIN_BODY Statement SEMICOLON . END_BODY
   20 Statement: Statement SEMICOLON . Statement

    IDENT     shift, and go to state 4
    END_BODY  shift, and go to state 104
    IF        shift, and go to state 36
    WHILE     shift, and go to state 37
    DO        shift, and go to state 38
    FOR       shift, and go to state 39
    CONTINUE  shift, and go to state 40
    READ      shift, and go to state 41
    WRITE     shift, and go to state 42
    RETURN    shift, and go to state 43

    $default  reduce using rule 59 (Var)

    Statement  go to state 105
    Var        go to state 45
    Ident      go to state 46


State 70

   62 Var: Var COMMA . Var

    IDENT  shift, and go to state 4

    $default  reduce using rule 59 (Var)

    Var    go to state 106
    Ident  go to state 46


State 71

   10 Statement: Var ASSIGN . Expression

    IDENT    shift, and go to state 4
    NUMBER   shift, and go to state 48
    L_PAREN  shift, and go to state 67
    UMINUS   shift, and go to state 53

    SEMICOLON  reduce using rule 41 (Expression)
    SEMICOLON  [reduce using rule 46 (Multiplicative-Expr)]
    SEMICOLON  [reduce using rule 51 (Term)]
    SEMICOLON  [reduce using rule 59 (Var)]
    COMMA      reduce using rule 41 (Expression)
    COMMA      [reduce using rule 46 (Multiplicative-Expr)]
    COMMA      [reduce using rule 51 (Term)]
    COMMA      [reduce using rule 59 (Var)]
    SUB        reduce using rule 46 (Multiplicative-Expr)
    SUB        [reduce using rule 51 (Term)]
    SUB        [reduce using rule 59 (Var)]
    ADD        reduce using rule 46 (Multiplicative-Expr)
    ADD        [reduce using rule 51 (Term)]
    ADD        [reduce using rule 59 (Var)]
    MULT       reduce using rule 51 (Term)
    MULT       [reduce using rule 59 (Var)]
    DIV        reduce using rule 51 (Term)
    DIV        [reduce using rule 59 (Var)]
    MOD        reduce using rule 51 (Term)
    MOD        [reduce using rule 59 (Var)]
    $default   reduce using rule 51 (Term)

    Expression           go to state 107
    Multiplicative-Expr  go to state 58
    Term                 go to state 59
    Var                  go to state 60
    Ident                go to state 61


State 72

   61 Var: Ident L_PAREN . Expression R_PAREN

    IDENT    shift, and go to state 4
    NUMBER   shift, and go to state 48
    L_PAREN  shift, and go to state 67
    UMINUS   shift, and go to state 53

    COMMA     reduce using rule 41 (Expression)
    COMMA     [reduce using rule 46 (Multiplicative-Expr)]
    COMMA     [reduce using rule 51 (Term)]
    COMMA     [reduce using rule 59 (Var)]
    R_PAREN   reduce using rule 41 (Expression)
    R_PAREN   [reduce using rule 46 (Multiplicative-Expr)]
    R_PAREN   [reduce using rule 51 (Term)]
    R_PAREN   [reduce using rule 59 (Var)]
    SUB       reduce using rule 46 (Multiplicative-Expr)
    SUB       [reduce using rule 51 (Term)]
    SUB       [reduce using rule 59 (Var)]
    ADD       reduce using rule 46 (Multiplicative-Expr)
    ADD       [reduce using rule 51 (Term)]
    ADD       [reduce using rule 59 (Var)]
    MULT      reduce using rule 51 (Term)
    MULT      [reduce using rule 59 (Var)]
    DIV       reduce using rule 51 (Term)
    DIV       [reduce using rule 59 (Var)]
    MOD       reduce using rule 51 (Term)
    MOD       [reduce using rule 59 (Var)]
    $default  reduce using rule 51 (Term)

    Expression           go to state 108
    Multiplicative-Expr  go to state 58
    Term                 go to state 59
    Var                  go to state 60
    Ident                go to state 61


State 73

    8 Declaration: Ident COMMA Ident COLON ARRAY L_SQUARE_BRACKET NUMBER R_SQUARE_BRACKET OF INTEGER .

    $default  reduce using rule 8 (Declaration)


State 74

   30 Relation-Expr: L_PAREN Bool-Expr . R_PAREN

    R_PAREN  shift, and go to state 109


State 75

   27 Relation-Expr: Expression . Comp Expression
   45 Expression: Expression . COMMA Expression
   54 Term: L_PAREN Expression . R_PAREN

    COMMA    shift, and go to state 86
    R_PAREN  shift, and go to state 110
    EQ       shift, and go to state 87
    NEQ      shift, and go to state 88
    LT       shift, and go to state 89
    GT       shift, and go to state 90
    LTE      shift, and go to state 91
    GTE      shift, and go to state 92

    Comp  go to state 93


State 76

   32 Relation-Expr: NOT TRUE .

    $default  reduce using rule 32 (Relation-Expr)


State 77

   33 Relation-Expr: NOT FALSE .

    $default  reduce using rule 33 (Relation-Expr)


State 78

   34 Relation-Expr: NOT L_PAREN . Bool-Expr R_PAREN
   54 Term: L_PAREN . Expression R_PAREN

    IDENT    shift, and go to state 4
    NUMBER   shift, and go to state 48
    TRUE     shift, and go to state 49
    FALSE    shift, and go to state 50
    L_PAREN  shift, and go to state 51
    NOT      shift, and go to state 52
    UMINUS   shift, and go to state 53

    COMMA     reduce using rule 41 (Expression)
    COMMA     [reduce using rule 46 (Multiplicative-Expr)]
    COMMA     [reduce using rule 51 (Term)]
    COMMA     [reduce using rule 59 (Var)]
    R_PAREN   reduce using rule 21 (Bool-Expr)
    R_PAREN   [reduce using rule 24 (Relation-And-Expr)]
    R_PAREN   [reduce using rule 41 (Expression)]
    R_PAREN   [reduce using rule 46 (Multiplicative-Expr)]
    R_PAREN   [reduce using rule 51 (Term)]
    R_PAREN   [reduce using rule 59 (Var)]
    OR        reduce using rule 24 (Relation-And-Expr)
    SUB       reduce using rule 46 (Multiplicative-Expr)
    SUB       [reduce using rule 51 (Term)]
    SUB       [reduce using rule 59 (Var)]
    ADD       reduce using rule 46 (Multiplicative-Expr)
    ADD       [reduce using rule 51 (Term)]
    ADD       [reduce using rule 59 (Var)]
    MULT      reduce using rule 51 (Term)
    MULT      [reduce using rule 59 (Var)]
    DIV       reduce using rule 51 (Term)
    DIV       [reduce using rule 59 (Var)]
    MOD       reduce using rule 51 (Term)
    MOD       [reduce using rule 59 (Var)]
    EQ        reduce using rule 41 (Expression)
    EQ        [reduce using rule 46 (Multiplicative-Expr)]
    EQ        [reduce using rule 51 (Term)]
    EQ        [reduce using rule 59 (Var)]
    NEQ       reduce using rule 41 (Expression)
    NEQ       [reduce using rule 46 (Multiplicative-Expr)]
    NEQ       [reduce using rule 51 (Term)]
    NEQ       [reduce using rule 59 (Var)]
    LT        reduce using rule 41 (Expression)
    LT        [reduce using rule 46 (Multiplicative-Expr)]
    LT        [reduce using rule 51 (Term)]
    LT        [reduce using rule 59 (Var)]
    GT        reduce using rule 41 (Expression)
    GT        [reduce using rule 46 (Multiplicative-Expr)]
    GT        [reduce using rule 51 (Term)]
    GT        [reduce using rule 59 (Var)]
    LTE       reduce using rule 41 (Expression)
    LTE       [reduce using rule 46 (Multiplicative-Expr)]
    LTE       [reduce using rule 51 (Term)]
    LTE       [reduce using rule 59 (Var)]
    GTE       reduce using rule 41 (Expression)
    GTE       [reduce using rule 46 (Multiplicative-Expr)]
    GTE       [reduce using rule 51 (Term)]
    GTE       [reduce using rule 59 (Var)]
    $default  reduce using rule 41 (Expression)

    Bool-Expr            go to state 111
    Relation-And-Expr    go to state 55
    Relation-Expr        go to state 56
    Expression           go to state 75
    Multiplicative-Expr  go to state 58
    Term                 go to state 59
    Var                  go to state 60
    Ident                go to state 61


State 79

   31 Relation-Expr: NOT Expression . Comp Expression
   45 Expression: Expression . COMMA Expression

    COMMA  shift, and go to state 86
    EQ     shift, and go to state 87
    NEQ    shift, and go to state 88
    LT     shift, and go to state 89
    GT     shift, and go to state 90
    LTE    shift, and go to state 91
    GTE    shift, and go to state 92

    Comp  go to state 112


State 80

   56 Term: UMINUS NUMBER .

    $default  reduce using rule 56 (Term)


State 81

   57 Term: UMINUS L_PAREN . Expression R_PAREN

    IDENT    shift, and go to state 4
    NUMBER   shift, and go to state 48
    L_PAREN  shift, and go to state 67
    UMINUS   shift, and go to state 53

    COMMA     reduce using rule 41 (Expression)
    COMMA     [reduce using rule 46 (Multiplicative-Expr)]
    COMMA     [reduce using rule 51 (Term)]
    COMMA     [reduce using rule 59 (Var)]
    R_PAREN   reduce using rule 41 (Expression)
    R_PAREN   [reduce using rule 46 (Multiplicative-Expr)]
    R_PAREN   [reduce using rule 51 (Term)]
    R_PAREN   [reduce using rule 59 (Var)]
    SUB       reduce using rule 46 (Multiplicative-Expr)
    SUB       [reduce using rule 51 (Term)]
    SUB       [reduce using rule 59 (Var)]
    ADD       reduce using rule 46 (Multiplicative-Expr)
    ADD       [reduce using rule 51 (Term)]
    ADD       [reduce using rule 59 (Var)]
    MULT      reduce using rule 51 (Term)
    MULT      [reduce using rule 59 (Var)]
    DIV       reduce using rule 51 (Term)
    DIV       [reduce using rule 59 (Var)]
    MOD       reduce using rule 51 (Term)
    MOD       [reduce using rule 59 (Var)]
    $default  reduce using rule 51 (Term)

    Expression           go to state 113
    Multiplicative-Expr  go to state 58
    Term                 go to state 59
    Var                  go to state 60
    Ident                go to state 61


State 82

   55 Term: UMINUS Var .
   62 Var: Var . COMMA Var

    COMMA  shift, and go to state 70

    COMMA     [reduce using rule 55 (Term)]
    $default  reduce using rule 55 (Term)


State 83

   11 Statement: IF Bool-Expr THEN . Statement SEMICOLON ENDIF
   12          | IF Bool-Expr THEN . Statement SEMICOLON ELSE Statement SEMICOLON ENDIF

    IDENT     shift, and go to state 4
    IF        shift, and go to state 36
    WHILE     shift, and go to state 37
    DO        shift, and go to state 38
    FOR       shift, and go to state 39
    CONTINUE  shift, and go to state 40
    READ      shift, and go to state 41
    WRITE     shift, and go to state 42
    RETURN    shift, and go to state 43

    $default  reduce using rule 59 (Var)

    Statement  go to state 114
    Var        go to state 45
    Ident      go to state 46


State 84

   23 Bool-Expr: Relation-And-Expr OR . Relation-And-Expr

    IDENT    shift, and go to state 4
    NUMBER   shift, and go to state 48
    TRUE     shift, and go to state 49
    FALSE    shift, and go to state 50
    L_PAREN  shift, and go to state 51
    NOT      shift, and go to state 52
    UMINUS   shift, and go to state 53

    THEN       reduce using rule 24 (Relation-And-Expr)
    BEGINLOOP  reduce using rule 24 (Relation-And-Expr)
    SEMICOLON  reduce using rule 24 (Relation-And-Expr)
    COMMA      reduce using rule 41 (Expression)
    COMMA      [reduce using rule 46 (Multiplicative-Expr)]
    COMMA      [reduce using rule 51 (Term)]
    COMMA      [reduce using rule 59 (Var)]
    R_PAREN    reduce using rule 24 (Relation-And-Expr)
    SUB        reduce using rule 46 (Multiplicative-Expr)
    SUB        [reduce using rule 51 (Term)]
    SUB        [reduce using rule 59 (Var)]
    ADD        reduce using rule 46 (Multiplicative-Expr)
    ADD        [reduce using rule 51 (Term)]
    ADD        [reduce using rule 59 (Var)]
    MULT       reduce using rule 51 (Term)
    MULT       [reduce using rule 59 (Var)]
    DIV        reduce using rule 51 (Term)
    DIV        [reduce using rule 59 (Var)]
    MOD        reduce using rule 51 (Term)
    MOD        [reduce using rule 59 (Var)]
    EQ         reduce using rule 41 (Expression)
    EQ         [reduce using rule 46 (Multiplicative-Expr)]
    EQ         [reduce using rule 51 (Term)]
    EQ         [reduce using rule 59 (Var)]
    NEQ        reduce using rule 41 (Expression)
    NEQ        [reduce using rule 46 (Multiplicative-Expr)]
    NEQ        [reduce using rule 51 (Term)]
    NEQ        [reduce using rule 59 (Var)]
    LT         reduce using rule 41 (Expression)
    LT         [reduce using rule 46 (Multiplicative-Expr)]
    LT         [reduce using rule 51 (Term)]
    LT         [reduce using rule 59 (Var)]
    GT         reduce using rule 41 (Expression)
    GT         [reduce using rule 46 (Multiplicative-Expr)]
    GT         [reduce using rule 51 (Term)]
    GT         [reduce using rule 59 (Var)]
    LTE        reduce using rule 41 (Expression)
    LTE        [reduce using rule 46 (Multiplicative-Expr)]
    LTE        [reduce using rule 51 (Term)]
    LTE        [reduce using rule 59 (Var)]
    GTE        reduce using rule 41 (Expression)
    GTE        [reduce using rule 46 (Multiplicative-Expr)]
    GTE        [reduce using rule 51 (Term)]
    GTE        [reduce using rule 59 (Var)]
    $default   reduce using rule 41 (Expression)

    Relation-And-Expr    go to state 115
    Relation-Expr        go to state 56
    Expression           go to state 57
    Multiplicative-Expr  go to state 58
    Term                 go to state 59
    Var                  go to state 60
    Ident                go to state 61


State 85

   26 Relation-And-Expr: Relation-Expr AND . Relation-Expr

    IDENT    shift, and go to state 4
    NUMBER   shift, and go to state 48
    TRUE     shift, and go to state 49
    FALSE    shift, and go to state 50
    L_PAREN  shift, and go to state 51
    NOT      shift, and go to state 52
    UMINUS   shift, and go to state 53

    COMMA     reduce using rule 41 (Expression)
    COMMA     [reduce using rule 46 (Multiplicative-Expr)]
    COMMA     [reduce using rule 51 (Term)]
    COMMA     [reduce using rule 59 (Var)]
    SUB       reduce using rule 46 (Multiplicative-Expr)
    SUB       [reduce using rule 51 (Term)]
    SUB       [reduce using rule 59 (Var)]
    ADD       reduce using rule 46 (Multiplicative-Expr)
    ADD       [reduce using rule 51 (Term)]
    ADD       [reduce using rule 59 (Var)]
    MULT      reduce using rule 51 (Term)
    MULT      [reduce using rule 59 (Var)]
    DIV       reduce using rule 51 (Term)
    DIV       [reduce using rule 59 (Var)]
    MOD       reduce using rule 51 (Term)
    MOD       [reduce using rule 59 (Var)]
    EQ        reduce using rule 41 (Expression)
    EQ        [reduce using rule 46 (Multiplicative-Expr)]
    EQ        [reduce using rule 51 (Term)]
    EQ        [reduce using rule 59 (Var)]
    NEQ       reduce using rule 41 (Expression)
    NEQ       [reduce using rule 46 (Multiplicative-Expr)]
    NEQ       [reduce using rule 51 (Term)]
    NEQ       [reduce using rule 59 (Var)]
    LT        reduce using rule 41 (Expression)
    LT        [reduce using rule 46 (Multiplicative-Expr)]
    LT        [reduce using rule 51 (Term)]
    LT        [reduce using rule 59 (Var)]
    GT        reduce using rule 41 (Expression)
    GT        [reduce using rule 46 (Multiplicative-Expr)]
    GT        [reduce using rule 51 (Term)]
    GT        [reduce using rule 59 (Var)]
    LTE       reduce using rule 41 (Expression)
    LTE       [reduce using rule 46 (Multiplicative-Expr)]
    LTE       [reduce using rule 51 (Term)]
    LTE       [reduce using rule 59 (Var)]
    GTE       reduce using rule 41 (Expression)
    GTE       [reduce using rule 46 (Multiplicative-Expr)]
    GTE       [reduce using rule 51 (Term)]
    GTE       [reduce using rule 59 (Var)]
    $default  reduce using rule 41 (Expression)

    Relation-Expr        go to state 116
    Expression           go to state 57
    Multiplicative-Expr  go to state 58
    Term                 go to state 59
    Var                  go to state 60
    Ident                go to state 61


State 86

   45 Expression: Expression COMMA . Expression

    IDENT    shift, and go to state 4
    NUMBER   shift, and go to state 48
    L_PAREN  shift, and go to state 67
    UMINUS   shift, and go to state 53

    THEN       reduce using rule 41 (Expression)
    THEN       [reduce using rule 46 (Multiplicative-Expr)]
    THEN       [reduce using rule 51 (Term)]
    THEN       [reduce using rule 59 (Var)]
    BEGINLOOP  reduce using rule 41 (Expression)
    BEGINLOOP  [reduce using rule 46 (Multiplicative-Expr)]
    BEGINLOOP  [reduce using rule 51 (Term)]
    BEGINLOOP  [reduce using rule 59 (Var)]
    SEMICOLON  reduce using rule 41 (Expression)
    SEMICOLON  [reduce using rule 46 (Multiplicative-Expr)]
    SEMICOLON  [reduce using rule 51 (Term)]
    SEMICOLON  [reduce using rule 59 (Var)]
    COMMA      reduce using rule 41 (Expression)
    COMMA      [reduce using rule 46 (Multiplicative-Expr)]
    COMMA      [reduce using rule 51 (Term)]
    COMMA      [reduce using rule 59 (Var)]
    R_PAREN    reduce using rule 41 (Expression)
    R_PAREN    [reduce using rule 46 (Multiplicative-Expr)]
    R_PAREN    [reduce using rule 51 (Term)]
    R_PAREN    [reduce using rule 59 (Var)]
    AND        reduce using rule 41 (Expression)
    AND        [reduce using rule 46 (Multiplicative-Expr)]
    AND        [reduce using rule 51 (Term)]
    AND        [reduce using rule 59 (Var)]
    OR         reduce using rule 41 (Expression)
    OR         [reduce using rule 46 (Multiplicative-Expr)]
    OR         [reduce using rule 51 (Term)]
    OR         [reduce using rule 59 (Var)]
    SUB        reduce using rule 46 (Multiplicative-Expr)
    SUB        [reduce using rule 51 (Term)]
    SUB        [reduce using rule 59 (Var)]
    ADD        reduce using rule 46 (Multiplicative-Expr)
    ADD        [reduce using rule 51 (Term)]
    ADD        [reduce using rule 59 (Var)]
    MULT       reduce using rule 51 (Term)
    MULT       [reduce using rule 59 (Var)]
    DIV        reduce using rule 51 (Term)
    DIV        [reduce using rule 59 (Var)]
    MOD        reduce using rule 51 (Term)
    MOD        [reduce using rule 59 (Var)]
    EQ         reduce using rule 41 (Expression)
    EQ         [reduce using rule 46 (Multiplicative-Expr)]
    EQ         [reduce using rule 51 (Term)]
    EQ         [reduce using rule 59 (Var)]
    NEQ        reduce using rule 41 (Expression)
    NEQ        [reduce using rule 46 (Multiplicative-Expr)]
    NEQ        [reduce using rule 51 (Term)]
    NEQ        [reduce using rule 59 (Var)]
    LT         reduce using rule 41 (Expression)
    LT         [reduce using rule 46 (Multiplicative-Expr)]
    LT         [reduce using rule 51 (Term)]
    LT         [reduce using rule 59 (Var)]
    GT         reduce using rule 41 (Expression)
    GT         [reduce using rule 46 (Multiplicative-Expr)]
    GT         [reduce using rule 51 (Term)]
    GT         [reduce using rule 59 (Var)]
    LTE        reduce using rule 41 (Expression)
    LTE        [reduce using rule 46 (Multiplicative-Expr)]
    LTE        [reduce using rule 51 (Term)]
    LTE        [reduce using rule 59 (Var)]
    GTE        reduce using rule 41 (Expression)
    GTE        [reduce using rule 46 (Multiplicative-Expr)]
    GTE        [reduce using rule 51 (Term)]
    GTE        [reduce using rule 59 (Var)]
    $default   reduce using rule 41 (Expression)

    Expression           go to state 117
    Multiplicative-Expr  go to state 58
    Term                 go to state 59
    Var                  go to state 60
    Ident                go to state 61


State 87

   35 Comp: EQ .

    $default  reduce using rule 35 (Comp)


State 88

   36 Comp: NEQ .

    $default  reduce using rule 36 (Comp)


State 89

   37 Comp: LT .

    $default  reduce using rule 37 (Comp)


State 90

   38 Comp: GT .

    $default  reduce using rule 38 (Comp)


State 91

   39 Comp: LTE .

    $default  reduce using rule 39 (Comp)


State 92

   40 Comp: GTE .

    $default  reduce using rule 40 (Comp)


State 93

   27 Relation-Expr: Expression Comp . Expression

    IDENT    shift, and go to state 4
    NUMBER   shift, and go to state 48
    L_PAREN  shift, and go to state 67
    UMINUS   shift, and go to state 53

    THEN       reduce using rule 41 (Expression)
    THEN       [reduce using rule 46 (Multiplicative-Expr)]
    THEN       [reduce using rule 51 (Term)]
    THEN       [reduce using rule 59 (Var)]
    BEGINLOOP  reduce using rule 41 (Expression)
    BEGINLOOP  [reduce using rule 46 (Multiplicative-Expr)]
    BEGINLOOP  [reduce using rule 51 (Term)]
    BEGINLOOP  [reduce using rule 59 (Var)]
    SEMICOLON  reduce using rule 41 (Expression)
    SEMICOLON  [reduce using rule 46 (Multiplicative-Expr)]
    SEMICOLON  [reduce using rule 51 (Term)]
    SEMICOLON  [reduce using rule 59 (Var)]
    COMMA      reduce using rule 41 (Expression)
    COMMA      [reduce using rule 46 (Multiplicative-Expr)]
    COMMA      [reduce using rule 51 (Term)]
    COMMA      [reduce using rule 59 (Var)]
    R_PAREN    reduce using rule 41 (Expression)
    R_PAREN    [reduce using rule 46 (Multiplicative-Expr)]
    R_PAREN    [reduce using rule 51 (Term)]
    R_PAREN    [reduce using rule 59 (Var)]
    AND        reduce using rule 41 (Expression)
    AND        [reduce using rule 46 (Multiplicative-Expr)]
    AND        [reduce using rule 51 (Term)]
    AND        [reduce using rule 59 (Var)]
    OR         reduce using rule 41 (Expression)
    OR         [reduce using rule 46 (Multiplicative-Expr)]
    OR         [reduce using rule 51 (Term)]
    OR         [reduce using rule 59 (Var)]
    SUB        reduce using rule 46 (Multiplicative-Expr)
    SUB        [reduce using rule 51 (Term)]
    SUB        [reduce using rule 59 (Var)]
    ADD        reduce using rule 46 (Multiplicative-Expr)
    ADD        [reduce using rule 51 (Term)]
    ADD        [reduce using rule 59 (Var)]
    MULT       reduce using rule 51 (Term)
    MULT       [reduce using rule 59 (Var)]
    DIV        reduce using rule 51 (Term)
    DIV        [reduce using rule 59 (Var)]
    MOD        reduce using rule 51 (Term)
    MOD        [reduce using rule 59 (Var)]
    $default   reduce using rule 41 (Expression)

    Expression           go to state 118
    Multiplicative-Expr  go to state 58
    Term                 go to state 59
    Var                  go to state 60
    Ident                go to state 61


State 94

   43 Expression: Multiplicative-Expr SUB . Multiplicative-Expr

    IDENT    shift, and go to state 4
    NUMBER   shift, and go to state 48
    L_PAREN  shift, and go to state 67
    UMINUS   shift, and go to state 53

    THEN       reduce using rule 46 (Multiplicative-Expr)
    THEN       [reduce using rule 51 (Term)]
    THEN       [reduce using rule 59 (Var)]
    BEGINLOOP  reduce using rule 46 (Multiplicative-Expr)
    BEGINLOOP  [reduce using rule 51 (Term)]
    BEGINLOOP  [reduce using rule 59 (Var)]
    SEMICOLON  reduce using rule 46 (Multiplicative-Expr)
    SEMICOLON  [reduce using rule 51 (Term)]
    SEMICOLON  [reduce using rule 59 (Var)]
    COMMA      reduce using rule 46 (Multiplicative-Expr)
    COMMA      [reduce using rule 51 (Term)]
    COMMA      [reduce using rule 59 (Var)]
    R_PAREN    reduce using rule 46 (Multiplicative-Expr)
    R_PAREN    [reduce using rule 51 (Term)]
    R_PAREN    [reduce using rule 59 (Var)]
    AND        reduce using rule 46 (Multiplicative-Expr)
    AND        [reduce using rule 51 (Term)]
    AND        [reduce using rule 59 (Var)]
    OR         reduce using rule 46 (Multiplicative-Expr)
    OR         [reduce using rule 51 (Term)]
    OR         [reduce using rule 59 (Var)]
    MULT       reduce using rule 51 (Term)
    MULT       [reduce using rule 59 (Var)]
    DIV        reduce using rule 51 (Term)
    DIV        [reduce using rule 59 (Var)]
    MOD        reduce using rule 51 (Term)
    MOD        [reduce using rule 59 (Var)]
    EQ         reduce using rule 46 (Multiplicative-Expr)
    EQ         [reduce using rule 51 (Term)]
    EQ         [reduce using rule 59 (Var)]
    NEQ        reduce using rule 46 (Multiplicative-Expr)
    NEQ        [reduce using rule 51 (Term)]
    NEQ        [reduce using rule 59 (Var)]
    LT         reduce using rule 46 (Multiplicative-Expr)
    LT         [reduce using rule 51 (Term)]
    LT         [reduce using rule 59 (Var)]
    GT         reduce using rule 46 (Multiplicative-Expr)
    GT         [reduce using rule 51 (Term)]
    GT         [reduce using rule 59 (Var)]
    LTE        reduce using rule 46 (Multiplicative-Expr)
    LTE        [reduce using rule 51 (Term)]
    LTE        [reduce using rule 59 (Var)]
    GTE        reduce using rule 46 (Multiplicative-Expr)
    GTE        [reduce using rule 51 (Term)]
    GTE        [reduce using rule 59 (Var)]
    $default   reduce using rule 46 (Multiplicative-Expr)

    Multiplicative-Expr  go to state 119
    Term                 go to state 59
    Var                  go to state 60
    Ident                go to state 61


State 95

   44 Expression: Multiplicative-Expr ADD . Multiplicative-Expr

    IDENT    shift, and go to state 4
    NUMBER   shift, and go to state 48
    L_PAREN  shift, and go to state 67
    UMINUS   shift, and go to state 53

    THEN       reduce using rule 46 (Multiplicative-Expr)
    THEN       [reduce using rule 51 (Term)]
    THEN       [reduce using rule 59 (Var)]
    BEGINLOOP  reduce using rule 46 (Multiplicative-Expr)
    BEGINLOOP  [reduce using rule 51 (Term)]
    BEGINLOOP  [reduce using rule 59 (Var)]
    SEMICOLON  reduce using rule 46 (Multiplicative-Expr)
    SEMICOLON  [reduce using rule 51 (Term)]
    SEMICOLON  [reduce using rule 59 (Var)]
    COMMA      reduce using rule 46 (Multiplicative-Expr)
    COMMA      [reduce using rule 51 (Term)]
    COMMA      [reduce using rule 59 (Var)]
    R_PAREN    reduce using rule 46 (Multiplicative-Expr)
    R_PAREN    [reduce using rule 51 (Term)]
    R_PAREN    [reduce using rule 59 (Var)]
    AND        reduce using rule 46 (Multiplicative-Expr)
    AND        [reduce using rule 51 (Term)]
    AND        [reduce using rule 59 (Var)]
    OR         reduce using rule 46 (Multiplicative-Expr)
    OR         [reduce using rule 51 (Term)]
    OR         [reduce using rule 59 (Var)]
    MULT       reduce using rule 51 (Term)
    MULT       [reduce using rule 59 (Var)]
    DIV        reduce using rule 51 (Term)
    DIV        [reduce using rule 59 (Var)]
    MOD        reduce using rule 51 (Term)
    MOD        [reduce using rule 59 (Var)]
    EQ         reduce using rule 46 (Multiplicative-Expr)
    EQ         [reduce using rule 51 (Term)]
    EQ         [reduce using rule 59 (Var)]
    NEQ        reduce using rule 46 (Multiplicative-Expr)
    NEQ        [reduce using rule 51 (Term)]
    NEQ        [reduce using rule 59 (Var)]
    LT         reduce using rule 46 (Multiplicative-Expr)
    LT         [reduce using rule 51 (Term)]
    LT         [reduce using rule 59 (Var)]
    GT         reduce using rule 46 (Multiplicative-Expr)
    GT         [reduce using rule 51 (Term)]
    GT         [reduce using rule 59 (Var)]
    LTE        reduce using rule 46 (Multiplicative-Expr)
    LTE        [reduce using rule 51 (Term)]
    LTE        [reduce using rule 59 (Var)]
    GTE        reduce using rule 46 (Multiplicative-Expr)
    GTE        [reduce using rule 51 (Term)]
    GTE        [reduce using rule 59 (Var)]
    $default   reduce using rule 46 (Multiplicative-Expr)

    Multiplicative-Expr  go to state 120
    Term                 go to state 59
    Var                  go to state 60
    Ident                go to state 61


State 96

   50 Multiplicative-Expr: Term MULT . Term

    IDENT    shift, and go to state 4
    NUMBER   shift, and go to state 48
    L_PAREN  shift, and go to state 67
    UMINUS   shift, and go to state 53

    THEN       reduce using rule 51 (Term)
    THEN       [reduce using rule 59 (Var)]
    BEGINLOOP  reduce using rule 51 (Term)
    BEGINLOOP  [reduce using rule 59 (Var)]
    SEMICOLON  reduce using rule 51 (Term)
    SEMICOLON  [reduce using rule 59 (Var)]
    COMMA      reduce using rule 51 (Term)
    COMMA      [reduce using rule 59 (Var)]
    R_PAREN    reduce using rule 51 (Term)
    R_PAREN    [reduce using rule 59 (Var)]
    AND        reduce using rule 51 (Term)
    AND        [reduce using rule 59 (Var)]
    OR         reduce using rule 51 (Term)
    OR         [reduce using rule 59 (Var)]
    SUB        reduce using rule 51 (Term)
    SUB        [reduce using rule 59 (Var)]
    ADD        reduce using rule 51 (Term)
    ADD        [reduce using rule 59 (Var)]
    EQ         reduce using rule 51 (Term)
    EQ         [reduce using rule 59 (Var)]
    NEQ        reduce using rule 51 (Term)
    NEQ        [reduce using rule 59 (Var)]
    LT         reduce using rule 51 (Term)
    LT         [reduce using rule 59 (Var)]
    GT         reduce using rule 51 (Term)
    GT         [reduce using rule 59 (Var)]
    LTE        reduce using rule 51 (Term)
    LTE        [reduce using rule 59 (Var)]
    GTE        reduce using rule 51 (Term)
    GTE        [reduce using rule 59 (Var)]
    $default   reduce using rule 51 (Term)

    Term   go to state 121
    Var    go to state 60
    Ident  go to state 61


State 97

   49 Multiplicative-Expr: Term DIV . Term

    IDENT    shift, and go to state 4
    NUMBER   shift, and go to state 48
    L_PAREN  shift, and go to state 67
    UMINUS   shift, and go to state 53

    THEN       reduce using rule 51 (Term)
    THEN       [reduce using rule 59 (Var)]
    BEGINLOOP  reduce using rule 51 (Term)
    BEGINLOOP  [reduce using rule 59 (Var)]
    SEMICOLON  reduce using rule 51 (Term)
    SEMICOLON  [reduce using rule 59 (Var)]
    COMMA      reduce using rule 51 (Term)
    COMMA      [reduce using rule 59 (Var)]
    R_PAREN    reduce using rule 51 (Term)
    R_PAREN    [reduce using rule 59 (Var)]
    AND        reduce using rule 51 (Term)
    AND        [reduce using rule 59 (Var)]
    OR         reduce using rule 51 (Term)
    OR         [reduce using rule 59 (Var)]
    SUB        reduce using rule 51 (Term)
    SUB        [reduce using rule 59 (Var)]
    ADD        reduce using rule 51 (Term)
    ADD        [reduce using rule 59 (Var)]
    EQ         reduce using rule 51 (Term)
    EQ         [reduce using rule 59 (Var)]
    NEQ        reduce using rule 51 (Term)
    NEQ        [reduce using rule 59 (Var)]
    LT         reduce using rule 51 (Term)
    LT         [reduce using rule 59 (Var)]
    GT         reduce using rule 51 (Term)
    GT         [reduce using rule 59 (Var)]
    LTE        reduce using rule 51 (Term)
    LTE        [reduce using rule 59 (Var)]
    GTE        reduce using rule 51 (Term)
    GTE        [reduce using rule 59 (Var)]
    $default   reduce using rule 51 (Term)

    Term   go to state 122
    Var    go to state 60
    Ident  go to state 61


State 98

   48 Multiplicative-Expr: Term MOD . Term

    IDENT    shift, and go to state 4
    NUMBER   shift, and go to state 48
    L_PAREN  shift, and go to state 67
    UMINUS   shift, and go to state 53

    THEN       reduce using rule 51 (Term)
    THEN       [reduce using rule 59 (Var)]
    BEGINLOOP  reduce using rule 51 (Term)
    BEGINLOOP  [reduce using rule 59 (Var)]
    SEMICOLON  reduce using rule 51 (Term)
    SEMICOLON  [reduce using rule 59 (Var)]
    COMMA      reduce using rule 51 (Term)
    COMMA      [reduce using rule 59 (Var)]
    R_PAREN    reduce using rule 51 (Term)
    R_PAREN    [reduce using rule 59 (Var)]
    AND        reduce using rule 51 (Term)
    AND        [reduce using rule 59 (Var)]
    OR         reduce using rule 51 (Term)
    OR         [reduce using rule 59 (Var)]
    SUB        reduce using rule 51 (Term)
    SUB        [reduce using rule 59 (Var)]
    ADD        reduce using rule 51 (Term)
    ADD        [reduce using rule 59 (Var)]
    EQ         reduce using rule 51 (Term)
    EQ         [reduce using rule 59 (Var)]
    NEQ        reduce using rule 51 (Term)
    NEQ        [reduce using rule 59 (Var)]
    LT         reduce using rule 51 (Term)
    LT         [reduce using rule 59 (Var)]
    GT         reduce using rule 51 (Term)
    GT         [reduce using rule 59 (Var)]
    LTE        reduce using rule 51 (Term)
    LTE        [reduce using rule 59 (Var)]
    GTE        reduce using rule 51 (Term)
    GTE        [reduce using rule 59 (Var)]
    $default   reduce using rule 51 (Term)

    Term   go to state 123
    Var    go to state 60
    Ident  go to state 61


State 99

   58 Term: Ident L_PAREN . Expression R_PAREN
   61 Var: Ident L_PAREN . Expression R_PAREN

    IDENT    shift, and go to state 4
    NUMBER   shift, and go to state 48
    L_PAREN  shift, and go to state 67
    UMINUS   shift, and go to state 53

    COMMA     reduce using rule 41 (Expression)
    COMMA     [reduce using rule 46 (Multiplicative-Expr)]
    COMMA     [reduce using rule 51 (Term)]
    COMMA     [reduce using rule 59 (Var)]
    R_PAREN   reduce using rule 41 (Expression)
    R_PAREN   [reduce using rule 46 (Multiplicative-Expr)]
    R_PAREN   [reduce using rule 51 (Term)]
    R_PAREN   [reduce using rule 59 (Var)]
    SUB       reduce using rule 46 (Multiplicative-Expr)
    SUB       [reduce using rule 51 (Term)]
    SUB       [reduce using rule 59 (Var)]
    ADD       reduce using rule 46 (Multiplicative-Expr)
    ADD       [reduce using rule 51 (Term)]
    ADD       [reduce using rule 59 (Var)]
    MULT      reduce using rule 51 (Term)
    MULT      [reduce using rule 59 (Var)]
    DIV       reduce using rule 51 (Term)
    DIV       [reduce using rule 59 (Var)]
    MOD       reduce using rule 51 (Term)
    MOD       [reduce using rule 59 (Var)]
    $default  reduce using rule 51 (Term)

    Expression           go to state 124
    Multiplicative-Expr  go to state 58
    Term                 go to state 59
    Var                  go to state 60
    Ident                go to state 61


State 100

   13 Statement: WHILE Bool-Expr BEGINLOOP . Statement SEMICOLON ENDLOOP

    IDENT     shift, and go to state 4
    IF        shift, and go to state 36
    WHILE     shift, and go to state 37
    DO        shift, and go to state 38
    FOR       shift, and go to state 39
    CONTINUE  shift, and go to state 40
    READ      shift, and go to state 41
    WRITE     shift, and go to state 42
    RETURN    shift, and go to state 43

    $default  reduce using rule 59 (Var)

    Statement  go to state 125
    Var        go to state 45
    Ident      go to state 46


State 101

   14 Statement: DO BEGINLOOP Statement . SEMICOLON ENDLOOP WHILE Bool-Expr
   20          | Statement . SEMICOLON Statement

    SEMICOLON  shift, and go to state 126


State 102

   15 Statement: FOR Var ASSIGN . NUMBER SEMICOLON Bool-Expr SEMICOLON Var ASSIGN Expression BEGINLOOP Statement SEMICOLON ENDLOOP

    NUMBER  shift, and go to state 127


State 103

   45 Expression: Expression . COMMA Expression
   54 Term: L_PAREN Expression . R_PAREN

    COMMA    shift, and go to state 86
    R_PAREN  shift, and go to state 110


State 104

    3 Function: FUNCTION Ident SEMICOLON BEGIN_PARAMS Declaration SEMICOLON END_PARAMS BEGIN_LOCALS Declaration SEMICOLON END_LOCALS BEGIN_BODY Statement SEMICOLON END_BODY .

    $default  reduce using rule 3 (Function)


State 105

   20 Statement: Statement . SEMICOLON Statement
   20          | Statement SEMICOLON Statement .

    SEMICOLON  shift, and go to state 128

    SEMICOLON  [reduce using rule 20 (Statement)]


State 106

   62 Var: Var . COMMA Var
   62    | Var COMMA Var .

    COMMA  shift, and go to state 70

    COMMA     [reduce using rule 62 (Var)]
    $default  reduce using rule 62 (Var)


State 107

   10 Statement: Var ASSIGN Expression .
   45 Expression: Expression . COMMA Expression

    COMMA  shift, and go to state 86

    $default  reduce using rule 10 (Statement)


State 108

   45 Expression: Expression . COMMA Expression
   61 Var: Ident L_PAREN Expression . R_PAREN

    COMMA    shift, and go to state 86
    R_PAREN  shift, and go to state 129


State 109

   30 Relation-Expr: L_PAREN Bool-Expr R_PAREN .

    $default  reduce using rule 30 (Relation-Expr)


State 110

   54 Term: L_PAREN Expression R_PAREN .

    $default  reduce using rule 54 (Term)


State 111

   34 Relation-Expr: NOT L_PAREN Bool-Expr . R_PAREN

    R_PAREN  shift, and go to state 130


State 112

   31 Relation-Expr: NOT Expression Comp . Expression

    IDENT    shift, and go to state 4
    NUMBER   shift, and go to state 48
    L_PAREN  shift, and go to state 67
    UMINUS   shift, and go to state 53

    THEN       reduce using rule 41 (Expression)
    THEN       [reduce using rule 46 (Multiplicative-Expr)]
    THEN       [reduce using rule 51 (Term)]
    THEN       [reduce using rule 59 (Var)]
    BEGINLOOP  reduce using rule 41 (Expression)
    BEGINLOOP  [reduce using rule 46 (Multiplicative-Expr)]
    BEGINLOOP  [reduce using rule 51 (Term)]
    BEGINLOOP  [reduce using rule 59 (Var)]
    SEMICOLON  reduce using rule 41 (Expression)
    SEMICOLON  [reduce using rule 46 (Multiplicative-Expr)]
    SEMICOLON  [reduce using rule 51 (Term)]
    SEMICOLON  [reduce using rule 59 (Var)]
    COMMA      reduce using rule 41 (Expression)
    COMMA      [reduce using rule 46 (Multiplicative-Expr)]
    COMMA      [reduce using rule 51 (Term)]
    COMMA      [reduce using rule 59 (Var)]
    R_PAREN    reduce using rule 41 (Expression)
    R_PAREN    [reduce using rule 46 (Multiplicative-Expr)]
    R_PAREN    [reduce using rule 51 (Term)]
    R_PAREN    [reduce using rule 59 (Var)]
    AND        reduce using rule 41 (Expression)
    AND        [reduce using rule 46 (Multiplicative-Expr)]
    AND        [reduce using rule 51 (Term)]
    AND        [reduce using rule 59 (Var)]
    OR         reduce using rule 41 (Expression)
    OR         [reduce using rule 46 (Multiplicative-Expr)]
    OR         [reduce using rule 51 (Term)]
    OR         [reduce using rule 59 (Var)]
    SUB        reduce using rule 46 (Multiplicative-Expr)
    SUB        [reduce using rule 51 (Term)]
    SUB        [reduce using rule 59 (Var)]
    ADD        reduce using rule 46 (Multiplicative-Expr)
    ADD        [reduce using rule 51 (Term)]
    ADD        [reduce using rule 59 (Var)]
    MULT       reduce using rule 51 (Term)
    MULT       [reduce using rule 59 (Var)]
    DIV        reduce using rule 51 (Term)
    DIV        [reduce using rule 59 (Var)]
    MOD        reduce using rule 51 (Term)
    MOD        [reduce using rule 59 (Var)]
    $default   reduce using rule 41 (Expression)

    Expression           go to state 131
    Multiplicative-Expr  go to state 58
    Term                 go to state 59
    Var                  go to state 60
    Ident                go to state 61


State 113

   45 Expression: Expression . COMMA Expression
   57 Term: UMINUS L_PAREN Expression . R_PAREN

    COMMA    shift, and go to state 86
    R_PAREN  shift, and go to state 132


State 114

   11 Statement: IF Bool-Expr THEN Statement . SEMICOLON ENDIF
   12          | IF Bool-Expr THEN Statement . SEMICOLON ELSE Statement SEMICOLON ENDIF
   20          | Statement . SEMICOLON Statement

    SEMICOLON  shift, and go to state 133


State 115

   23 Bool-Expr: Relation-And-Expr OR Relation-And-Expr .

    $default  reduce using rule 23 (Bool-Expr)


State 116

   26 Relation-And-Expr: Relation-Expr AND Relation-Expr .

    $default  reduce using rule 26 (Relation-And-Expr)


State 117

   45 Expression: Expression . COMMA Expression
   45           | Expression COMMA Expression .

    COMMA  shift, and go to state 86

    COMMA     [reduce using rule 45 (Expression)]
    $default  reduce using rule 45 (Expression)


State 118

   27 Relation-Expr: Expression Comp Expression .
   45 Expression: Expression . COMMA Expression

    COMMA  shift, and go to state 86

    $default  reduce using rule 27 (Relation-Expr)


State 119

   43 Expression: Multiplicative-Expr SUB Multiplicative-Expr .

    $default  reduce using rule 43 (Expression)


State 120

   44 Expression: Multiplicative-Expr ADD Multiplicative-Expr .

    $default  reduce using rule 44 (Expression)


State 121

   50 Multiplicative-Expr: Term MULT Term .

    $default  reduce using rule 50 (Multiplicative-Expr)


State 122

   49 Multiplicative-Expr: Term DIV Term .

    $default  reduce using rule 49 (Multiplicative-Expr)


State 123

   48 Multiplicative-Expr: Term MOD Term .

    $default  reduce using rule 48 (Multiplicative-Expr)


State 124

   45 Expression: Expression . COMMA Expression
   58 Term: Ident L_PAREN Expression . R_PAREN
   61 Var: Ident L_PAREN Expression . R_PAREN

    COMMA    shift, and go to state 86
    R_PAREN  shift, and go to state 134


State 125

   13 Statement: WHILE Bool-Expr BEGINLOOP Statement . SEMICOLON ENDLOOP
   20          | Statement . SEMICOLON Statement

    SEMICOLON  shift, and go to state 135


State 126

   14 Statement: DO BEGINLOOP Statement SEMICOLON . ENDLOOP WHILE Bool-Expr
   20          | Statement SEMICOLON . Statement

    IDENT     shift, and go to state 4
    IF        shift, and go to state 36
    WHILE     shift, and go to state 37
    DO        shift, and go to state 38
    FOR       shift, and go to state 39
    ENDLOOP   shift, and go to state 136
    CONTINUE  shift, and go to state 40
    READ      shift, and go to state 41
    WRITE     shift, and go to state 42
    RETURN    shift, and go to state 43

    $default  reduce using rule 59 (Var)

    Statement  go to state 105
    Var        go to state 45
    Ident      go to state 46


State 127

   15 Statement: FOR Var ASSIGN NUMBER . SEMICOLON Bool-Expr SEMICOLON Var ASSIGN Expression BEGINLOOP Statement SEMICOLON ENDLOOP

    SEMICOLON  shift, and go to state 137


State 128

   20 Statement: Statement SEMICOLON . Statement

    IDENT     shift, and go to state 4
    IF        shift, and go to state 36
    WHILE     shift, and go to state 37
    DO        shift, and go to state 38
    FOR       shift, and go to state 39
    CONTINUE  shift, and go to state 40
    READ      shift, and go to state 41
    WRITE     shift, and go to state 42
    RETURN    shift, and go to state 43

    $default  reduce using rule 59 (Var)

    Statement  go to state 105
    Var        go to state 45
    Ident      go to state 46


State 129

   61 Var: Ident L_PAREN Expression R_PAREN .

    $default  reduce using rule 61 (Var)


State 130

   34 Relation-Expr: NOT L_PAREN Bool-Expr R_PAREN .

    $default  reduce using rule 34 (Relation-Expr)


State 131

   31 Relation-Expr: NOT Expression Comp Expression .
   45 Expression: Expression . COMMA Expression

    COMMA  shift, and go to state 86

    $default  reduce using rule 31 (Relation-Expr)


State 132

   57 Term: UMINUS L_PAREN Expression R_PAREN .

    $default  reduce using rule 57 (Term)


State 133

   11 Statement: IF Bool-Expr THEN Statement SEMICOLON . ENDIF
   12          | IF Bool-Expr THEN Statement SEMICOLON . ELSE Statement SEMICOLON ENDIF
   20          | Statement SEMICOLON . Statement

    IDENT     shift, and go to state 4
    IF        shift, and go to state 36
    ENDIF     shift, and go to state 138
    ELSE      shift, and go to state 139
    WHILE     shift, and go to state 37
    DO        shift, and go to state 38
    FOR       shift, and go to state 39
    CONTINUE  shift, and go to state 40
    READ      shift, and go to state 41
    WRITE     shift, and go to state 42
    RETURN    shift, and go to state 43

    $default  reduce using rule 59 (Var)

    Statement  go to state 105
    Var        go to state 45
    Ident      go to state 46


State 134

   58 Term: Ident L_PAREN Expression R_PAREN .
   61 Var: Ident L_PAREN Expression R_PAREN .

    THEN       reduce using rule 58 (Term)
    THEN       [reduce using rule 61 (Var)]
    BEGINLOOP  reduce using rule 58 (Term)
    BEGINLOOP  [reduce using rule 61 (Var)]
    SEMICOLON  reduce using rule 58 (Term)
    SEMICOLON  [reduce using rule 61 (Var)]
    COMMA      reduce using rule 58 (Term)
    COMMA      [reduce using rule 61 (Var)]
    R_PAREN    reduce using rule 58 (Term)
    R_PAREN    [reduce using rule 61 (Var)]
    AND        reduce using rule 58 (Term)
    AND        [reduce using rule 61 (Var)]
    OR         reduce using rule 58 (Term)
    OR         [reduce using rule 61 (Var)]
    SUB        reduce using rule 58 (Term)
    SUB        [reduce using rule 61 (Var)]
    ADD        reduce using rule 58 (Term)
    ADD        [reduce using rule 61 (Var)]
    MULT       reduce using rule 58 (Term)
    MULT       [reduce using rule 61 (Var)]
    DIV        reduce using rule 58 (Term)
    DIV        [reduce using rule 61 (Var)]
    MOD        reduce using rule 58 (Term)
    MOD        [reduce using rule 61 (Var)]
    EQ         reduce using rule 58 (Term)
    EQ         [reduce using rule 61 (Var)]
    NEQ        reduce using rule 58 (Term)
    NEQ        [reduce using rule 61 (Var)]
    LT         reduce using rule 58 (Term)
    LT         [reduce using rule 61 (Var)]
    GT         reduce using rule 58 (Term)
    GT         [reduce using rule 61 (Var)]
    LTE        reduce using rule 58 (Term)
    LTE        [reduce using rule 61 (Var)]
    GTE        reduce using rule 58 (Term)
    GTE        [reduce using rule 61 (Var)]
    $default   reduce using rule 58 (Term)


State 135

   13 Statement: WHILE Bool-Expr BEGINLOOP Statement SEMICOLON . ENDLOOP
   20          | Statement SEMICOLON . Statement

    IDENT     shift, and go to state 4
    IF        shift, and go to state 36
    WHILE     shift, and go to state 37
    DO        shift, and go to state 38
    FOR       shift, and go to state 39
    ENDLOOP   shift, and go to state 140
    CONTINUE  shift, and go to state 40
    READ      shift, and go to state 41
    WRITE     shift, and go to state 42
    RETURN    shift, and go to state 43

    $default  reduce using rule 59 (Var)

    Statement  go to state 105
    Var        go to state 45
    Ident      go to state 46


State 136

   14 Statement: DO BEGINLOOP Statement SEMICOLON ENDLOOP . WHILE Bool-Expr

    WHILE  shift, and go to state 141


State 137

   15 Statement: FOR Var ASSIGN NUMBER SEMICOLON . Bool-Expr SEMICOLON Var ASSIGN Expression BEGINLOOP Statement SEMICOLON ENDLOOP

    IDENT    shift, and go to state 4
    NUMBER   shift, and go to state 48
    TRUE     shift, and go to state 49
    FALSE    shift, and go to state 50
    L_PAREN  shift, and go to state 51
    NOT      shift, and go to state 52
    UMINUS   shift, and go to state 53

    SEMICOLON  reduce using rule 21 (Bool-Expr)
    SEMICOLON  [reduce using rule 24 (Relation-And-Expr)]
    COMMA      reduce using rule 41 (Expression)
    COMMA      [reduce using rule 46 (Multiplicative-Expr)]
    COMMA      [reduce using rule 51 (Term)]
    COMMA      [reduce using rule 59 (Var)]
    OR         reduce using rule 24 (Relation-And-Expr)
    SUB        reduce using rule 46 (Multiplicative-Expr)
    SUB        [reduce using rule 51 (Term)]
    SUB        [reduce using rule 59 (Var)]
    ADD        reduce using rule 46 (Multiplicative-Expr)
    ADD        [reduce using rule 51 (Term)]
    ADD        [reduce using rule 59 (Var)]
    MULT       reduce using rule 51 (Term)
    MULT       [reduce using rule 59 (Var)]
    DIV        reduce using rule 51 (Term)
    DIV        [reduce using rule 59 (Var)]
    MOD        reduce using rule 51 (Term)
    MOD        [reduce using rule 59 (Var)]
    EQ         reduce using rule 41 (Expression)
    EQ         [reduce using rule 46 (Multiplicative-Expr)]
    EQ         [reduce using rule 51 (Term)]
    EQ         [reduce using rule 59 (Var)]
    NEQ        reduce using rule 41 (Expression)
    NEQ        [reduce using rule 46 (Multiplicative-Expr)]
    NEQ        [reduce using rule 51 (Term)]
    NEQ        [reduce using rule 59 (Var)]
    LT         reduce using rule 41 (Expression)
    LT         [reduce using rule 46 (Multiplicative-Expr)]
    LT         [reduce using rule 51 (Term)]
    LT         [reduce using rule 59 (Var)]
    GT         reduce using rule 41 (Expression)
    GT         [reduce using rule 46 (Multiplicative-Expr)]
    GT         [reduce using rule 51 (Term)]
    GT         [reduce using rule 59 (Var)]
    LTE        reduce using rule 41 (Expression)
    LTE        [reduce using rule 46 (Multiplicative-Expr)]
    LTE        [reduce using rule 51 (Term)]
    LTE        [reduce using rule 59 (Var)]
    GTE        reduce using rule 41 (Expression)
    GTE        [reduce using rule 46 (Multiplicative-Expr)]
    GTE        [reduce using rule 51 (Term)]
    GTE        [reduce using rule 59 (Var)]
    $default   reduce using rule 41 (Expression)

    Bool-Expr            go to state 142
    Relation-And-Expr    go to state 55
    Relation-Expr        go to state 56
    Expression           go to state 57
    Multiplicative-Expr  go to state 58
    Term                 go to state 59
    Var                  go to state 60
    Ident                go to state 61


State 138

   11 Statement: IF Bool-Expr THEN Statement SEMICOLON ENDIF .

    $default  reduce using rule 11 (Statement)


State 139

   12 Statement: IF Bool-Expr THEN Statement SEMICOLON ELSE . Statement SEMICOLON ENDIF

    IDENT     shift, and go to state 4
    IF        shift, and go to state 36
    WHILE     shift, and go to state 37
    DO        shift, and go to state 38
    FOR       shift, and go to state 39
    CONTINUE  shift, and go to state 40
    READ      shift, and go to state 41
    WRITE     shift, and go to state 42
    RETURN    shift, and go to state 43

    $default  reduce using rule 59 (Var)

    Statement  go to state 143
    Var        go to state 45
    Ident      go to state 46


State 140

   13 Statement: WHILE Bool-Expr BEGINLOOP Statement SEMICOLON ENDLOOP .

    $default  reduce using rule 13 (Statement)


State 141

   14 Statement: DO BEGINLOOP Statement SEMICOLON ENDLOOP WHILE . Bool-Expr

    IDENT    shift, and go to state 4
    NUMBER   shift, and go to state 48
    TRUE     shift, and go to state 49
    FALSE    shift, and go to state 50
    L_PAREN  shift, and go to state 51
    NOT      shift, and go to state 52
    UMINUS   shift, and go to state 53

    SEMICOLON  reduce using rule 21 (Bool-Expr)
    SEMICOLON  [reduce using rule 24 (Relation-And-Expr)]
    COMMA      reduce using rule 41 (Expression)
    COMMA      [reduce using rule 46 (Multiplicative-Expr)]
    COMMA      [reduce using rule 51 (Term)]
    COMMA      [reduce using rule 59 (Var)]
    OR         reduce using rule 24 (Relation-And-Expr)
    SUB        reduce using rule 46 (Multiplicative-Expr)
    SUB        [reduce using rule 51 (Term)]
    SUB        [reduce using rule 59 (Var)]
    ADD        reduce using rule 46 (Multiplicative-Expr)
    ADD        [reduce using rule 51 (Term)]
    ADD        [reduce using rule 59 (Var)]
    MULT       reduce using rule 51 (Term)
    MULT       [reduce using rule 59 (Var)]
    DIV        reduce using rule 51 (Term)
    DIV        [reduce using rule 59 (Var)]
    MOD        reduce using rule 51 (Term)
    MOD        [reduce using rule 59 (Var)]
    EQ         reduce using rule 41 (Expression)
    EQ         [reduce using rule 46 (Multiplicative-Expr)]
    EQ         [reduce using rule 51 (Term)]
    EQ         [reduce using rule 59 (Var)]
    NEQ        reduce using rule 41 (Expression)
    NEQ        [reduce using rule 46 (Multiplicative-Expr)]
    NEQ        [reduce using rule 51 (Term)]
    NEQ        [reduce using rule 59 (Var)]
    LT         reduce using rule 41 (Expression)
    LT         [reduce using rule 46 (Multiplicative-Expr)]
    LT         [reduce using rule 51 (Term)]
    LT         [reduce using rule 59 (Var)]
    GT         reduce using rule 41 (Expression)
    GT         [reduce using rule 46 (Multiplicative-Expr)]
    GT         [reduce using rule 51 (Term)]
    GT         [reduce using rule 59 (Var)]
    LTE        reduce using rule 41 (Expression)
    LTE        [reduce using rule 46 (Multiplicative-Expr)]
    LTE        [reduce using rule 51 (Term)]
    LTE        [reduce using rule 59 (Var)]
    GTE        reduce using rule 41 (Expression)
    GTE        [reduce using rule 46 (Multiplicative-Expr)]
    GTE        [reduce using rule 51 (Term)]
    GTE        [reduce using rule 59 (Var)]
    $default   reduce using rule 41 (Expression)

    Bool-Expr            go to state 144
    Relation-And-Expr    go to state 55
    Relation-Expr        go to state 56
    Expression           go to state 57
    Multiplicative-Expr  go to state 58
    Term                 go to state 59
    Var                  go to state 60
    Ident                go to state 61


State 142

   15 Statement: FOR Var ASSIGN NUMBER SEMICOLON Bool-Expr . SEMICOLON Var ASSIGN Expression BEGINLOOP Statement SEMICOLON ENDLOOP

    SEMICOLON  shift, and go to state 145


State 143

   12 Statement: IF Bool-Expr THEN Statement SEMICOLON ELSE Statement . SEMICOLON ENDIF
   20          | Statement . SEMICOLON Statement

    SEMICOLON  shift, and go to state 146


State 144

   14 Statement: DO BEGINLOOP Statement SEMICOLON ENDLOOP WHILE Bool-Expr .

    $default  reduce using rule 14 (Statement)


State 145

   15 Statement: FOR Var ASSIGN NUMBER SEMICOLON Bool-Expr SEMICOLON . Var ASSIGN Expression BEGINLOOP Statement SEMICOLON ENDLOOP

    IDENT  shift, and go to state 4

    $default  reduce using rule 59 (Var)

    Var    go to state 147
    Ident  go to state 46


State 146

   12 Statement: IF Bool-Expr THEN Statement SEMICOLON ELSE Statement SEMICOLON . ENDIF
   20          | Statement SEMICOLON . Statement

    IDENT     shift, and go to state 4
    IF        shift, and go to state 36
    ENDIF     shift, and go to state 148
    WHILE     shift, and go to state 37
    DO        shift, and go to state 38
    FOR       shift, and go to state 39
    CONTINUE  shift, and go to state 40
    READ      shift, and go to state 41
    WRITE     shift, and go to state 42
    RETURN    shift, and go to state 43

    $default  reduce using rule 59 (Var)

    Statement  go to state 105
    Var        go to state 45
    Ident      go to state 46


State 147

   15 Statement: FOR Var ASSIGN NUMBER SEMICOLON Bool-Expr SEMICOLON Var . ASSIGN Expression BEGINLOOP Statement SEMICOLON ENDLOOP
   62 Var: Var . COMMA Var

    COMMA   shift, and go to state 70
    ASSIGN  shift, and go to state 149


State 148

   12 Statement: IF Bool-Expr THEN Statement SEMICOLON ELSE Statement SEMICOLON ENDIF .

    $default  reduce using rule 12 (Statement)


State 149

   15 Statement: FOR Var ASSIGN NUMBER SEMICOLON Bool-Expr SEMICOLON Var ASSIGN . Expression BEGINLOOP Statement SEMICOLON ENDLOOP

    IDENT    shift, and go to state 4
    NUMBER   shift, and go to state 48
    L_PAREN  shift, and go to state 67
    UMINUS   shift, and go to state 53

    BEGINLOOP  reduce using rule 41 (Expression)
    BEGINLOOP  [reduce using rule 46 (Multiplicative-Expr)]
    BEGINLOOP  [reduce using rule 51 (Term)]
    BEGINLOOP  [reduce using rule 59 (Var)]
    COMMA      reduce using rule 41 (Expression)
    COMMA      [reduce using rule 46 (Multiplicative-Expr)]
    COMMA      [reduce using rule 51 (Term)]
    COMMA      [reduce using rule 59 (Var)]
    SUB        reduce using rule 46 (Multiplicative-Expr)
    SUB        [reduce using rule 51 (Term)]
    SUB        [reduce using rule 59 (Var)]
    ADD        reduce using rule 46 (Multiplicative-Expr)
    ADD        [reduce using rule 51 (Term)]
    ADD        [reduce using rule 59 (Var)]
    MULT       reduce using rule 51 (Term)
    MULT       [reduce using rule 59 (Var)]
    DIV        reduce using rule 51 (Term)
    DIV        [reduce using rule 59 (Var)]
    MOD        reduce using rule 51 (Term)
    MOD        [reduce using rule 59 (Var)]
    $default   reduce using rule 51 (Term)

    Expression           go to state 150
    Multiplicative-Expr  go to state 58
    Term                 go to state 59
    Var                  go to state 60
    Ident                go to state 61


State 150

   15 Statement: FOR Var ASSIGN NUMBER SEMICOLON Bool-Expr SEMICOLON Var ASSIGN Expression . BEGINLOOP Statement SEMICOLON ENDLOOP
   45 Expression: Expression . COMMA Expression

    BEGINLOOP  shift, and go to state 151
    COMMA      shift, and go to state 86


State 151

   15 Statement: FOR Var ASSIGN NUMBER SEMICOLON Bool-Expr SEMICOLON Var ASSIGN Expression BEGINLOOP . Statement SEMICOLON ENDLOOP

    IDENT     shift, and go to state 4
    IF        shift, and go to state 36
    WHILE     shift, and go to state 37
    DO        shift, and go to state 38
    FOR       shift, and go to state 39
    CONTINUE  shift, and go to state 40
    READ      shift, and go to state 41
    WRITE     shift, and go to state 42
    RETURN    shift, and go to state 43

    $default  reduce using rule 59 (Var)

    Statement  go to state 152
    Var        go to state 45
    Ident      go to state 46


State 152

   15 Statement: FOR Var ASSIGN NUMBER SEMICOLON Bool-Expr SEMICOLON Var ASSIGN Expression BEGINLOOP Statement . SEMICOLON ENDLOOP
   20          | Statement . SEMICOLON Statement

    SEMICOLON  shift, and go to state 153


State 153

   15 Statement: FOR Var ASSIGN NUMBER SEMICOLON Bool-Expr SEMICOLON Var ASSIGN Expression BEGINLOOP Statement SEMICOLON . ENDLOOP
   20          | Statement SEMICOLON . Statement

    IDENT     shift, and go to state 4
    IF        shift, and go to state 36
    WHILE     shift, and go to state 37
    DO        shift, and go to state 38
    FOR       shift, and go to state 39
    ENDLOOP   shift, and go to state 154
    CONTINUE  shift, and go to state 40
    READ      shift, and go to state 41
    WRITE     shift, and go to state 42
    RETURN    shift, and go to state 43

    $default  reduce using rule 59 (Var)

    Statement  go to state 105
    Var        go to state 45
    Ident      go to state 46


State 154

   15 Statement: FOR Var ASSIGN NUMBER SEMICOLON Bool-Expr SEMICOLON Var ASSIGN Expression BEGINLOOP Statement SEMICOLON ENDLOOP .

    $default  reduce using rule 15 (Statement)
