Nonterminals useless in grammar

   Ident


Rules useless in grammar

   65 Ident: IDENT


Rules useless in parser due to conflicts

    3 prog_start: Function

    4 Function: %empty

   11 Declaration: Declaration SEMICOLON Declaration

   22 Statement: Statement SEMICOLON Statement


State 0 conflicts: 1 shift/reduce, 1 reduce/reduce
State 3 conflicts: 1 shift/reduce, 1 reduce/reduce
State 18 conflicts: 1 shift/reduce
State 38 conflicts: 13 reduce/reduce
State 39 conflicts: 13 reduce/reduce
State 45 conflicts: 7 reduce/reduce
State 49 conflicts: 7 reduce/reduce
State 54 conflicts: 13 reduce/reduce
State 55 conflicts: 12 reduce/reduce
State 63 conflicts: 1 shift/reduce
State 69 conflicts: 7 reduce/reduce
State 73 conflicts: 7 reduce/reduce
State 75 conflicts: 7 reduce/reduce
State 80 conflicts: 13 reduce/reduce
State 83 conflicts: 7 reduce/reduce
State 84 conflicts: 1 shift/reduce
State 86 conflicts: 12 reduce/reduce
State 87 conflicts: 12 reduce/reduce
State 88 conflicts: 18 reduce/reduce
State 95 conflicts: 12 reduce/reduce
State 96 conflicts: 16 reduce/reduce
State 97 conflicts: 16 reduce/reduce
State 98 conflicts: 15 reduce/reduce
State 99 conflicts: 15 reduce/reduce
State 100 conflicts: 15 reduce/reduce
State 106 conflicts: 1 shift/reduce
State 107 conflicts: 1 shift/reduce
State 114 conflicts: 12 reduce/reduce
State 119 conflicts: 1 shift/reduce
State 130 conflicts: 18 reduce/reduce
State 137 conflicts: 13 reduce/reduce
State 141 conflicts: 13 reduce/reduce
State 149 conflicts: 7 reduce/reduce


Grammar

    0 $accept: prog_start $end

    1 prog_start: %empty
    2           | Function prog_start
    3           | Function

    4 Function: %empty
    5         | FUNCTION IDENT SEMICOLON BEGIN_PARAMS Declaration SEMICOLON END_PARAMS BEGIN_LOCALS Declaration SEMICOLON END_LOCALS BEGIN_BODY Statement SEMICOLON END_BODY

    6 Declaration: %empty
    7            | IDENT COLON INTEGER
    8            | IDENT COMMA IDENT COLON INTEGER
    9            | IDENT COLON ARRAY L_SQUARE_BRACKET NUMBER R_SQUARE_BRACKET OF INTEGER
   10            | IDENT COMMA IDENT COLON ARRAY L_SQUARE_BRACKET NUMBER R_SQUARE_BRACKET OF INTEGER
   11            | Declaration SEMICOLON Declaration

   12 Statement: Var ASSIGN Expression
   13          | IF Bool-Expr THEN Statement SEMICOLON ENDIF
   14          | IF Bool-Expr THEN Statement SEMICOLON ELSE Statement SEMICOLON ENDIF
   15          | WHILE Bool-Expr BEGINLOOP Statement SEMICOLON ENDLOOP
   16          | DO BEGINLOOP Statement SEMICOLON ENDLOOP WHILE Bool-Expr
   17          | FOR Var ASSIGN NUMBER SEMICOLON Bool-Expr SEMICOLON Var ASSIGN Expression BEGINLOOP Statement SEMICOLON ENDLOOP
   18          | READ Var
   19          | WRITE Var
   20          | CONTINUE
   21          | RETURN Expression
   22          | Statement SEMICOLON Statement

   23 Bool-Expr: %empty
   24          | Relation-And-Expr
   25          | Relation-And-Expr OR Relation-And-Expr

   26 Relation-And-Expr: %empty
   27                  | Relation-Expr
   28                  | Relation-Expr AND Relation-Expr

   29 Relation-Expr: Expression Comp Expression
   30              | TRUE
   31              | FALSE
   32              | L_PAREN Bool-Expr R_PAREN
   33              | NOT Expression Comp Expression
   34              | NOT TRUE
   35              | NOT FALSE
   36              | NOT L_PAREN Bool-Expr R_PAREN

   37 Comp: EQ
   38     | NEQ
   39     | LT
   40     | GT
   41     | LTE
   42     | GTE

   43 Expression: %empty
   44           | Multiplicative-Expr
   45           | Multiplicative-Expr SUB Multiplicative-Expr
   46           | Multiplicative-Expr ADD Multiplicative-Expr
   47           | Expression COMMA Expression

   48 Multiplicative-Expr: %empty
   49                    | Term
   50                    | Term MOD Term
   51                    | Term DIV Term
   52                    | Term MULT Term

   53 Term: %empty
   54     | Var
   55     | NUMBER
   56     | L_PAREN Expression R_PAREN
   57     | UMINUS Var
   58     | UMINUS NUMBER
   59     | UMINUS L_PAREN Expression R_PAREN
   60     | IDENT L_PAREN Expression R_PAREN

   61 Var: %empty
   62    | IDENT
   63    | IDENT L_PAREN Expression R_PAREN
   64    | Var COMMA Var


Terminals, with rules where they appear

$end (0) 0
error (256)
IDENT (258) 5 7 8 9 10 60 62 63
NUMBER (259) 9 10 17 55 58
FUNCTION (260) 5
BEGIN_PARAMS (261) 5
END_PARAMS (262) 5
BEGIN_LOCALS (263) 5
END_LOCALS (264) 5
BEGIN_BODY (265) 5
END_BODY (266) 5
INTEGER (267) 7 8 9 10
ARRAY (268) 9 10
OF (269) 9 10
IF (270) 13 14
THEN (271) 13 14
ENDIF (272) 13 14
ELSE (273) 14
WHILE (274) 15 16
DO (275) 16
FOR (276) 17
BEGINLOOP (277) 15 16 17
ENDLOOP (278) 15 16 17
CONTINUE (279) 20
READ (280) 18
WRITE (281) 19
TRUE (282) 30 34
FALSE (283) 31 35
RETURN (284) 21
SEMICOLON (285) 5 11 13 14 15 16 17 22
COLON (286) 7 8 9 10
COMMA (287) 8 10 47 64
L_PAREN (288) 32 36 56 59 60 63
R_PAREN (289) 32 36 56 59 60 63
L_SQUARE_BRACKET (290) 9 10
R_SQUARE_BRACKET (291) 9 10
AND (292) 28
OR (293) 25
SUB (294) 45
ADD (295) 46
MULT (296) 52
DIV (297) 51
MOD (298) 50
EQ (299) 37
NEQ (300) 38
LT (301) 39
GT (302) 40
LTE (303) 41
GTE (304) 42
ASSIGN (305) 12 17
NOT (306) 33 34 35 36
UMINUS (307) 57 58 59


Nonterminals, with rules where they appear

$accept (53)
    on left: 0
prog_start (54)
    on left: 1 2 3, on right: 0 2
Function (55)
    on left: 4 5, on right: 2 3
Declaration (56)
    on left: 6 7 8 9 10 11, on right: 5 11
Statement (57)
    on left: 12 13 14 15 16 17 18 19 20 21 22, on right: 5 13 14 15
    16 17 22
Bool-Expr (58)
    on left: 23 24 25, on right: 13 14 15 16 17 32 36
Relation-And-Expr (59)
    on left: 26 27 28, on right: 24 25
Relation-Expr (60)
    on left: 29 30 31 32 33 34 35 36, on right: 27 28
Comp (61)
    on left: 37 38 39 40 41 42, on right: 29 33
Expression (62)
    on left: 43 44 45 46 47, on right: 12 17 21 29 33 47 56 59 60 63
Multiplicative-Expr (63)
    on left: 48 49 50 51 52, on right: 44 45 46
Term (64)
    on left: 53 54 55 56 57 58 59 60, on right: 49 50 51 52
Var (65)
    on left: 61 62 63 64, on right: 12 17 18 19 54 57 64


State 0

    0 $accept: . prog_start $end

    FUNCTION  shift, and go to state 1

    $end      reduce using rule 1 (prog_start)
    $end      [reduce using rule 4 (Function)]
    FUNCTION  [reduce using rule 4 (Function)]
    $default  reduce using rule 1 (prog_start)

    prog_start  go to state 2
    Function    go to state 3


State 1

    5 Function: FUNCTION . IDENT SEMICOLON BEGIN_PARAMS Declaration SEMICOLON END_PARAMS BEGIN_LOCALS Declaration SEMICOLON END_LOCALS BEGIN_BODY Statement SEMICOLON END_BODY

    IDENT  shift, and go to state 4


State 2

    0 $accept: prog_start . $end

    $end  shift, and go to state 5


State 3

    2 prog_start: Function . prog_start
    3           | Function .

    FUNCTION  shift, and go to state 1

    $end      reduce using rule 1 (prog_start)
    $end      [reduce using rule 3 (prog_start)]
    $end      [reduce using rule 4 (Function)]
    FUNCTION  [reduce using rule 4 (Function)]
    $default  reduce using rule 1 (prog_start)

    prog_start  go to state 6
    Function    go to state 3


State 4

    5 Function: FUNCTION IDENT . SEMICOLON BEGIN_PARAMS Declaration SEMICOLON END_PARAMS BEGIN_LOCALS Declaration SEMICOLON END_LOCALS BEGIN_BODY Statement SEMICOLON END_BODY

    SEMICOLON  shift, and go to state 7


State 5

    0 $accept: prog_start $end .

    $default  accept


State 6

    2 prog_start: Function prog_start .

    $default  reduce using rule 2 (prog_start)


State 7

    5 Function: FUNCTION IDENT SEMICOLON . BEGIN_PARAMS Declaration SEMICOLON END_PARAMS BEGIN_LOCALS Declaration SEMICOLON END_LOCALS BEGIN_BODY Statement SEMICOLON END_BODY

    BEGIN_PARAMS  shift, and go to state 8


State 8

    5 Function: FUNCTION IDENT SEMICOLON BEGIN_PARAMS . Declaration SEMICOLON END_PARAMS BEGIN_LOCALS Declaration SEMICOLON END_LOCALS BEGIN_BODY Statement SEMICOLON END_BODY

    IDENT  shift, and go to state 9

    $default  reduce using rule 6 (Declaration)

    Declaration  go to state 10


State 9

    7 Declaration: IDENT . COLON INTEGER
    8            | IDENT . COMMA IDENT COLON INTEGER
    9            | IDENT . COLON ARRAY L_SQUARE_BRACKET NUMBER R_SQUARE_BRACKET OF INTEGER
   10            | IDENT . COMMA IDENT COLON ARRAY L_SQUARE_BRACKET NUMBER R_SQUARE_BRACKET OF INTEGER

    COLON  shift, and go to state 11
    COMMA  shift, and go to state 12


State 10

    5 Function: FUNCTION IDENT SEMICOLON BEGIN_PARAMS Declaration . SEMICOLON END_PARAMS BEGIN_LOCALS Declaration SEMICOLON END_LOCALS BEGIN_BODY Statement SEMICOLON END_BODY
   11 Declaration: Declaration . SEMICOLON Declaration

    SEMICOLON  shift, and go to state 13


State 11

    7 Declaration: IDENT COLON . INTEGER
    9            | IDENT COLON . ARRAY L_SQUARE_BRACKET NUMBER R_SQUARE_BRACKET OF INTEGER

    INTEGER  shift, and go to state 14
    ARRAY    shift, and go to state 15


State 12

    8 Declaration: IDENT COMMA . IDENT COLON INTEGER
   10            | IDENT COMMA . IDENT COLON ARRAY L_SQUARE_BRACKET NUMBER R_SQUARE_BRACKET OF INTEGER

    IDENT  shift, and go to state 16


State 13

    5 Function: FUNCTION IDENT SEMICOLON BEGIN_PARAMS Declaration SEMICOLON . END_PARAMS BEGIN_LOCALS Declaration SEMICOLON END_LOCALS BEGIN_BODY Statement SEMICOLON END_BODY
   11 Declaration: Declaration SEMICOLON . Declaration

    IDENT       shift, and go to state 9
    END_PARAMS  shift, and go to state 17

    $default  reduce using rule 6 (Declaration)

    Declaration  go to state 18


State 14

    7 Declaration: IDENT COLON INTEGER .

    $default  reduce using rule 7 (Declaration)


State 15

    9 Declaration: IDENT COLON ARRAY . L_SQUARE_BRACKET NUMBER R_SQUARE_BRACKET OF INTEGER

    L_SQUARE_BRACKET  shift, and go to state 19


State 16

    8 Declaration: IDENT COMMA IDENT . COLON INTEGER
   10            | IDENT COMMA IDENT . COLON ARRAY L_SQUARE_BRACKET NUMBER R_SQUARE_BRACKET OF INTEGER

    COLON  shift, and go to state 20


State 17

    5 Function: FUNCTION IDENT SEMICOLON BEGIN_PARAMS Declaration SEMICOLON END_PARAMS . BEGIN_LOCALS Declaration SEMICOLON END_LOCALS BEGIN_BODY Statement SEMICOLON END_BODY

    BEGIN_LOCALS  shift, and go to state 21


State 18

   11 Declaration: Declaration . SEMICOLON Declaration
   11            | Declaration SEMICOLON Declaration .

    SEMICOLON  shift, and go to state 22

    SEMICOLON  [reduce using rule 11 (Declaration)]


State 19

    9 Declaration: IDENT COLON ARRAY L_SQUARE_BRACKET . NUMBER R_SQUARE_BRACKET OF INTEGER

    NUMBER  shift, and go to state 23


State 20

    8 Declaration: IDENT COMMA IDENT COLON . INTEGER
   10            | IDENT COMMA IDENT COLON . ARRAY L_SQUARE_BRACKET NUMBER R_SQUARE_BRACKET OF INTEGER

    INTEGER  shift, and go to state 24
    ARRAY    shift, and go to state 25


State 21

    5 Function: FUNCTION IDENT SEMICOLON BEGIN_PARAMS Declaration SEMICOLON END_PARAMS BEGIN_LOCALS . Declaration SEMICOLON END_LOCALS BEGIN_BODY Statement SEMICOLON END_BODY

    IDENT  shift, and go to state 9

    $default  reduce using rule 6 (Declaration)

    Declaration  go to state 26


State 22

   11 Declaration: Declaration SEMICOLON . Declaration

    IDENT  shift, and go to state 9

    $default  reduce using rule 6 (Declaration)

    Declaration  go to state 18


State 23

    9 Declaration: IDENT COLON ARRAY L_SQUARE_BRACKET NUMBER . R_SQUARE_BRACKET OF INTEGER

    R_SQUARE_BRACKET  shift, and go to state 27


State 24

    8 Declaration: IDENT COMMA IDENT COLON INTEGER .

    $default  reduce using rule 8 (Declaration)


State 25

   10 Declaration: IDENT COMMA IDENT COLON ARRAY . L_SQUARE_BRACKET NUMBER R_SQUARE_BRACKET OF INTEGER

    L_SQUARE_BRACKET  shift, and go to state 28


State 26

    5 Function: FUNCTION IDENT SEMICOLON BEGIN_PARAMS Declaration SEMICOLON END_PARAMS BEGIN_LOCALS Declaration . SEMICOLON END_LOCALS BEGIN_BODY Statement SEMICOLON END_BODY
   11 Declaration: Declaration . SEMICOLON Declaration

    SEMICOLON  shift, and go to state 29


State 27

    9 Declaration: IDENT COLON ARRAY L_SQUARE_BRACKET NUMBER R_SQUARE_BRACKET . OF INTEGER

    OF  shift, and go to state 30


State 28

   10 Declaration: IDENT COMMA IDENT COLON ARRAY L_SQUARE_BRACKET . NUMBER R_SQUARE_BRACKET OF INTEGER

    NUMBER  shift, and go to state 31


State 29

    5 Function: FUNCTION IDENT SEMICOLON BEGIN_PARAMS Declaration SEMICOLON END_PARAMS BEGIN_LOCALS Declaration SEMICOLON . END_LOCALS BEGIN_BODY Statement SEMICOLON END_BODY
   11 Declaration: Declaration SEMICOLON . Declaration

    IDENT       shift, and go to state 9
    END_LOCALS  shift, and go to state 32

    $default  reduce using rule 6 (Declaration)

    Declaration  go to state 18


State 30

    9 Declaration: IDENT COLON ARRAY L_SQUARE_BRACKET NUMBER R_SQUARE_BRACKET OF . INTEGER

    INTEGER  shift, and go to state 33


State 31

   10 Declaration: IDENT COMMA IDENT COLON ARRAY L_SQUARE_BRACKET NUMBER . R_SQUARE_BRACKET OF INTEGER

    R_SQUARE_BRACKET  shift, and go to state 34


State 32

    5 Function: FUNCTION IDENT SEMICOLON BEGIN_PARAMS Declaration SEMICOLON END_PARAMS BEGIN_LOCALS Declaration SEMICOLON END_LOCALS . BEGIN_BODY Statement SEMICOLON END_BODY

    BEGIN_BODY  shift, and go to state 35


State 33

    9 Declaration: IDENT COLON ARRAY L_SQUARE_BRACKET NUMBER R_SQUARE_BRACKET OF INTEGER .

    $default  reduce using rule 9 (Declaration)


State 34

   10 Declaration: IDENT COMMA IDENT COLON ARRAY L_SQUARE_BRACKET NUMBER R_SQUARE_BRACKET . OF INTEGER

    OF  shift, and go to state 36


State 35

    5 Function: FUNCTION IDENT SEMICOLON BEGIN_PARAMS Declaration SEMICOLON END_PARAMS BEGIN_LOCALS Declaration SEMICOLON END_LOCALS BEGIN_BODY . Statement SEMICOLON END_BODY

    IDENT     shift, and go to state 37
    IF        shift, and go to state 38
    WHILE     shift, and go to state 39
    DO        shift, and go to state 40
    FOR       shift, and go to state 41
    CONTINUE  shift, and go to state 42
    READ      shift, and go to state 43
    WRITE     shift, and go to state 44
    RETURN    shift, and go to state 45

    $default  reduce using rule 61 (Var)

    Statement  go to state 46
    Var        go to state 47


State 36

   10 Declaration: IDENT COMMA IDENT COLON ARRAY L_SQUARE_BRACKET NUMBER R_SQUARE_BRACKET OF . INTEGER

    INTEGER  shift, and go to state 48


State 37

   62 Var: IDENT .
   63    | IDENT . L_PAREN Expression R_PAREN

    L_PAREN  shift, and go to state 49

    $default  reduce using rule 62 (Var)


State 38

   13 Statement: IF . Bool-Expr THEN Statement SEMICOLON ENDIF
   14          | IF . Bool-Expr THEN Statement SEMICOLON ELSE Statement SEMICOLON ENDIF

    IDENT    shift, and go to state 50
    NUMBER   shift, and go to state 51
    TRUE     shift, and go to state 52
    FALSE    shift, and go to state 53
    L_PAREN  shift, and go to state 54
    NOT      shift, and go to state 55
    UMINUS   shift, and go to state 56

    THEN      reduce using rule 23 (Bool-Expr)
    THEN      [reduce using rule 26 (Relation-And-Expr)]
    COMMA     reduce using rule 43 (Expression)
    COMMA     [reduce using rule 48 (Multiplicative-Expr)]
    COMMA     [reduce using rule 53 (Term)]
    COMMA     [reduce using rule 61 (Var)]
    OR        reduce using rule 26 (Relation-And-Expr)
    SUB       reduce using rule 48 (Multiplicative-Expr)
    SUB       [reduce using rule 53 (Term)]
    SUB       [reduce using rule 61 (Var)]
    ADD       reduce using rule 48 (Multiplicative-Expr)
    ADD       [reduce using rule 53 (Term)]
    ADD       [reduce using rule 61 (Var)]
    MULT      reduce using rule 53 (Term)
    MULT      [reduce using rule 61 (Var)]
    DIV       reduce using rule 53 (Term)
    DIV       [reduce using rule 61 (Var)]
    MOD       reduce using rule 53 (Term)
    MOD       [reduce using rule 61 (Var)]
    EQ        reduce using rule 43 (Expression)
    EQ        [reduce using rule 48 (Multiplicative-Expr)]
    EQ        [reduce using rule 53 (Term)]
    EQ        [reduce using rule 61 (Var)]
    NEQ       reduce using rule 43 (Expression)
    NEQ       [reduce using rule 48 (Multiplicative-Expr)]
    NEQ       [reduce using rule 53 (Term)]
    NEQ       [reduce using rule 61 (Var)]
    LT        reduce using rule 43 (Expression)
    LT        [reduce using rule 48 (Multiplicative-Expr)]
    LT        [reduce using rule 53 (Term)]
    LT        [reduce using rule 61 (Var)]
    GT        reduce using rule 43 (Expression)
    GT        [reduce using rule 48 (Multiplicative-Expr)]
    GT        [reduce using rule 53 (Term)]
    GT        [reduce using rule 61 (Var)]
    LTE       reduce using rule 43 (Expression)
    LTE       [reduce using rule 48 (Multiplicative-Expr)]
    LTE       [reduce using rule 53 (Term)]
    LTE       [reduce using rule 61 (Var)]
    GTE       reduce using rule 43 (Expression)
    GTE       [reduce using rule 48 (Multiplicative-Expr)]
    GTE       [reduce using rule 53 (Term)]
    GTE       [reduce using rule 61 (Var)]
    $default  reduce using rule 43 (Expression)

    Bool-Expr            go to state 57
    Relation-And-Expr    go to state 58
    Relation-Expr        go to state 59
    Expression           go to state 60
    Multiplicative-Expr  go to state 61
    Term                 go to state 62
    Var                  go to state 63


State 39

   15 Statement: WHILE . Bool-Expr BEGINLOOP Statement SEMICOLON ENDLOOP

    IDENT    shift, and go to state 50
    NUMBER   shift, and go to state 51
    TRUE     shift, and go to state 52
    FALSE    shift, and go to state 53
    L_PAREN  shift, and go to state 54
    NOT      shift, and go to state 55
    UMINUS   shift, and go to state 56

    BEGINLOOP  reduce using rule 23 (Bool-Expr)
    BEGINLOOP  [reduce using rule 26 (Relation-And-Expr)]
    COMMA      reduce using rule 43 (Expression)
    COMMA      [reduce using rule 48 (Multiplicative-Expr)]
    COMMA      [reduce using rule 53 (Term)]
    COMMA      [reduce using rule 61 (Var)]
    OR         reduce using rule 26 (Relation-And-Expr)
    SUB        reduce using rule 48 (Multiplicative-Expr)
    SUB        [reduce using rule 53 (Term)]
    SUB        [reduce using rule 61 (Var)]
    ADD        reduce using rule 48 (Multiplicative-Expr)
    ADD        [reduce using rule 53 (Term)]
    ADD        [reduce using rule 61 (Var)]
    MULT       reduce using rule 53 (Term)
    MULT       [reduce using rule 61 (Var)]
    DIV        reduce using rule 53 (Term)
    DIV        [reduce using rule 61 (Var)]
    MOD        reduce using rule 53 (Term)
    MOD        [reduce using rule 61 (Var)]
    EQ         reduce using rule 43 (Expression)
    EQ         [reduce using rule 48 (Multiplicative-Expr)]
    EQ         [reduce using rule 53 (Term)]
    EQ         [reduce using rule 61 (Var)]
    NEQ        reduce using rule 43 (Expression)
    NEQ        [reduce using rule 48 (Multiplicative-Expr)]
    NEQ        [reduce using rule 53 (Term)]
    NEQ        [reduce using rule 61 (Var)]
    LT         reduce using rule 43 (Expression)
    LT         [reduce using rule 48 (Multiplicative-Expr)]
    LT         [reduce using rule 53 (Term)]
    LT         [reduce using rule 61 (Var)]
    GT         reduce using rule 43 (Expression)
    GT         [reduce using rule 48 (Multiplicative-Expr)]
    GT         [reduce using rule 53 (Term)]
    GT         [reduce using rule 61 (Var)]
    LTE        reduce using rule 43 (Expression)
    LTE        [reduce using rule 48 (Multiplicative-Expr)]
    LTE        [reduce using rule 53 (Term)]
    LTE        [reduce using rule 61 (Var)]
    GTE        reduce using rule 43 (Expression)
    GTE        [reduce using rule 48 (Multiplicative-Expr)]
    GTE        [reduce using rule 53 (Term)]
    GTE        [reduce using rule 61 (Var)]
    $default   reduce using rule 43 (Expression)

    Bool-Expr            go to state 64
    Relation-And-Expr    go to state 58
    Relation-Expr        go to state 59
    Expression           go to state 60
    Multiplicative-Expr  go to state 61
    Term                 go to state 62
    Var                  go to state 63


State 40

   16 Statement: DO . BEGINLOOP Statement SEMICOLON ENDLOOP WHILE Bool-Expr

    BEGINLOOP  shift, and go to state 65


State 41

   17 Statement: FOR . Var ASSIGN NUMBER SEMICOLON Bool-Expr SEMICOLON Var ASSIGN Expression BEGINLOOP Statement SEMICOLON ENDLOOP

    IDENT  shift, and go to state 37

    $default  reduce using rule 61 (Var)

    Var  go to state 66


State 42

   20 Statement: CONTINUE .

    $default  reduce using rule 20 (Statement)


State 43

   18 Statement: READ . Var

    IDENT  shift, and go to state 37

    $default  reduce using rule 61 (Var)

    Var  go to state 67


State 44

   19 Statement: WRITE . Var

    IDENT  shift, and go to state 37

    $default  reduce using rule 61 (Var)

    Var  go to state 68


State 45

   21 Statement: RETURN . Expression

    IDENT    shift, and go to state 50
    NUMBER   shift, and go to state 51
    L_PAREN  shift, and go to state 69
    UMINUS   shift, and go to state 56

    SEMICOLON  reduce using rule 43 (Expression)
    SEMICOLON  [reduce using rule 48 (Multiplicative-Expr)]
    SEMICOLON  [reduce using rule 53 (Term)]
    SEMICOLON  [reduce using rule 61 (Var)]
    COMMA      reduce using rule 43 (Expression)
    COMMA      [reduce using rule 48 (Multiplicative-Expr)]
    COMMA      [reduce using rule 53 (Term)]
    COMMA      [reduce using rule 61 (Var)]
    SUB        reduce using rule 48 (Multiplicative-Expr)
    SUB        [reduce using rule 53 (Term)]
    SUB        [reduce using rule 61 (Var)]
    ADD        reduce using rule 48 (Multiplicative-Expr)
    ADD        [reduce using rule 53 (Term)]
    ADD        [reduce using rule 61 (Var)]
    MULT       reduce using rule 53 (Term)
    MULT       [reduce using rule 61 (Var)]
    DIV        reduce using rule 53 (Term)
    DIV        [reduce using rule 61 (Var)]
    MOD        reduce using rule 53 (Term)
    MOD        [reduce using rule 61 (Var)]
    $default   reduce using rule 53 (Term)

    Expression           go to state 70
    Multiplicative-Expr  go to state 61
    Term                 go to state 62
    Var                  go to state 63


State 46

    5 Function: FUNCTION IDENT SEMICOLON BEGIN_PARAMS Declaration SEMICOLON END_PARAMS BEGIN_LOCALS Declaration SEMICOLON END_LOCALS BEGIN_BODY Statement . SEMICOLON END_BODY
   22 Statement: Statement . SEMICOLON Statement

    SEMICOLON  shift, and go to state 71


State 47

   12 Statement: Var . ASSIGN Expression
   64 Var: Var . COMMA Var

    COMMA   shift, and go to state 72
    ASSIGN  shift, and go to state 73


State 48

   10 Declaration: IDENT COMMA IDENT COLON ARRAY L_SQUARE_BRACKET NUMBER R_SQUARE_BRACKET OF INTEGER .

    $default  reduce using rule 10 (Declaration)


State 49

   63 Var: IDENT L_PAREN . Expression R_PAREN

    IDENT    shift, and go to state 50
    NUMBER   shift, and go to state 51
    L_PAREN  shift, and go to state 69
    UMINUS   shift, and go to state 56

    COMMA     reduce using rule 43 (Expression)
    COMMA     [reduce using rule 48 (Multiplicative-Expr)]
    COMMA     [reduce using rule 53 (Term)]
    COMMA     [reduce using rule 61 (Var)]
    R_PAREN   reduce using rule 43 (Expression)
    R_PAREN   [reduce using rule 48 (Multiplicative-Expr)]
    R_PAREN   [reduce using rule 53 (Term)]
    R_PAREN   [reduce using rule 61 (Var)]
    SUB       reduce using rule 48 (Multiplicative-Expr)
    SUB       [reduce using rule 53 (Term)]
    SUB       [reduce using rule 61 (Var)]
    ADD       reduce using rule 48 (Multiplicative-Expr)
    ADD       [reduce using rule 53 (Term)]
    ADD       [reduce using rule 61 (Var)]
    MULT      reduce using rule 53 (Term)
    MULT      [reduce using rule 61 (Var)]
    DIV       reduce using rule 53 (Term)
    DIV       [reduce using rule 61 (Var)]
    MOD       reduce using rule 53 (Term)
    MOD       [reduce using rule 61 (Var)]
    $default  reduce using rule 53 (Term)

    Expression           go to state 74
    Multiplicative-Expr  go to state 61
    Term                 go to state 62
    Var                  go to state 63


State 50

   60 Term: IDENT . L_PAREN Expression R_PAREN
   62 Var: IDENT .
   63    | IDENT . L_PAREN Expression R_PAREN

    L_PAREN  shift, and go to state 75

    $default  reduce using rule 62 (Var)


State 51

   55 Term: NUMBER .

    $default  reduce using rule 55 (Term)


State 52

   30 Relation-Expr: TRUE .

    $default  reduce using rule 30 (Relation-Expr)


State 53

   31 Relation-Expr: FALSE .

    $default  reduce using rule 31 (Relation-Expr)


State 54

   32 Relation-Expr: L_PAREN . Bool-Expr R_PAREN
   56 Term: L_PAREN . Expression R_PAREN

    IDENT    shift, and go to state 50
    NUMBER   shift, and go to state 51
    TRUE     shift, and go to state 52
    FALSE    shift, and go to state 53
    L_PAREN  shift, and go to state 54
    NOT      shift, and go to state 55
    UMINUS   shift, and go to state 56

    COMMA     reduce using rule 43 (Expression)
    COMMA     [reduce using rule 48 (Multiplicative-Expr)]
    COMMA     [reduce using rule 53 (Term)]
    COMMA     [reduce using rule 61 (Var)]
    R_PAREN   reduce using rule 23 (Bool-Expr)
    R_PAREN   [reduce using rule 26 (Relation-And-Expr)]
    R_PAREN   [reduce using rule 43 (Expression)]
    R_PAREN   [reduce using rule 48 (Multiplicative-Expr)]
    R_PAREN   [reduce using rule 53 (Term)]
    R_PAREN   [reduce using rule 61 (Var)]
    OR        reduce using rule 26 (Relation-And-Expr)
    SUB       reduce using rule 48 (Multiplicative-Expr)
    SUB       [reduce using rule 53 (Term)]
    SUB       [reduce using rule 61 (Var)]
    ADD       reduce using rule 48 (Multiplicative-Expr)
    ADD       [reduce using rule 53 (Term)]
    ADD       [reduce using rule 61 (Var)]
    MULT      reduce using rule 53 (Term)
    MULT      [reduce using rule 61 (Var)]
    DIV       reduce using rule 53 (Term)
    DIV       [reduce using rule 61 (Var)]
    MOD       reduce using rule 53 (Term)
    MOD       [reduce using rule 61 (Var)]
    EQ        reduce using rule 43 (Expression)
    EQ        [reduce using rule 48 (Multiplicative-Expr)]
    EQ        [reduce using rule 53 (Term)]
    EQ        [reduce using rule 61 (Var)]
    NEQ       reduce using rule 43 (Expression)
    NEQ       [reduce using rule 48 (Multiplicative-Expr)]
    NEQ       [reduce using rule 53 (Term)]
    NEQ       [reduce using rule 61 (Var)]
    LT        reduce using rule 43 (Expression)
    LT        [reduce using rule 48 (Multiplicative-Expr)]
    LT        [reduce using rule 53 (Term)]
    LT        [reduce using rule 61 (Var)]
    GT        reduce using rule 43 (Expression)
    GT        [reduce using rule 48 (Multiplicative-Expr)]
    GT        [reduce using rule 53 (Term)]
    GT        [reduce using rule 61 (Var)]
    LTE       reduce using rule 43 (Expression)
    LTE       [reduce using rule 48 (Multiplicative-Expr)]
    LTE       [reduce using rule 53 (Term)]
    LTE       [reduce using rule 61 (Var)]
    GTE       reduce using rule 43 (Expression)
    GTE       [reduce using rule 48 (Multiplicative-Expr)]
    GTE       [reduce using rule 53 (Term)]
    GTE       [reduce using rule 61 (Var)]
    $default  reduce using rule 43 (Expression)

    Bool-Expr            go to state 76
    Relation-And-Expr    go to state 58
    Relation-Expr        go to state 59
    Expression           go to state 77
    Multiplicative-Expr  go to state 61
    Term                 go to state 62
    Var                  go to state 63


State 55

   33 Relation-Expr: NOT . Expression Comp Expression
   34              | NOT . TRUE
   35              | NOT . FALSE
   36              | NOT . L_PAREN Bool-Expr R_PAREN

    IDENT    shift, and go to state 50
    NUMBER   shift, and go to state 51
    TRUE     shift, and go to state 78
    FALSE    shift, and go to state 79
    L_PAREN  shift, and go to state 80
    UMINUS   shift, and go to state 56

    COMMA     reduce using rule 43 (Expression)
    COMMA     [reduce using rule 48 (Multiplicative-Expr)]
    COMMA     [reduce using rule 53 (Term)]
    COMMA     [reduce using rule 61 (Var)]
    SUB       reduce using rule 48 (Multiplicative-Expr)
    SUB       [reduce using rule 53 (Term)]
    SUB       [reduce using rule 61 (Var)]
    ADD       reduce using rule 48 (Multiplicative-Expr)
    ADD       [reduce using rule 53 (Term)]
    ADD       [reduce using rule 61 (Var)]
    MULT      reduce using rule 53 (Term)
    MULT      [reduce using rule 61 (Var)]
    DIV       reduce using rule 53 (Term)
    DIV       [reduce using rule 61 (Var)]
    MOD       reduce using rule 53 (Term)
    MOD       [reduce using rule 61 (Var)]
    EQ        reduce using rule 43 (Expression)
    EQ        [reduce using rule 48 (Multiplicative-Expr)]
    EQ        [reduce using rule 53 (Term)]
    EQ        [reduce using rule 61 (Var)]
    NEQ       reduce using rule 43 (Expression)
    NEQ       [reduce using rule 48 (Multiplicative-Expr)]
    NEQ       [reduce using rule 53 (Term)]
    NEQ       [reduce using rule 61 (Var)]
    LT        reduce using rule 43 (Expression)
    LT        [reduce using rule 48 (Multiplicative-Expr)]
    LT        [reduce using rule 53 (Term)]
    LT        [reduce using rule 61 (Var)]
    GT        reduce using rule 43 (Expression)
    GT        [reduce using rule 48 (Multiplicative-Expr)]
    GT        [reduce using rule 53 (Term)]
    GT        [reduce using rule 61 (Var)]
    LTE       reduce using rule 43 (Expression)
    LTE       [reduce using rule 48 (Multiplicative-Expr)]
    LTE       [reduce using rule 53 (Term)]
    LTE       [reduce using rule 61 (Var)]
    GTE       reduce using rule 43 (Expression)
    GTE       [reduce using rule 48 (Multiplicative-Expr)]
    GTE       [reduce using rule 53 (Term)]
    GTE       [reduce using rule 61 (Var)]
    $default  reduce using rule 43 (Expression)

    Expression           go to state 81
    Multiplicative-Expr  go to state 61
    Term                 go to state 62
    Var                  go to state 63


State 56

   57 Term: UMINUS . Var
   58     | UMINUS . NUMBER
   59     | UMINUS . L_PAREN Expression R_PAREN

    IDENT    shift, and go to state 37
    NUMBER   shift, and go to state 82
    L_PAREN  shift, and go to state 83

    $default  reduce using rule 61 (Var)

    Var  go to state 84


State 57

   13 Statement: IF Bool-Expr . THEN Statement SEMICOLON ENDIF
   14          | IF Bool-Expr . THEN Statement SEMICOLON ELSE Statement SEMICOLON ENDIF

    THEN  shift, and go to state 85


State 58

   24 Bool-Expr: Relation-And-Expr .
   25          | Relation-And-Expr . OR Relation-And-Expr

    OR  shift, and go to state 86

    $default  reduce using rule 24 (Bool-Expr)


State 59

   27 Relation-And-Expr: Relation-Expr .
   28                  | Relation-Expr . AND Relation-Expr

    AND  shift, and go to state 87

    $default  reduce using rule 27 (Relation-And-Expr)


State 60

   29 Relation-Expr: Expression . Comp Expression
   47 Expression: Expression . COMMA Expression

    COMMA  shift, and go to state 88
    EQ     shift, and go to state 89
    NEQ    shift, and go to state 90
    LT     shift, and go to state 91
    GT     shift, and go to state 92
    LTE    shift, and go to state 93
    GTE    shift, and go to state 94

    Comp  go to state 95


State 61

   44 Expression: Multiplicative-Expr .
   45           | Multiplicative-Expr . SUB Multiplicative-Expr
   46           | Multiplicative-Expr . ADD Multiplicative-Expr

    SUB  shift, and go to state 96
    ADD  shift, and go to state 97

    $default  reduce using rule 44 (Expression)


State 62

   49 Multiplicative-Expr: Term .
   50                    | Term . MOD Term
   51                    | Term . DIV Term
   52                    | Term . MULT Term

    MULT  shift, and go to state 98
    DIV   shift, and go to state 99
    MOD   shift, and go to state 100

    $default  reduce using rule 49 (Multiplicative-Expr)


State 63

   54 Term: Var .
   64 Var: Var . COMMA Var

    COMMA  shift, and go to state 72

    COMMA     [reduce using rule 54 (Term)]
    $default  reduce using rule 54 (Term)


State 64

   15 Statement: WHILE Bool-Expr . BEGINLOOP Statement SEMICOLON ENDLOOP

    BEGINLOOP  shift, and go to state 101


State 65

   16 Statement: DO BEGINLOOP . Statement SEMICOLON ENDLOOP WHILE Bool-Expr

    IDENT     shift, and go to state 37
    IF        shift, and go to state 38
    WHILE     shift, and go to state 39
    DO        shift, and go to state 40
    FOR       shift, and go to state 41
    CONTINUE  shift, and go to state 42
    READ      shift, and go to state 43
    WRITE     shift, and go to state 44
    RETURN    shift, and go to state 45

    $default  reduce using rule 61 (Var)

    Statement  go to state 102
    Var        go to state 47


State 66

   17 Statement: FOR Var . ASSIGN NUMBER SEMICOLON Bool-Expr SEMICOLON Var ASSIGN Expression BEGINLOOP Statement SEMICOLON ENDLOOP
   64 Var: Var . COMMA Var

    COMMA   shift, and go to state 72
    ASSIGN  shift, and go to state 103


State 67

   18 Statement: READ Var .
   64 Var: Var . COMMA Var

    COMMA  shift, and go to state 72

    $default  reduce using rule 18 (Statement)


State 68

   19 Statement: WRITE Var .
   64 Var: Var . COMMA Var

    COMMA  shift, and go to state 72

    $default  reduce using rule 19 (Statement)


State 69

   56 Term: L_PAREN . Expression R_PAREN

    IDENT    shift, and go to state 50
    NUMBER   shift, and go to state 51
    L_PAREN  shift, and go to state 69
    UMINUS   shift, and go to state 56

    COMMA     reduce using rule 43 (Expression)
    COMMA     [reduce using rule 48 (Multiplicative-Expr)]
    COMMA     [reduce using rule 53 (Term)]
    COMMA     [reduce using rule 61 (Var)]
    R_PAREN   reduce using rule 43 (Expression)
    R_PAREN   [reduce using rule 48 (Multiplicative-Expr)]
    R_PAREN   [reduce using rule 53 (Term)]
    R_PAREN   [reduce using rule 61 (Var)]
    SUB       reduce using rule 48 (Multiplicative-Expr)
    SUB       [reduce using rule 53 (Term)]
    SUB       [reduce using rule 61 (Var)]
    ADD       reduce using rule 48 (Multiplicative-Expr)
    ADD       [reduce using rule 53 (Term)]
    ADD       [reduce using rule 61 (Var)]
    MULT      reduce using rule 53 (Term)
    MULT      [reduce using rule 61 (Var)]
    DIV       reduce using rule 53 (Term)
    DIV       [reduce using rule 61 (Var)]
    MOD       reduce using rule 53 (Term)
    MOD       [reduce using rule 61 (Var)]
    $default  reduce using rule 53 (Term)

    Expression           go to state 104
    Multiplicative-Expr  go to state 61
    Term                 go to state 62
    Var                  go to state 63


State 70

   21 Statement: RETURN Expression .
   47 Expression: Expression . COMMA Expression

    COMMA  shift, and go to state 88

    $default  reduce using rule 21 (Statement)


State 71

    5 Function: FUNCTION IDENT SEMICOLON BEGIN_PARAMS Declaration SEMICOLON END_PARAMS BEGIN_LOCALS Declaration SEMICOLON END_LOCALS BEGIN_BODY Statement SEMICOLON . END_BODY
   22 Statement: Statement SEMICOLON . Statement

    IDENT     shift, and go to state 37
    END_BODY  shift, and go to state 105
    IF        shift, and go to state 38
    WHILE     shift, and go to state 39
    DO        shift, and go to state 40
    FOR       shift, and go to state 41
    CONTINUE  shift, and go to state 42
    READ      shift, and go to state 43
    WRITE     shift, and go to state 44
    RETURN    shift, and go to state 45

    $default  reduce using rule 61 (Var)

    Statement  go to state 106
    Var        go to state 47


State 72

   64 Var: Var COMMA . Var

    IDENT  shift, and go to state 37

    $default  reduce using rule 61 (Var)

    Var  go to state 107


State 73

   12 Statement: Var ASSIGN . Expression

    IDENT    shift, and go to state 50
    NUMBER   shift, and go to state 51
    L_PAREN  shift, and go to state 69
    UMINUS   shift, and go to state 56

    SEMICOLON  reduce using rule 43 (Expression)
    SEMICOLON  [reduce using rule 48 (Multiplicative-Expr)]
    SEMICOLON  [reduce using rule 53 (Term)]
    SEMICOLON  [reduce using rule 61 (Var)]
    COMMA      reduce using rule 43 (Expression)
    COMMA      [reduce using rule 48 (Multiplicative-Expr)]
    COMMA      [reduce using rule 53 (Term)]
    COMMA      [reduce using rule 61 (Var)]
    SUB        reduce using rule 48 (Multiplicative-Expr)
    SUB        [reduce using rule 53 (Term)]
    SUB        [reduce using rule 61 (Var)]
    ADD        reduce using rule 48 (Multiplicative-Expr)
    ADD        [reduce using rule 53 (Term)]
    ADD        [reduce using rule 61 (Var)]
    MULT       reduce using rule 53 (Term)
    MULT       [reduce using rule 61 (Var)]
    DIV        reduce using rule 53 (Term)
    DIV        [reduce using rule 61 (Var)]
    MOD        reduce using rule 53 (Term)
    MOD        [reduce using rule 61 (Var)]
    $default   reduce using rule 53 (Term)

    Expression           go to state 108
    Multiplicative-Expr  go to state 61
    Term                 go to state 62
    Var                  go to state 63


State 74

   47 Expression: Expression . COMMA Expression
   63 Var: IDENT L_PAREN Expression . R_PAREN

    COMMA    shift, and go to state 88
    R_PAREN  shift, and go to state 109


State 75

   60 Term: IDENT L_PAREN . Expression R_PAREN
   63 Var: IDENT L_PAREN . Expression R_PAREN

    IDENT    shift, and go to state 50
    NUMBER   shift, and go to state 51
    L_PAREN  shift, and go to state 69
    UMINUS   shift, and go to state 56

    COMMA     reduce using rule 43 (Expression)
    COMMA     [reduce using rule 48 (Multiplicative-Expr)]
    COMMA     [reduce using rule 53 (Term)]
    COMMA     [reduce using rule 61 (Var)]
    R_PAREN   reduce using rule 43 (Expression)
    R_PAREN   [reduce using rule 48 (Multiplicative-Expr)]
    R_PAREN   [reduce using rule 53 (Term)]
    R_PAREN   [reduce using rule 61 (Var)]
    SUB       reduce using rule 48 (Multiplicative-Expr)
    SUB       [reduce using rule 53 (Term)]
    SUB       [reduce using rule 61 (Var)]
    ADD       reduce using rule 48 (Multiplicative-Expr)
    ADD       [reduce using rule 53 (Term)]
    ADD       [reduce using rule 61 (Var)]
    MULT      reduce using rule 53 (Term)
    MULT      [reduce using rule 61 (Var)]
    DIV       reduce using rule 53 (Term)
    DIV       [reduce using rule 61 (Var)]
    MOD       reduce using rule 53 (Term)
    MOD       [reduce using rule 61 (Var)]
    $default  reduce using rule 53 (Term)

    Expression           go to state 110
    Multiplicative-Expr  go to state 61
    Term                 go to state 62
    Var                  go to state 63


State 76

   32 Relation-Expr: L_PAREN Bool-Expr . R_PAREN

    R_PAREN  shift, and go to state 111


State 77

   29 Relation-Expr: Expression . Comp Expression
   47 Expression: Expression . COMMA Expression
   56 Term: L_PAREN Expression . R_PAREN

    COMMA    shift, and go to state 88
    R_PAREN  shift, and go to state 112
    EQ       shift, and go to state 89
    NEQ      shift, and go to state 90
    LT       shift, and go to state 91
    GT       shift, and go to state 92
    LTE      shift, and go to state 93
    GTE      shift, and go to state 94

    Comp  go to state 95


State 78

   34 Relation-Expr: NOT TRUE .

    $default  reduce using rule 34 (Relation-Expr)


State 79

   35 Relation-Expr: NOT FALSE .

    $default  reduce using rule 35 (Relation-Expr)


State 80

   36 Relation-Expr: NOT L_PAREN . Bool-Expr R_PAREN
   56 Term: L_PAREN . Expression R_PAREN

    IDENT    shift, and go to state 50
    NUMBER   shift, and go to state 51
    TRUE     shift, and go to state 52
    FALSE    shift, and go to state 53
    L_PAREN  shift, and go to state 54
    NOT      shift, and go to state 55
    UMINUS   shift, and go to state 56

    COMMA     reduce using rule 43 (Expression)
    COMMA     [reduce using rule 48 (Multiplicative-Expr)]
    COMMA     [reduce using rule 53 (Term)]
    COMMA     [reduce using rule 61 (Var)]
    R_PAREN   reduce using rule 23 (Bool-Expr)
    R_PAREN   [reduce using rule 26 (Relation-And-Expr)]
    R_PAREN   [reduce using rule 43 (Expression)]
    R_PAREN   [reduce using rule 48 (Multiplicative-Expr)]
    R_PAREN   [reduce using rule 53 (Term)]
    R_PAREN   [reduce using rule 61 (Var)]
    OR        reduce using rule 26 (Relation-And-Expr)
    SUB       reduce using rule 48 (Multiplicative-Expr)
    SUB       [reduce using rule 53 (Term)]
    SUB       [reduce using rule 61 (Var)]
    ADD       reduce using rule 48 (Multiplicative-Expr)
    ADD       [reduce using rule 53 (Term)]
    ADD       [reduce using rule 61 (Var)]
    MULT      reduce using rule 53 (Term)
    MULT      [reduce using rule 61 (Var)]
    DIV       reduce using rule 53 (Term)
    DIV       [reduce using rule 61 (Var)]
    MOD       reduce using rule 53 (Term)
    MOD       [reduce using rule 61 (Var)]
    EQ        reduce using rule 43 (Expression)
    EQ        [reduce using rule 48 (Multiplicative-Expr)]
    EQ        [reduce using rule 53 (Term)]
    EQ        [reduce using rule 61 (Var)]
    NEQ       reduce using rule 43 (Expression)
    NEQ       [reduce using rule 48 (Multiplicative-Expr)]
    NEQ       [reduce using rule 53 (Term)]
    NEQ       [reduce using rule 61 (Var)]
    LT        reduce using rule 43 (Expression)
    LT        [reduce using rule 48 (Multiplicative-Expr)]
    LT        [reduce using rule 53 (Term)]
    LT        [reduce using rule 61 (Var)]
    GT        reduce using rule 43 (Expression)
    GT        [reduce using rule 48 (Multiplicative-Expr)]
    GT        [reduce using rule 53 (Term)]
    GT        [reduce using rule 61 (Var)]
    LTE       reduce using rule 43 (Expression)
    LTE       [reduce using rule 48 (Multiplicative-Expr)]
    LTE       [reduce using rule 53 (Term)]
    LTE       [reduce using rule 61 (Var)]
    GTE       reduce using rule 43 (Expression)
    GTE       [reduce using rule 48 (Multiplicative-Expr)]
    GTE       [reduce using rule 53 (Term)]
    GTE       [reduce using rule 61 (Var)]
    $default  reduce using rule 43 (Expression)

    Bool-Expr            go to state 113
    Relation-And-Expr    go to state 58
    Relation-Expr        go to state 59
    Expression           go to state 77
    Multiplicative-Expr  go to state 61
    Term                 go to state 62
    Var                  go to state 63


State 81

   33 Relation-Expr: NOT Expression . Comp Expression
   47 Expression: Expression . COMMA Expression

    COMMA  shift, and go to state 88
    EQ     shift, and go to state 89
    NEQ    shift, and go to state 90
    LT     shift, and go to state 91
    GT     shift, and go to state 92
    LTE    shift, and go to state 93
    GTE    shift, and go to state 94

    Comp  go to state 114


State 82

   58 Term: UMINUS NUMBER .

    $default  reduce using rule 58 (Term)


State 83

   59 Term: UMINUS L_PAREN . Expression R_PAREN

    IDENT    shift, and go to state 50
    NUMBER   shift, and go to state 51
    L_PAREN  shift, and go to state 69
    UMINUS   shift, and go to state 56

    COMMA     reduce using rule 43 (Expression)
    COMMA     [reduce using rule 48 (Multiplicative-Expr)]
    COMMA     [reduce using rule 53 (Term)]
    COMMA     [reduce using rule 61 (Var)]
    R_PAREN   reduce using rule 43 (Expression)
    R_PAREN   [reduce using rule 48 (Multiplicative-Expr)]
    R_PAREN   [reduce using rule 53 (Term)]
    R_PAREN   [reduce using rule 61 (Var)]
    SUB       reduce using rule 48 (Multiplicative-Expr)
    SUB       [reduce using rule 53 (Term)]
    SUB       [reduce using rule 61 (Var)]
    ADD       reduce using rule 48 (Multiplicative-Expr)
    ADD       [reduce using rule 53 (Term)]
    ADD       [reduce using rule 61 (Var)]
    MULT      reduce using rule 53 (Term)
    MULT      [reduce using rule 61 (Var)]
    DIV       reduce using rule 53 (Term)
    DIV       [reduce using rule 61 (Var)]
    MOD       reduce using rule 53 (Term)
    MOD       [reduce using rule 61 (Var)]
    $default  reduce using rule 53 (Term)

    Expression           go to state 115
    Multiplicative-Expr  go to state 61
    Term                 go to state 62
    Var                  go to state 63


State 84

   57 Term: UMINUS Var .
   64 Var: Var . COMMA Var

    COMMA  shift, and go to state 72

    COMMA     [reduce using rule 57 (Term)]
    $default  reduce using rule 57 (Term)


State 85

   13 Statement: IF Bool-Expr THEN . Statement SEMICOLON ENDIF
   14          | IF Bool-Expr THEN . Statement SEMICOLON ELSE Statement SEMICOLON ENDIF

    IDENT     shift, and go to state 37
    IF        shift, and go to state 38
    WHILE     shift, and go to state 39
    DO        shift, and go to state 40
    FOR       shift, and go to state 41
    CONTINUE  shift, and go to state 42
    READ      shift, and go to state 43
    WRITE     shift, and go to state 44
    RETURN    shift, and go to state 45

    $default  reduce using rule 61 (Var)

    Statement  go to state 116
    Var        go to state 47


State 86

   25 Bool-Expr: Relation-And-Expr OR . Relation-And-Expr

    IDENT    shift, and go to state 50
    NUMBER   shift, and go to state 51
    TRUE     shift, and go to state 52
    FALSE    shift, and go to state 53
    L_PAREN  shift, and go to state 54
    NOT      shift, and go to state 55
    UMINUS   shift, and go to state 56

    THEN       reduce using rule 26 (Relation-And-Expr)
    BEGINLOOP  reduce using rule 26 (Relation-And-Expr)
    SEMICOLON  reduce using rule 26 (Relation-And-Expr)
    COMMA      reduce using rule 43 (Expression)
    COMMA      [reduce using rule 48 (Multiplicative-Expr)]
    COMMA      [reduce using rule 53 (Term)]
    COMMA      [reduce using rule 61 (Var)]
    R_PAREN    reduce using rule 26 (Relation-And-Expr)
    SUB        reduce using rule 48 (Multiplicative-Expr)
    SUB        [reduce using rule 53 (Term)]
    SUB        [reduce using rule 61 (Var)]
    ADD        reduce using rule 48 (Multiplicative-Expr)
    ADD        [reduce using rule 53 (Term)]
    ADD        [reduce using rule 61 (Var)]
    MULT       reduce using rule 53 (Term)
    MULT       [reduce using rule 61 (Var)]
    DIV        reduce using rule 53 (Term)
    DIV        [reduce using rule 61 (Var)]
    MOD        reduce using rule 53 (Term)
    MOD        [reduce using rule 61 (Var)]
    EQ         reduce using rule 43 (Expression)
    EQ         [reduce using rule 48 (Multiplicative-Expr)]
    EQ         [reduce using rule 53 (Term)]
    EQ         [reduce using rule 61 (Var)]
    NEQ        reduce using rule 43 (Expression)
    NEQ        [reduce using rule 48 (Multiplicative-Expr)]
    NEQ        [reduce using rule 53 (Term)]
    NEQ        [reduce using rule 61 (Var)]
    LT         reduce using rule 43 (Expression)
    LT         [reduce using rule 48 (Multiplicative-Expr)]
    LT         [reduce using rule 53 (Term)]
    LT         [reduce using rule 61 (Var)]
    GT         reduce using rule 43 (Expression)
    GT         [reduce using rule 48 (Multiplicative-Expr)]
    GT         [reduce using rule 53 (Term)]
    GT         [reduce using rule 61 (Var)]
    LTE        reduce using rule 43 (Expression)
    LTE        [reduce using rule 48 (Multiplicative-Expr)]
    LTE        [reduce using rule 53 (Term)]
    LTE        [reduce using rule 61 (Var)]
    GTE        reduce using rule 43 (Expression)
    GTE        [reduce using rule 48 (Multiplicative-Expr)]
    GTE        [reduce using rule 53 (Term)]
    GTE        [reduce using rule 61 (Var)]
    $default   reduce using rule 43 (Expression)

    Relation-And-Expr    go to state 117
    Relation-Expr        go to state 59
    Expression           go to state 60
    Multiplicative-Expr  go to state 61
    Term                 go to state 62
    Var                  go to state 63


State 87

   28 Relation-And-Expr: Relation-Expr AND . Relation-Expr

    IDENT    shift, and go to state 50
    NUMBER   shift, and go to state 51
    TRUE     shift, and go to state 52
    FALSE    shift, and go to state 53
    L_PAREN  shift, and go to state 54
    NOT      shift, and go to state 55
    UMINUS   shift, and go to state 56

    COMMA     reduce using rule 43 (Expression)
    COMMA     [reduce using rule 48 (Multiplicative-Expr)]
    COMMA     [reduce using rule 53 (Term)]
    COMMA     [reduce using rule 61 (Var)]
    SUB       reduce using rule 48 (Multiplicative-Expr)
    SUB       [reduce using rule 53 (Term)]
    SUB       [reduce using rule 61 (Var)]
    ADD       reduce using rule 48 (Multiplicative-Expr)
    ADD       [reduce using rule 53 (Term)]
    ADD       [reduce using rule 61 (Var)]
    MULT      reduce using rule 53 (Term)
    MULT      [reduce using rule 61 (Var)]
    DIV       reduce using rule 53 (Term)
    DIV       [reduce using rule 61 (Var)]
    MOD       reduce using rule 53 (Term)
    MOD       [reduce using rule 61 (Var)]
    EQ        reduce using rule 43 (Expression)
    EQ        [reduce using rule 48 (Multiplicative-Expr)]
    EQ        [reduce using rule 53 (Term)]
    EQ        [reduce using rule 61 (Var)]
    NEQ       reduce using rule 43 (Expression)
    NEQ       [reduce using rule 48 (Multiplicative-Expr)]
    NEQ       [reduce using rule 53 (Term)]
    NEQ       [reduce using rule 61 (Var)]
    LT        reduce using rule 43 (Expression)
    LT        [reduce using rule 48 (Multiplicative-Expr)]
    LT        [reduce using rule 53 (Term)]
    LT        [reduce using rule 61 (Var)]
    GT        reduce using rule 43 (Expression)
    GT        [reduce using rule 48 (Multiplicative-Expr)]
    GT        [reduce using rule 53 (Term)]
    GT        [reduce using rule 61 (Var)]
    LTE       reduce using rule 43 (Expression)
    LTE       [reduce using rule 48 (Multiplicative-Expr)]
    LTE       [reduce using rule 53 (Term)]
    LTE       [reduce using rule 61 (Var)]
    GTE       reduce using rule 43 (Expression)
    GTE       [reduce using rule 48 (Multiplicative-Expr)]
    GTE       [reduce using rule 53 (Term)]
    GTE       [reduce using rule 61 (Var)]
    $default  reduce using rule 43 (Expression)

    Relation-Expr        go to state 118
    Expression           go to state 60
    Multiplicative-Expr  go to state 61
    Term                 go to state 62
    Var                  go to state 63


State 88

   47 Expression: Expression COMMA . Expression

    IDENT    shift, and go to state 50
    NUMBER   shift, and go to state 51
    L_PAREN  shift, and go to state 69
    UMINUS   shift, and go to state 56

    THEN       reduce using rule 43 (Expression)
    THEN       [reduce using rule 48 (Multiplicative-Expr)]
    THEN       [reduce using rule 53 (Term)]
    THEN       [reduce using rule 61 (Var)]
    BEGINLOOP  reduce using rule 43 (Expression)
    BEGINLOOP  [reduce using rule 48 (Multiplicative-Expr)]
    BEGINLOOP  [reduce using rule 53 (Term)]
    BEGINLOOP  [reduce using rule 61 (Var)]
    SEMICOLON  reduce using rule 43 (Expression)
    SEMICOLON  [reduce using rule 48 (Multiplicative-Expr)]
    SEMICOLON  [reduce using rule 53 (Term)]
    SEMICOLON  [reduce using rule 61 (Var)]
    COMMA      reduce using rule 43 (Expression)
    COMMA      [reduce using rule 48 (Multiplicative-Expr)]
    COMMA      [reduce using rule 53 (Term)]
    COMMA      [reduce using rule 61 (Var)]
    R_PAREN    reduce using rule 43 (Expression)
    R_PAREN    [reduce using rule 48 (Multiplicative-Expr)]
    R_PAREN    [reduce using rule 53 (Term)]
    R_PAREN    [reduce using rule 61 (Var)]
    AND        reduce using rule 43 (Expression)
    AND        [reduce using rule 48 (Multiplicative-Expr)]
    AND        [reduce using rule 53 (Term)]
    AND        [reduce using rule 61 (Var)]
    OR         reduce using rule 43 (Expression)
    OR         [reduce using rule 48 (Multiplicative-Expr)]
    OR         [reduce using rule 53 (Term)]
    OR         [reduce using rule 61 (Var)]
    SUB        reduce using rule 48 (Multiplicative-Expr)
    SUB        [reduce using rule 53 (Term)]
    SUB        [reduce using rule 61 (Var)]
    ADD        reduce using rule 48 (Multiplicative-Expr)
    ADD        [reduce using rule 53 (Term)]
    ADD        [reduce using rule 61 (Var)]
    MULT       reduce using rule 53 (Term)
    MULT       [reduce using rule 61 (Var)]
    DIV        reduce using rule 53 (Term)
    DIV        [reduce using rule 61 (Var)]
    MOD        reduce using rule 53 (Term)
    MOD        [reduce using rule 61 (Var)]
    EQ         reduce using rule 43 (Expression)
    EQ         [reduce using rule 48 (Multiplicative-Expr)]
    EQ         [reduce using rule 53 (Term)]
    EQ         [reduce using rule 61 (Var)]
    NEQ        reduce using rule 43 (Expression)
    NEQ        [reduce using rule 48 (Multiplicative-Expr)]
    NEQ        [reduce using rule 53 (Term)]
    NEQ        [reduce using rule 61 (Var)]
    LT         reduce using rule 43 (Expression)
    LT         [reduce using rule 48 (Multiplicative-Expr)]
    LT         [reduce using rule 53 (Term)]
    LT         [reduce using rule 61 (Var)]
    GT         reduce using rule 43 (Expression)
    GT         [reduce using rule 48 (Multiplicative-Expr)]
    GT         [reduce using rule 53 (Term)]
    GT         [reduce using rule 61 (Var)]
    LTE        reduce using rule 43 (Expression)
    LTE        [reduce using rule 48 (Multiplicative-Expr)]
    LTE        [reduce using rule 53 (Term)]
    LTE        [reduce using rule 61 (Var)]
    GTE        reduce using rule 43 (Expression)
    GTE        [reduce using rule 48 (Multiplicative-Expr)]
    GTE        [reduce using rule 53 (Term)]
    GTE        [reduce using rule 61 (Var)]
    $default   reduce using rule 43 (Expression)

    Expression           go to state 119
    Multiplicative-Expr  go to state 61
    Term                 go to state 62
    Var                  go to state 63


State 89

   37 Comp: EQ .

    $default  reduce using rule 37 (Comp)


State 90

   38 Comp: NEQ .

    $default  reduce using rule 38 (Comp)


State 91

   39 Comp: LT .

    $default  reduce using rule 39 (Comp)


State 92

   40 Comp: GT .

    $default  reduce using rule 40 (Comp)


State 93

   41 Comp: LTE .

    $default  reduce using rule 41 (Comp)


State 94

   42 Comp: GTE .

    $default  reduce using rule 42 (Comp)


State 95

   29 Relation-Expr: Expression Comp . Expression

    IDENT    shift, and go to state 50
    NUMBER   shift, and go to state 51
    L_PAREN  shift, and go to state 69
    UMINUS   shift, and go to state 56

    THEN       reduce using rule 43 (Expression)
    THEN       [reduce using rule 48 (Multiplicative-Expr)]
    THEN       [reduce using rule 53 (Term)]
    THEN       [reduce using rule 61 (Var)]
    BEGINLOOP  reduce using rule 43 (Expression)
    BEGINLOOP  [reduce using rule 48 (Multiplicative-Expr)]
    BEGINLOOP  [reduce using rule 53 (Term)]
    BEGINLOOP  [reduce using rule 61 (Var)]
    SEMICOLON  reduce using rule 43 (Expression)
    SEMICOLON  [reduce using rule 48 (Multiplicative-Expr)]
    SEMICOLON  [reduce using rule 53 (Term)]
    SEMICOLON  [reduce using rule 61 (Var)]
    COMMA      reduce using rule 43 (Expression)
    COMMA      [reduce using rule 48 (Multiplicative-Expr)]
    COMMA      [reduce using rule 53 (Term)]
    COMMA      [reduce using rule 61 (Var)]
    R_PAREN    reduce using rule 43 (Expression)
    R_PAREN    [reduce using rule 48 (Multiplicative-Expr)]
    R_PAREN    [reduce using rule 53 (Term)]
    R_PAREN    [reduce using rule 61 (Var)]
    AND        reduce using rule 43 (Expression)
    AND        [reduce using rule 48 (Multiplicative-Expr)]
    AND        [reduce using rule 53 (Term)]
    AND        [reduce using rule 61 (Var)]
    OR         reduce using rule 43 (Expression)
    OR         [reduce using rule 48 (Multiplicative-Expr)]
    OR         [reduce using rule 53 (Term)]
    OR         [reduce using rule 61 (Var)]
    SUB        reduce using rule 48 (Multiplicative-Expr)
    SUB        [reduce using rule 53 (Term)]
    SUB        [reduce using rule 61 (Var)]
    ADD        reduce using rule 48 (Multiplicative-Expr)
    ADD        [reduce using rule 53 (Term)]
    ADD        [reduce using rule 61 (Var)]
    MULT       reduce using rule 53 (Term)
    MULT       [reduce using rule 61 (Var)]
    DIV        reduce using rule 53 (Term)
    DIV        [reduce using rule 61 (Var)]
    MOD        reduce using rule 53 (Term)
    MOD        [reduce using rule 61 (Var)]
    $default   reduce using rule 43 (Expression)

    Expression           go to state 120
    Multiplicative-Expr  go to state 61
    Term                 go to state 62
    Var                  go to state 63


State 96

   45 Expression: Multiplicative-Expr SUB . Multiplicative-Expr

    IDENT    shift, and go to state 50
    NUMBER   shift, and go to state 51
    L_PAREN  shift, and go to state 69
    UMINUS   shift, and go to state 56

    THEN       reduce using rule 48 (Multiplicative-Expr)
    THEN       [reduce using rule 53 (Term)]
    THEN       [reduce using rule 61 (Var)]
    BEGINLOOP  reduce using rule 48 (Multiplicative-Expr)
    BEGINLOOP  [reduce using rule 53 (Term)]
    BEGINLOOP  [reduce using rule 61 (Var)]
    SEMICOLON  reduce using rule 48 (Multiplicative-Expr)
    SEMICOLON  [reduce using rule 53 (Term)]
    SEMICOLON  [reduce using rule 61 (Var)]
    COMMA      reduce using rule 48 (Multiplicative-Expr)
    COMMA      [reduce using rule 53 (Term)]
    COMMA      [reduce using rule 61 (Var)]
    R_PAREN    reduce using rule 48 (Multiplicative-Expr)
    R_PAREN    [reduce using rule 53 (Term)]
    R_PAREN    [reduce using rule 61 (Var)]
    AND        reduce using rule 48 (Multiplicative-Expr)
    AND        [reduce using rule 53 (Term)]
    AND        [reduce using rule 61 (Var)]
    OR         reduce using rule 48 (Multiplicative-Expr)
    OR         [reduce using rule 53 (Term)]
    OR         [reduce using rule 61 (Var)]
    MULT       reduce using rule 53 (Term)
    MULT       [reduce using rule 61 (Var)]
    DIV        reduce using rule 53 (Term)
    DIV        [reduce using rule 61 (Var)]
    MOD        reduce using rule 53 (Term)
    MOD        [reduce using rule 61 (Var)]
    EQ         reduce using rule 48 (Multiplicative-Expr)
    EQ         [reduce using rule 53 (Term)]
    EQ         [reduce using rule 61 (Var)]
    NEQ        reduce using rule 48 (Multiplicative-Expr)
    NEQ        [reduce using rule 53 (Term)]
    NEQ        [reduce using rule 61 (Var)]
    LT         reduce using rule 48 (Multiplicative-Expr)
    LT         [reduce using rule 53 (Term)]
    LT         [reduce using rule 61 (Var)]
    GT         reduce using rule 48 (Multiplicative-Expr)
    GT         [reduce using rule 53 (Term)]
    GT         [reduce using rule 61 (Var)]
    LTE        reduce using rule 48 (Multiplicative-Expr)
    LTE        [reduce using rule 53 (Term)]
    LTE        [reduce using rule 61 (Var)]
    GTE        reduce using rule 48 (Multiplicative-Expr)
    GTE        [reduce using rule 53 (Term)]
    GTE        [reduce using rule 61 (Var)]
    $default   reduce using rule 48 (Multiplicative-Expr)

    Multiplicative-Expr  go to state 121
    Term                 go to state 62
    Var                  go to state 63


State 97

   46 Expression: Multiplicative-Expr ADD . Multiplicative-Expr

    IDENT    shift, and go to state 50
    NUMBER   shift, and go to state 51
    L_PAREN  shift, and go to state 69
    UMINUS   shift, and go to state 56

    THEN       reduce using rule 48 (Multiplicative-Expr)
    THEN       [reduce using rule 53 (Term)]
    THEN       [reduce using rule 61 (Var)]
    BEGINLOOP  reduce using rule 48 (Multiplicative-Expr)
    BEGINLOOP  [reduce using rule 53 (Term)]
    BEGINLOOP  [reduce using rule 61 (Var)]
    SEMICOLON  reduce using rule 48 (Multiplicative-Expr)
    SEMICOLON  [reduce using rule 53 (Term)]
    SEMICOLON  [reduce using rule 61 (Var)]
    COMMA      reduce using rule 48 (Multiplicative-Expr)
    COMMA      [reduce using rule 53 (Term)]
    COMMA      [reduce using rule 61 (Var)]
    R_PAREN    reduce using rule 48 (Multiplicative-Expr)
    R_PAREN    [reduce using rule 53 (Term)]
    R_PAREN    [reduce using rule 61 (Var)]
    AND        reduce using rule 48 (Multiplicative-Expr)
    AND        [reduce using rule 53 (Term)]
    AND        [reduce using rule 61 (Var)]
    OR         reduce using rule 48 (Multiplicative-Expr)
    OR         [reduce using rule 53 (Term)]
    OR         [reduce using rule 61 (Var)]
    MULT       reduce using rule 53 (Term)
    MULT       [reduce using rule 61 (Var)]
    DIV        reduce using rule 53 (Term)
    DIV        [reduce using rule 61 (Var)]
    MOD        reduce using rule 53 (Term)
    MOD        [reduce using rule 61 (Var)]
    EQ         reduce using rule 48 (Multiplicative-Expr)
    EQ         [reduce using rule 53 (Term)]
    EQ         [reduce using rule 61 (Var)]
    NEQ        reduce using rule 48 (Multiplicative-Expr)
    NEQ        [reduce using rule 53 (Term)]
    NEQ        [reduce using rule 61 (Var)]
    LT         reduce using rule 48 (Multiplicative-Expr)
    LT         [reduce using rule 53 (Term)]
    LT         [reduce using rule 61 (Var)]
    GT         reduce using rule 48 (Multiplicative-Expr)
    GT         [reduce using rule 53 (Term)]
    GT         [reduce using rule 61 (Var)]
    LTE        reduce using rule 48 (Multiplicative-Expr)
    LTE        [reduce using rule 53 (Term)]
    LTE        [reduce using rule 61 (Var)]
    GTE        reduce using rule 48 (Multiplicative-Expr)
    GTE        [reduce using rule 53 (Term)]
    GTE        [reduce using rule 61 (Var)]
    $default   reduce using rule 48 (Multiplicative-Expr)

    Multiplicative-Expr  go to state 122
    Term                 go to state 62
    Var                  go to state 63


State 98

   52 Multiplicative-Expr: Term MULT . Term

    IDENT    shift, and go to state 50
    NUMBER   shift, and go to state 51
    L_PAREN  shift, and go to state 69
    UMINUS   shift, and go to state 56

    THEN       reduce using rule 53 (Term)
    THEN       [reduce using rule 61 (Var)]
    BEGINLOOP  reduce using rule 53 (Term)
    BEGINLOOP  [reduce using rule 61 (Var)]
    SEMICOLON  reduce using rule 53 (Term)
    SEMICOLON  [reduce using rule 61 (Var)]
    COMMA      reduce using rule 53 (Term)
    COMMA      [reduce using rule 61 (Var)]
    R_PAREN    reduce using rule 53 (Term)
    R_PAREN    [reduce using rule 61 (Var)]
    AND        reduce using rule 53 (Term)
    AND        [reduce using rule 61 (Var)]
    OR         reduce using rule 53 (Term)
    OR         [reduce using rule 61 (Var)]
    SUB        reduce using rule 53 (Term)
    SUB        [reduce using rule 61 (Var)]
    ADD        reduce using rule 53 (Term)
    ADD        [reduce using rule 61 (Var)]
    EQ         reduce using rule 53 (Term)
    EQ         [reduce using rule 61 (Var)]
    NEQ        reduce using rule 53 (Term)
    NEQ        [reduce using rule 61 (Var)]
    LT         reduce using rule 53 (Term)
    LT         [reduce using rule 61 (Var)]
    GT         reduce using rule 53 (Term)
    GT         [reduce using rule 61 (Var)]
    LTE        reduce using rule 53 (Term)
    LTE        [reduce using rule 61 (Var)]
    GTE        reduce using rule 53 (Term)
    GTE        [reduce using rule 61 (Var)]
    $default   reduce using rule 53 (Term)

    Term  go to state 123
    Var   go to state 63


State 99

   51 Multiplicative-Expr: Term DIV . Term

    IDENT    shift, and go to state 50
    NUMBER   shift, and go to state 51
    L_PAREN  shift, and go to state 69
    UMINUS   shift, and go to state 56

    THEN       reduce using rule 53 (Term)
    THEN       [reduce using rule 61 (Var)]
    BEGINLOOP  reduce using rule 53 (Term)
    BEGINLOOP  [reduce using rule 61 (Var)]
    SEMICOLON  reduce using rule 53 (Term)
    SEMICOLON  [reduce using rule 61 (Var)]
    COMMA      reduce using rule 53 (Term)
    COMMA      [reduce using rule 61 (Var)]
    R_PAREN    reduce using rule 53 (Term)
    R_PAREN    [reduce using rule 61 (Var)]
    AND        reduce using rule 53 (Term)
    AND        [reduce using rule 61 (Var)]
    OR         reduce using rule 53 (Term)
    OR         [reduce using rule 61 (Var)]
    SUB        reduce using rule 53 (Term)
    SUB        [reduce using rule 61 (Var)]
    ADD        reduce using rule 53 (Term)
    ADD        [reduce using rule 61 (Var)]
    EQ         reduce using rule 53 (Term)
    EQ         [reduce using rule 61 (Var)]
    NEQ        reduce using rule 53 (Term)
    NEQ        [reduce using rule 61 (Var)]
    LT         reduce using rule 53 (Term)
    LT         [reduce using rule 61 (Var)]
    GT         reduce using rule 53 (Term)
    GT         [reduce using rule 61 (Var)]
    LTE        reduce using rule 53 (Term)
    LTE        [reduce using rule 61 (Var)]
    GTE        reduce using rule 53 (Term)
    GTE        [reduce using rule 61 (Var)]
    $default   reduce using rule 53 (Term)

    Term  go to state 124
    Var   go to state 63


State 100

   50 Multiplicative-Expr: Term MOD . Term

    IDENT    shift, and go to state 50
    NUMBER   shift, and go to state 51
    L_PAREN  shift, and go to state 69
    UMINUS   shift, and go to state 56

    THEN       reduce using rule 53 (Term)
    THEN       [reduce using rule 61 (Var)]
    BEGINLOOP  reduce using rule 53 (Term)
    BEGINLOOP  [reduce using rule 61 (Var)]
    SEMICOLON  reduce using rule 53 (Term)
    SEMICOLON  [reduce using rule 61 (Var)]
    COMMA      reduce using rule 53 (Term)
    COMMA      [reduce using rule 61 (Var)]
    R_PAREN    reduce using rule 53 (Term)
    R_PAREN    [reduce using rule 61 (Var)]
    AND        reduce using rule 53 (Term)
    AND        [reduce using rule 61 (Var)]
    OR         reduce using rule 53 (Term)
    OR         [reduce using rule 61 (Var)]
    SUB        reduce using rule 53 (Term)
    SUB        [reduce using rule 61 (Var)]
    ADD        reduce using rule 53 (Term)
    ADD        [reduce using rule 61 (Var)]
    EQ         reduce using rule 53 (Term)
    EQ         [reduce using rule 61 (Var)]
    NEQ        reduce using rule 53 (Term)
    NEQ        [reduce using rule 61 (Var)]
    LT         reduce using rule 53 (Term)
    LT         [reduce using rule 61 (Var)]
    GT         reduce using rule 53 (Term)
    GT         [reduce using rule 61 (Var)]
    LTE        reduce using rule 53 (Term)
    LTE        [reduce using rule 61 (Var)]
    GTE        reduce using rule 53 (Term)
    GTE        [reduce using rule 61 (Var)]
    $default   reduce using rule 53 (Term)

    Term  go to state 125
    Var   go to state 63


State 101

   15 Statement: WHILE Bool-Expr BEGINLOOP . Statement SEMICOLON ENDLOOP

    IDENT     shift, and go to state 37
    IF        shift, and go to state 38
    WHILE     shift, and go to state 39
    DO        shift, and go to state 40
    FOR       shift, and go to state 41
    CONTINUE  shift, and go to state 42
    READ      shift, and go to state 43
    WRITE     shift, and go to state 44
    RETURN    shift, and go to state 45

    $default  reduce using rule 61 (Var)

    Statement  go to state 126
    Var        go to state 47


State 102

   16 Statement: DO BEGINLOOP Statement . SEMICOLON ENDLOOP WHILE Bool-Expr
   22          | Statement . SEMICOLON Statement

    SEMICOLON  shift, and go to state 127


State 103

   17 Statement: FOR Var ASSIGN . NUMBER SEMICOLON Bool-Expr SEMICOLON Var ASSIGN Expression BEGINLOOP Statement SEMICOLON ENDLOOP

    NUMBER  shift, and go to state 128


State 104

   47 Expression: Expression . COMMA Expression
   56 Term: L_PAREN Expression . R_PAREN

    COMMA    shift, and go to state 88
    R_PAREN  shift, and go to state 112


State 105

    5 Function: FUNCTION IDENT SEMICOLON BEGIN_PARAMS Declaration SEMICOLON END_PARAMS BEGIN_LOCALS Declaration SEMICOLON END_LOCALS BEGIN_BODY Statement SEMICOLON END_BODY .

    $default  reduce using rule 5 (Function)


State 106

   22 Statement: Statement . SEMICOLON Statement
   22          | Statement SEMICOLON Statement .

    SEMICOLON  shift, and go to state 129

    SEMICOLON  [reduce using rule 22 (Statement)]


State 107

   64 Var: Var . COMMA Var
   64    | Var COMMA Var .

    COMMA  shift, and go to state 72

    COMMA     [reduce using rule 64 (Var)]
    $default  reduce using rule 64 (Var)


State 108

   12 Statement: Var ASSIGN Expression .
   47 Expression: Expression . COMMA Expression

    COMMA  shift, and go to state 88

    $default  reduce using rule 12 (Statement)


State 109

   63 Var: IDENT L_PAREN Expression R_PAREN .

    $default  reduce using rule 63 (Var)


State 110

   47 Expression: Expression . COMMA Expression
   60 Term: IDENT L_PAREN Expression . R_PAREN
   63 Var: IDENT L_PAREN Expression . R_PAREN

    COMMA    shift, and go to state 88
    R_PAREN  shift, and go to state 130


State 111

   32 Relation-Expr: L_PAREN Bool-Expr R_PAREN .

    $default  reduce using rule 32 (Relation-Expr)


State 112

   56 Term: L_PAREN Expression R_PAREN .

    $default  reduce using rule 56 (Term)


State 113

   36 Relation-Expr: NOT L_PAREN Bool-Expr . R_PAREN

    R_PAREN  shift, and go to state 131


State 114

   33 Relation-Expr: NOT Expression Comp . Expression

    IDENT    shift, and go to state 50
    NUMBER   shift, and go to state 51
    L_PAREN  shift, and go to state 69
    UMINUS   shift, and go to state 56

    THEN       reduce using rule 43 (Expression)
    THEN       [reduce using rule 48 (Multiplicative-Expr)]
    THEN       [reduce using rule 53 (Term)]
    THEN       [reduce using rule 61 (Var)]
    BEGINLOOP  reduce using rule 43 (Expression)
    BEGINLOOP  [reduce using rule 48 (Multiplicative-Expr)]
    BEGINLOOP  [reduce using rule 53 (Term)]
    BEGINLOOP  [reduce using rule 61 (Var)]
    SEMICOLON  reduce using rule 43 (Expression)
    SEMICOLON  [reduce using rule 48 (Multiplicative-Expr)]
    SEMICOLON  [reduce using rule 53 (Term)]
    SEMICOLON  [reduce using rule 61 (Var)]
    COMMA      reduce using rule 43 (Expression)
    COMMA      [reduce using rule 48 (Multiplicative-Expr)]
    COMMA      [reduce using rule 53 (Term)]
    COMMA      [reduce using rule 61 (Var)]
    R_PAREN    reduce using rule 43 (Expression)
    R_PAREN    [reduce using rule 48 (Multiplicative-Expr)]
    R_PAREN    [reduce using rule 53 (Term)]
    R_PAREN    [reduce using rule 61 (Var)]
    AND        reduce using rule 43 (Expression)
    AND        [reduce using rule 48 (Multiplicative-Expr)]
    AND        [reduce using rule 53 (Term)]
    AND        [reduce using rule 61 (Var)]
    OR         reduce using rule 43 (Expression)
    OR         [reduce using rule 48 (Multiplicative-Expr)]
    OR         [reduce using rule 53 (Term)]
    OR         [reduce using rule 61 (Var)]
    SUB        reduce using rule 48 (Multiplicative-Expr)
    SUB        [reduce using rule 53 (Term)]
    SUB        [reduce using rule 61 (Var)]
    ADD        reduce using rule 48 (Multiplicative-Expr)
    ADD        [reduce using rule 53 (Term)]
    ADD        [reduce using rule 61 (Var)]
    MULT       reduce using rule 53 (Term)
    MULT       [reduce using rule 61 (Var)]
    DIV        reduce using rule 53 (Term)
    DIV        [reduce using rule 61 (Var)]
    MOD        reduce using rule 53 (Term)
    MOD        [reduce using rule 61 (Var)]
    $default   reduce using rule 43 (Expression)

    Expression           go to state 132
    Multiplicative-Expr  go to state 61
    Term                 go to state 62
    Var                  go to state 63


State 115

   47 Expression: Expression . COMMA Expression
   59 Term: UMINUS L_PAREN Expression . R_PAREN

    COMMA    shift, and go to state 88
    R_PAREN  shift, and go to state 133


State 116

   13 Statement: IF Bool-Expr THEN Statement . SEMICOLON ENDIF
   14          | IF Bool-Expr THEN Statement . SEMICOLON ELSE Statement SEMICOLON ENDIF
   22          | Statement . SEMICOLON Statement

    SEMICOLON  shift, and go to state 134


State 117

   25 Bool-Expr: Relation-And-Expr OR Relation-And-Expr .

    $default  reduce using rule 25 (Bool-Expr)


State 118

   28 Relation-And-Expr: Relation-Expr AND Relation-Expr .

    $default  reduce using rule 28 (Relation-And-Expr)


State 119

   47 Expression: Expression . COMMA Expression
   47           | Expression COMMA Expression .

    COMMA  shift, and go to state 88

    COMMA     [reduce using rule 47 (Expression)]
    $default  reduce using rule 47 (Expression)


State 120

   29 Relation-Expr: Expression Comp Expression .
   47 Expression: Expression . COMMA Expression

    COMMA  shift, and go to state 88

    $default  reduce using rule 29 (Relation-Expr)


State 121

   45 Expression: Multiplicative-Expr SUB Multiplicative-Expr .

    $default  reduce using rule 45 (Expression)


State 122

   46 Expression: Multiplicative-Expr ADD Multiplicative-Expr .

    $default  reduce using rule 46 (Expression)


State 123

   52 Multiplicative-Expr: Term MULT Term .

    $default  reduce using rule 52 (Multiplicative-Expr)


State 124

   51 Multiplicative-Expr: Term DIV Term .

    $default  reduce using rule 51 (Multiplicative-Expr)


State 125

   50 Multiplicative-Expr: Term MOD Term .

    $default  reduce using rule 50 (Multiplicative-Expr)


State 126

   15 Statement: WHILE Bool-Expr BEGINLOOP Statement . SEMICOLON ENDLOOP
   22          | Statement . SEMICOLON Statement

    SEMICOLON  shift, and go to state 135


State 127

   16 Statement: DO BEGINLOOP Statement SEMICOLON . ENDLOOP WHILE Bool-Expr
   22          | Statement SEMICOLON . Statement

    IDENT     shift, and go to state 37
    IF        shift, and go to state 38
    WHILE     shift, and go to state 39
    DO        shift, and go to state 40
    FOR       shift, and go to state 41
    ENDLOOP   shift, and go to state 136
    CONTINUE  shift, and go to state 42
    READ      shift, and go to state 43
    WRITE     shift, and go to state 44
    RETURN    shift, and go to state 45

    $default  reduce using rule 61 (Var)

    Statement  go to state 106
    Var        go to state 47


State 128

   17 Statement: FOR Var ASSIGN NUMBER . SEMICOLON Bool-Expr SEMICOLON Var ASSIGN Expression BEGINLOOP Statement SEMICOLON ENDLOOP

    SEMICOLON  shift, and go to state 137


State 129

   22 Statement: Statement SEMICOLON . Statement

    IDENT     shift, and go to state 37
    IF        shift, and go to state 38
    WHILE     shift, and go to state 39
    DO        shift, and go to state 40
    FOR       shift, and go to state 41
    CONTINUE  shift, and go to state 42
    READ      shift, and go to state 43
    WRITE     shift, and go to state 44
    RETURN    shift, and go to state 45

    $default  reduce using rule 61 (Var)

    Statement  go to state 106
    Var        go to state 47


State 130

   60 Term: IDENT L_PAREN Expression R_PAREN .
   63 Var: IDENT L_PAREN Expression R_PAREN .

    THEN       reduce using rule 60 (Term)
    THEN       [reduce using rule 63 (Var)]
    BEGINLOOP  reduce using rule 60 (Term)
    BEGINLOOP  [reduce using rule 63 (Var)]
    SEMICOLON  reduce using rule 60 (Term)
    SEMICOLON  [reduce using rule 63 (Var)]
    COMMA      reduce using rule 60 (Term)
    COMMA      [reduce using rule 63 (Var)]
    R_PAREN    reduce using rule 60 (Term)
    R_PAREN    [reduce using rule 63 (Var)]
    AND        reduce using rule 60 (Term)
    AND        [reduce using rule 63 (Var)]
    OR         reduce using rule 60 (Term)
    OR         [reduce using rule 63 (Var)]
    SUB        reduce using rule 60 (Term)
    SUB        [reduce using rule 63 (Var)]
    ADD        reduce using rule 60 (Term)
    ADD        [reduce using rule 63 (Var)]
    MULT       reduce using rule 60 (Term)
    MULT       [reduce using rule 63 (Var)]
    DIV        reduce using rule 60 (Term)
    DIV        [reduce using rule 63 (Var)]
    MOD        reduce using rule 60 (Term)
    MOD        [reduce using rule 63 (Var)]
    EQ         reduce using rule 60 (Term)
    EQ         [reduce using rule 63 (Var)]
    NEQ        reduce using rule 60 (Term)
    NEQ        [reduce using rule 63 (Var)]
    LT         reduce using rule 60 (Term)
    LT         [reduce using rule 63 (Var)]
    GT         reduce using rule 60 (Term)
    GT         [reduce using rule 63 (Var)]
    LTE        reduce using rule 60 (Term)
    LTE        [reduce using rule 63 (Var)]
    GTE        reduce using rule 60 (Term)
    GTE        [reduce using rule 63 (Var)]
    $default   reduce using rule 60 (Term)


State 131

   36 Relation-Expr: NOT L_PAREN Bool-Expr R_PAREN .

    $default  reduce using rule 36 (Relation-Expr)


State 132

   33 Relation-Expr: NOT Expression Comp Expression .
   47 Expression: Expression . COMMA Expression

    COMMA  shift, and go to state 88

    $default  reduce using rule 33 (Relation-Expr)


State 133

   59 Term: UMINUS L_PAREN Expression R_PAREN .

    $default  reduce using rule 59 (Term)


State 134

   13 Statement: IF Bool-Expr THEN Statement SEMICOLON . ENDIF
   14          | IF Bool-Expr THEN Statement SEMICOLON . ELSE Statement SEMICOLON ENDIF
   22          | Statement SEMICOLON . Statement

    IDENT     shift, and go to state 37
    IF        shift, and go to state 38
    ENDIF     shift, and go to state 138
    ELSE      shift, and go to state 139
    WHILE     shift, and go to state 39
    DO        shift, and go to state 40
    FOR       shift, and go to state 41
    CONTINUE  shift, and go to state 42
    READ      shift, and go to state 43
    WRITE     shift, and go to state 44
    RETURN    shift, and go to state 45

    $default  reduce using rule 61 (Var)

    Statement  go to state 106
    Var        go to state 47


State 135

   15 Statement: WHILE Bool-Expr BEGINLOOP Statement SEMICOLON . ENDLOOP
   22          | Statement SEMICOLON . Statement

    IDENT     shift, and go to state 37
    IF        shift, and go to state 38
    WHILE     shift, and go to state 39
    DO        shift, and go to state 40
    FOR       shift, and go to state 41
    ENDLOOP   shift, and go to state 140
    CONTINUE  shift, and go to state 42
    READ      shift, and go to state 43
    WRITE     shift, and go to state 44
    RETURN    shift, and go to state 45

    $default  reduce using rule 61 (Var)

    Statement  go to state 106
    Var        go to state 47


State 136

   16 Statement: DO BEGINLOOP Statement SEMICOLON ENDLOOP . WHILE Bool-Expr

    WHILE  shift, and go to state 141


State 137

   17 Statement: FOR Var ASSIGN NUMBER SEMICOLON . Bool-Expr SEMICOLON Var ASSIGN Expression BEGINLOOP Statement SEMICOLON ENDLOOP

    IDENT    shift, and go to state 50
    NUMBER   shift, and go to state 51
    TRUE     shift, and go to state 52
    FALSE    shift, and go to state 53
    L_PAREN  shift, and go to state 54
    NOT      shift, and go to state 55
    UMINUS   shift, and go to state 56

    SEMICOLON  reduce using rule 23 (Bool-Expr)
    SEMICOLON  [reduce using rule 26 (Relation-And-Expr)]
    COMMA      reduce using rule 43 (Expression)
    COMMA      [reduce using rule 48 (Multiplicative-Expr)]
    COMMA      [reduce using rule 53 (Term)]
    COMMA      [reduce using rule 61 (Var)]
    OR         reduce using rule 26 (Relation-And-Expr)
    SUB        reduce using rule 48 (Multiplicative-Expr)
    SUB        [reduce using rule 53 (Term)]
    SUB        [reduce using rule 61 (Var)]
    ADD        reduce using rule 48 (Multiplicative-Expr)
    ADD        [reduce using rule 53 (Term)]
    ADD        [reduce using rule 61 (Var)]
    MULT       reduce using rule 53 (Term)
    MULT       [reduce using rule 61 (Var)]
    DIV        reduce using rule 53 (Term)
    DIV        [reduce using rule 61 (Var)]
    MOD        reduce using rule 53 (Term)
    MOD        [reduce using rule 61 (Var)]
    EQ         reduce using rule 43 (Expression)
    EQ         [reduce using rule 48 (Multiplicative-Expr)]
    EQ         [reduce using rule 53 (Term)]
    EQ         [reduce using rule 61 (Var)]
    NEQ        reduce using rule 43 (Expression)
    NEQ        [reduce using rule 48 (Multiplicative-Expr)]
    NEQ        [reduce using rule 53 (Term)]
    NEQ        [reduce using rule 61 (Var)]
    LT         reduce using rule 43 (Expression)
    LT         [reduce using rule 48 (Multiplicative-Expr)]
    LT         [reduce using rule 53 (Term)]
    LT         [reduce using rule 61 (Var)]
    GT         reduce using rule 43 (Expression)
    GT         [reduce using rule 48 (Multiplicative-Expr)]
    GT         [reduce using rule 53 (Term)]
    GT         [reduce using rule 61 (Var)]
    LTE        reduce using rule 43 (Expression)
    LTE        [reduce using rule 48 (Multiplicative-Expr)]
    LTE        [reduce using rule 53 (Term)]
    LTE        [reduce using rule 61 (Var)]
    GTE        reduce using rule 43 (Expression)
    GTE        [reduce using rule 48 (Multiplicative-Expr)]
    GTE        [reduce using rule 53 (Term)]
    GTE        [reduce using rule 61 (Var)]
    $default   reduce using rule 43 (Expression)

    Bool-Expr            go to state 142
    Relation-And-Expr    go to state 58
    Relation-Expr        go to state 59
    Expression           go to state 60
    Multiplicative-Expr  go to state 61
    Term                 go to state 62
    Var                  go to state 63


State 138

   13 Statement: IF Bool-Expr THEN Statement SEMICOLON ENDIF .

    $default  reduce using rule 13 (Statement)


State 139

   14 Statement: IF Bool-Expr THEN Statement SEMICOLON ELSE . Statement SEMICOLON ENDIF

    IDENT     shift, and go to state 37
    IF        shift, and go to state 38
    WHILE     shift, and go to state 39
    DO        shift, and go to state 40
    FOR       shift, and go to state 41
    CONTINUE  shift, and go to state 42
    READ      shift, and go to state 43
    WRITE     shift, and go to state 44
    RETURN    shift, and go to state 45

    $default  reduce using rule 61 (Var)

    Statement  go to state 143
    Var        go to state 47


State 140

   15 Statement: WHILE Bool-Expr BEGINLOOP Statement SEMICOLON ENDLOOP .

    $default  reduce using rule 15 (Statement)


State 141

   16 Statement: DO BEGINLOOP Statement SEMICOLON ENDLOOP WHILE . Bool-Expr

    IDENT    shift, and go to state 50
    NUMBER   shift, and go to state 51
    TRUE     shift, and go to state 52
    FALSE    shift, and go to state 53
    L_PAREN  shift, and go to state 54
    NOT      shift, and go to state 55
    UMINUS   shift, and go to state 56

    SEMICOLON  reduce using rule 23 (Bool-Expr)
    SEMICOLON  [reduce using rule 26 (Relation-And-Expr)]
    COMMA      reduce using rule 43 (Expression)
    COMMA      [reduce using rule 48 (Multiplicative-Expr)]
    COMMA      [reduce using rule 53 (Term)]
    COMMA      [reduce using rule 61 (Var)]
    OR         reduce using rule 26 (Relation-And-Expr)
    SUB        reduce using rule 48 (Multiplicative-Expr)
    SUB        [reduce using rule 53 (Term)]
    SUB        [reduce using rule 61 (Var)]
    ADD        reduce using rule 48 (Multiplicative-Expr)
    ADD        [reduce using rule 53 (Term)]
    ADD        [reduce using rule 61 (Var)]
    MULT       reduce using rule 53 (Term)
    MULT       [reduce using rule 61 (Var)]
    DIV        reduce using rule 53 (Term)
    DIV        [reduce using rule 61 (Var)]
    MOD        reduce using rule 53 (Term)
    MOD        [reduce using rule 61 (Var)]
    EQ         reduce using rule 43 (Expression)
    EQ         [reduce using rule 48 (Multiplicative-Expr)]
    EQ         [reduce using rule 53 (Term)]
    EQ         [reduce using rule 61 (Var)]
    NEQ        reduce using rule 43 (Expression)
    NEQ        [reduce using rule 48 (Multiplicative-Expr)]
    NEQ        [reduce using rule 53 (Term)]
    NEQ        [reduce using rule 61 (Var)]
    LT         reduce using rule 43 (Expression)
    LT         [reduce using rule 48 (Multiplicative-Expr)]
    LT         [reduce using rule 53 (Term)]
    LT         [reduce using rule 61 (Var)]
    GT         reduce using rule 43 (Expression)
    GT         [reduce using rule 48 (Multiplicative-Expr)]
    GT         [reduce using rule 53 (Term)]
    GT         [reduce using rule 61 (Var)]
    LTE        reduce using rule 43 (Expression)
    LTE        [reduce using rule 48 (Multiplicative-Expr)]
    LTE        [reduce using rule 53 (Term)]
    LTE        [reduce using rule 61 (Var)]
    GTE        reduce using rule 43 (Expression)
    GTE        [reduce using rule 48 (Multiplicative-Expr)]
    GTE        [reduce using rule 53 (Term)]
    GTE        [reduce using rule 61 (Var)]
    $default   reduce using rule 43 (Expression)

    Bool-Expr            go to state 144
    Relation-And-Expr    go to state 58
    Relation-Expr        go to state 59
    Expression           go to state 60
    Multiplicative-Expr  go to state 61
    Term                 go to state 62
    Var                  go to state 63


State 142

   17 Statement: FOR Var ASSIGN NUMBER SEMICOLON Bool-Expr . SEMICOLON Var ASSIGN Expression BEGINLOOP Statement SEMICOLON ENDLOOP

    SEMICOLON  shift, and go to state 145


State 143

   14 Statement: IF Bool-Expr THEN Statement SEMICOLON ELSE Statement . SEMICOLON ENDIF
   22          | Statement . SEMICOLON Statement

    SEMICOLON  shift, and go to state 146


State 144

   16 Statement: DO BEGINLOOP Statement SEMICOLON ENDLOOP WHILE Bool-Expr .

    $default  reduce using rule 16 (Statement)


State 145

   17 Statement: FOR Var ASSIGN NUMBER SEMICOLON Bool-Expr SEMICOLON . Var ASSIGN Expression BEGINLOOP Statement SEMICOLON ENDLOOP

    IDENT  shift, and go to state 37

    $default  reduce using rule 61 (Var)

    Var  go to state 147


State 146

   14 Statement: IF Bool-Expr THEN Statement SEMICOLON ELSE Statement SEMICOLON . ENDIF
   22          | Statement SEMICOLON . Statement

    IDENT     shift, and go to state 37
    IF        shift, and go to state 38
    ENDIF     shift, and go to state 148
    WHILE     shift, and go to state 39
    DO        shift, and go to state 40
    FOR       shift, and go to state 41
    CONTINUE  shift, and go to state 42
    READ      shift, and go to state 43
    WRITE     shift, and go to state 44
    RETURN    shift, and go to state 45

    $default  reduce using rule 61 (Var)

    Statement  go to state 106
    Var        go to state 47


State 147

   17 Statement: FOR Var ASSIGN NUMBER SEMICOLON Bool-Expr SEMICOLON Var . ASSIGN Expression BEGINLOOP Statement SEMICOLON ENDLOOP
   64 Var: Var . COMMA Var

    COMMA   shift, and go to state 72
    ASSIGN  shift, and go to state 149


State 148

   14 Statement: IF Bool-Expr THEN Statement SEMICOLON ELSE Statement SEMICOLON ENDIF .

    $default  reduce using rule 14 (Statement)


State 149

   17 Statement: FOR Var ASSIGN NUMBER SEMICOLON Bool-Expr SEMICOLON Var ASSIGN . Expression BEGINLOOP Statement SEMICOLON ENDLOOP

    IDENT    shift, and go to state 50
    NUMBER   shift, and go to state 51
    L_PAREN  shift, and go to state 69
    UMINUS   shift, and go to state 56

    BEGINLOOP  reduce using rule 43 (Expression)
    BEGINLOOP  [reduce using rule 48 (Multiplicative-Expr)]
    BEGINLOOP  [reduce using rule 53 (Term)]
    BEGINLOOP  [reduce using rule 61 (Var)]
    COMMA      reduce using rule 43 (Expression)
    COMMA      [reduce using rule 48 (Multiplicative-Expr)]
    COMMA      [reduce using rule 53 (Term)]
    COMMA      [reduce using rule 61 (Var)]
    SUB        reduce using rule 48 (Multiplicative-Expr)
    SUB        [reduce using rule 53 (Term)]
    SUB        [reduce using rule 61 (Var)]
    ADD        reduce using rule 48 (Multiplicative-Expr)
    ADD        [reduce using rule 53 (Term)]
    ADD        [reduce using rule 61 (Var)]
    MULT       reduce using rule 53 (Term)
    MULT       [reduce using rule 61 (Var)]
    DIV        reduce using rule 53 (Term)
    DIV        [reduce using rule 61 (Var)]
    MOD        reduce using rule 53 (Term)
    MOD        [reduce using rule 61 (Var)]
    $default   reduce using rule 53 (Term)

    Expression           go to state 150
    Multiplicative-Expr  go to state 61
    Term                 go to state 62
    Var                  go to state 63


State 150

   17 Statement: FOR Var ASSIGN NUMBER SEMICOLON Bool-Expr SEMICOLON Var ASSIGN Expression . BEGINLOOP Statement SEMICOLON ENDLOOP
   47 Expression: Expression . COMMA Expression

    BEGINLOOP  shift, and go to state 151
    COMMA      shift, and go to state 88


State 151

   17 Statement: FOR Var ASSIGN NUMBER SEMICOLON Bool-Expr SEMICOLON Var ASSIGN Expression BEGINLOOP . Statement SEMICOLON ENDLOOP

    IDENT     shift, and go to state 37
    IF        shift, and go to state 38
    WHILE     shift, and go to state 39
    DO        shift, and go to state 40
    FOR       shift, and go to state 41
    CONTINUE  shift, and go to state 42
    READ      shift, and go to state 43
    WRITE     shift, and go to state 44
    RETURN    shift, and go to state 45

    $default  reduce using rule 61 (Var)

    Statement  go to state 152
    Var        go to state 47


State 152

   17 Statement: FOR Var ASSIGN NUMBER SEMICOLON Bool-Expr SEMICOLON Var ASSIGN Expression BEGINLOOP Statement . SEMICOLON ENDLOOP
   22          | Statement . SEMICOLON Statement

    SEMICOLON  shift, and go to state 153


State 153

   17 Statement: FOR Var ASSIGN NUMBER SEMICOLON Bool-Expr SEMICOLON Var ASSIGN Expression BEGINLOOP Statement SEMICOLON . ENDLOOP
   22          | Statement SEMICOLON . Statement

    IDENT     shift, and go to state 37
    IF        shift, and go to state 38
    WHILE     shift, and go to state 39
    DO        shift, and go to state 40
    FOR       shift, and go to state 41
    ENDLOOP   shift, and go to state 154
    CONTINUE  shift, and go to state 42
    READ      shift, and go to state 43
    WRITE     shift, and go to state 44
    RETURN    shift, and go to state 45

    $default  reduce using rule 61 (Var)

    Statement  go to state 106
    Var        go to state 47


State 154

   17 Statement: FOR Var ASSIGN NUMBER SEMICOLON Bool-Expr SEMICOLON Var ASSIGN Expression BEGINLOOP Statement SEMICOLON ENDLOOP .

    $default  reduce using rule 17 (Statement)
